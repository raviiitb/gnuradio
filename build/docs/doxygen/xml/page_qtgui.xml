<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="page_qtgui" kind="page">
    <compoundname>page_qtgui</compoundname>
    <title>QT Graphical User Interface</title>
    <detaileddescription>
<sect1 id="page_vocoder_1Introduction">
<title>Introduction</title>
<para>This is the gr-qtgui package. It contains various QT-based graphical user interface blocks that add graphical sinks to a GNU Radio flowgraph. The Python namespaces is in gnuradio.qtgui, which would be normally imported as:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/>from<sp/>gnuradio<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>qtgui</highlight></codeline>
</programlisting></para><para>See the Doxygen documentation for details about the blocks available in this package. The relevant blocks are listed in the <ref refid="group__qtgui__blk" kindref="compound">QT Graphical Interfaces</ref> group.</para><para>A quick listing of the details can be found in Python after importing by using:</para><para><programlisting><codeline><highlight class="normal"><sp/><sp/><sp/><sp/>help(qtgui)</highlight></codeline>
</programlisting></para></sect1>
<sect1 id="page_qtgui_1Dependencies">
<title>Dependencies</title>
<para>The QT GUI blocks require the following dependencies.</para><para><itemizedlist>
<listitem><para>QtCore (version &gt;= 4.4) </para></listitem>
<listitem><para>QtGui (version &gt;= 4.4) </para></listitem>
<listitem><para>QtOpenGL (version &gt;= 4.4) </para></listitem>
<listitem><para>PyQt4 for Qt4 (version &gt;= 4.4) </para></listitem>
<listitem><para>Qwt (version &gt;= 5.2) </para></listitem>
<listitem><para>PyQwt5 for Qt4 (version &gt;= 5.2)</para></listitem>
</itemizedlist>
</para></sect1>
<sect1 id="page_qtgui_1Usage">
<title>Usage</title>
<para>To use the qtgui interface, a bit of boiler-plate lines must be included. First, the sink is defined, then it must be exposed from C++ into Python using the &quot;sip.wrapinstance&quot; command, and finally, the &quot;show&quot; method is run on the new Python object. This sets up the QT environment to show the widget, but the qApplication must also be launched.</para><para>In the &quot;main&quot; function of the code, the qApp is retrieved. Then, after the GNU Radio top block is started (remember that start() is a non-blocking call to launch the main thread of the flowgraph), the qapp&apos;s &quot;exec_()&quot; function is called. This function is a blocking call while the GUI is alive.</para><para><programlisting><codeline><highlight class="normal">from<sp/>PyQt4<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Qt</highlight></codeline>
<codeline><highlight class="normal">from<sp/>gnuradio.qtgui<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>qtgui</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys,<sp/>sip</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">grclass(gr.top_block):</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>....</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self.snk<sp/>=<sp/>qtgui.sink_c(1024,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#fftsize</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samp_rate,<sp/><sp/><sp/><sp/><sp/><sp/>#bw</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;QT<sp/>GUI<sp/>Plot&quot;)<sp/><sp/>#<ref refid="volk_8tmpl_8h_1ace3ce91bc48f67ffceaeed6831ee2c57" kindref="member">name</ref></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self.snk_win<sp/>=<sp/>sip.wrapinstance(self.snk.pyqwidget(),<sp/>Qt.QWidget)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>self.snk_win.show()</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">def<sp/><ref refid="aadvark_8h_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>():</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>qapp<sp/>=<sp/>Qt.QApplication(sys.argv)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tb<sp/>=<sp/>grclass()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tb.start()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>qapp.exec_()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tb.stop()</highlight></codeline>
</programlisting> </para></sect1>
    </detaileddescription>
  </compounddef>
</doxygen>

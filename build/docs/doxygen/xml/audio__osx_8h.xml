<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="audio__osx_8h" kind="file">
    <compoundname>audio_osx.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="1958">
        <label>audio_osx.h</label>
        <link refid="audio_osx.h"/>
        <childnode refid="1959" relation="include">
        </childnode>
        <childnode refid="1960" relation="include">
        </childnode>
      </node>
      <node id="1960">
        <label>string.h</label>
      </node>
      <node id="1959">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="audio__osx_8h_1a27a20cf4b47e56e8123cb830ff87a7a7" prot="public" static="no">
        <name>CheckErrorAndThrow</name>
        <param><defname>err</defname></param>
        <param><defname>what</defname></param>
        <param><defname>throw_str</defname></param>
        <initializer>if (err) {								\
    OSStatus error = static_cast&lt;OSStatus&gt;(err);			\
    char err_str[4];							\
    strncpy (err_str, (char*)(&amp;err), 4);				\
    std::cerr &lt;&lt; what &lt;&lt; std::endl;					\
    std::cerr &lt;&lt; &quot;  Error# &quot; &lt;&lt; error &lt;&lt; &quot; (&apos;&quot; &lt;&lt; err_str		\
	      &lt;&lt; &quot;&apos;)&quot; &lt;&lt; std::endl;					\
    std::cerr &lt;&lt; &quot;  &quot; &lt;&lt; __FILE__ &lt;&lt; &quot;:&quot; &lt;&lt; __LINE__ &lt;&lt; std::endl;	\
    fflush (stderr);							\
    throw std::runtime_error (throw_str);				\
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-audio/lib/osx/audio_osx.h" line="40" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-audio/lib/osx/audio_osx.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="audio__osx_8h_1a6fa8b81fa5ddf2872f9e9d5e6d6be5bd" prot="public" static="no">
        <name>CheckError</name>
        <param><defname>err</defname></param>
        <param><defname>what</defname></param>
        <initializer>if (err) {								\
    OSStatus error = static_cast&lt;OSStatus&gt;(err);			\
    char err_str[4];							\
    strncpy (err_str, (char*)(&amp;err), 4);				\
    std::cerr &lt;&lt; what &lt;&lt; std::endl;					\
    std::cerr &lt;&lt; &quot;  Error# &quot; &lt;&lt; error &lt;&lt; &quot; (&apos;&quot; &lt;&lt; err_str		\
	      &lt;&lt; &quot;&apos;)&quot; &lt;&lt; std::endl;					\
    std::cerr &lt;&lt; &quot;  &quot; &lt;&lt; __FILE__ &lt;&lt; &quot;:&quot; &lt;&lt; __LINE__ &lt;&lt; std::endl;	\
    fflush (stderr);							\
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-audio/lib/osx/audio_osx.h" line="52" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-audio/lib/osx/audio_osx.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="audio__osx_8h_1a5d40806895ae2eeb8ea323ec02a5a18d" prot="public" static="no">
        <name>GR_PCM_ENDIANNESS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-audio/lib/osx/audio_osx.h" line="57" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-audio/lib/osx/audio_osx.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexzh/gr_alex/gnuradio/gr-audio/lib/osx/audio_osx.h"/>
  </compounddef>
</doxygen>

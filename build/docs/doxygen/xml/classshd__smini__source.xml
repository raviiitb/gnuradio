<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classshd__smini__source" kind="class" prot="public">
    <compoundname>shd_smini_source</compoundname>
    <basecompoundref refid="classgr__sync__block" prot="public" virt="virtual">gr_sync_block</basecompoundref>
    <includes refid="gr__shd__smini__source_8h" local="no">gr_shd_smini_source.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classshd__smini__source_1ac3171e42394143beba68c5ae99943556" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void shd_smini_source::set_subdev_spec</definition>
        <argsstring>(const std::string &amp;spec, size_t mboard=0)=0</argsstring>
        <name>set_subdev_spec</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>spec</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mboard</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the subdevice specification. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>spec</parametername>
</parameternamelist>
<parameterdescription>
<para>the subdev spec markup string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mboard</parametername>
</parameternamelist>
<parameterdescription>
<para>the motherboard index 0 to M-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="47"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1afa4e1c074383e939b54b5a9560651420" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void shd_smini_source::set_samp_rate</definition>
        <argsstring>(double rate)=0</argsstring>
        <name>set_samp_rate</name>
        <param>
          <type>double</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the sample rate for the smini device. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>a new rate in Sps </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1ad233f7cbd098934157ff274ba9bf31a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double shd_smini_source::get_samp_rate</definition>
        <argsstring>(void)=0</argsstring>
        <name>get_samp_rate</name>
        <param>
          <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the sample rate for the smini device. This is the actual sample rate and may differ from the rate set. <simplesect kind="return"><para>the actual rate in Sps </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="60"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a214610019935b0a8cfd109df9103a3f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>shd::tune_result_t</type>
        <definition>virtual shd::tune_result_t shd_smini_source::set_center_freq</definition>
        <argsstring>(const shd::tune_request_t tune_request, size_t chan=0)=0</argsstring>
        <name>set_center_freq</name>
        <param>
          <type>const shd::tune_request_t</type>
          <declname>tune_request</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tune the smini device to the desired center frequency. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tune_request</parametername>
</parameternamelist>
<parameterdescription>
<para>the tune request instructions </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a tune result with the actual frequencies </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="71"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a06249f0a74ad5374c590c042c7486ab8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>shd::tune_result_t</type>
        <definition>shd::tune_result_t shd_smini_source::set_center_freq</definition>
        <argsstring>(double freq, size_t chan=0)</argsstring>
        <name>set_center_freq</name>
        <param>
          <type>double</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tune the smini device to the desired center frequency. This is a wrapper around set center freq so that in this case, the user can pass a single frequency in the call through swig. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>freq</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired frequency in Hz </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a tune result with the actual frequencies </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="81" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1ad67235709c7220f42ebbdf094efb9d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double shd_smini_source::get_center_freq</definition>
        <argsstring>(size_t chan=0)=0</argsstring>
        <name>get_center_freq</name>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the center frequency. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the frequency in Hz </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="90"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a7a26acf654f7b54d9e3a9d13e409de07" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>shd::freq_range_t</type>
        <definition>virtual shd::freq_range_t shd_smini_source::get_freq_range</definition>
        <argsstring>(size_t chan=0)=0</argsstring>
        <name>get_freq_range</name>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the tunable frequency range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the frequency range in Hz </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="97"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a33c88ddc88aa467a7a7f91b9ff232263" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void shd_smini_source::set_gain</definition>
        <argsstring>(double gain, size_t chan=0)=0</argsstring>
        <name>set_gain</name>
        <param>
          <type>double</type>
          <declname>gain</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the gain for the dboard. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gain</parametername>
</parameternamelist>
<parameterdescription>
<para>the gain in dB </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="104"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1adfd2e4bc2ad7b3576657d11160ad4167" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void shd_smini_source::set_gain</definition>
        <argsstring>(double gain, const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>set_gain</name>
        <param>
          <type>double</type>
          <declname>gain</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the named gain on the dboard. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gain</parametername>
</parameternamelist>
<parameterdescription>
<para>the gain in dB </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the gain stage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a56c514368cb5b33ae559bb700c741057" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double shd_smini_source::get_gain</definition>
        <argsstring>(size_t chan=0)=0</argsstring>
        <name>get_gain</name>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the actual dboard gain setting. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the actual gain in dB </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1ad1a3654224d5edcde6fd99b41d246f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double shd_smini_source::get_gain</definition>
        <argsstring>(const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>get_gain</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the actual dboard gain setting of named stage. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the gain stage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the actual gain in dB </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="129"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a32569769954664ec09e28986f2469c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>virtual std::vector&lt;std::string&gt; shd_smini_source::get_gain_names</definition>
        <argsstring>(size_t chan=0)=0</argsstring>
        <name>get_gain_names</name>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the actual dboard gain setting of named stage. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the actual gain in dB </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="136"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1af2ef8eb79295d620b54f697a3a14a34c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>shd::gain_range_t</type>
        <definition>virtual shd::gain_range_t shd_smini_source::get_gain_range</definition>
        <argsstring>(size_t chan=0)=0</argsstring>
        <name>get_gain_range</name>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the settable gain range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the gain range in dB </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="143"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1adcca2c3c1a7b6c0bc57539db844b1da9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>shd::gain_range_t</type>
        <definition>virtual shd::gain_range_t shd_smini_source::get_gain_range</definition>
        <argsstring>(const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>get_gain_range</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the settable gain range. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the gain stage </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the gain range in dB </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="152"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a1c49dad9ac3919fc64b324836842877c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void shd_smini_source::set_antenna</definition>
        <argsstring>(const std::string &amp;ant, size_t chan=0)=0</argsstring>
        <name>set_antenna</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ant</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the antenna to use. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ant</parametername>
</parameternamelist>
<parameterdescription>
<para>the antenna string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="160"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a20cbc055bfd3cb978fadfb656aeee6d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string shd_smini_source::get_antenna</definition>
        <argsstring>(size_t chan=0)=0</argsstring>
        <name>get_antenna</name>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the antenna in use. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the antenna string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="167"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a61ccad67d1c2d85f5999cba6b63f862c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>virtual std::vector&lt;std::string&gt; shd_smini_source::get_antennas</definition>
        <argsstring>(size_t chan=0)=0</argsstring>
        <name>get_antennas</name>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a list of possible antennas. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of antenna strings </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="174"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a1478270c61accd0218763f77567a73bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void shd_smini_source::set_bandwidth</definition>
        <argsstring>(double bandwidth, size_t chan=0)=0</argsstring>
        <name>set_bandwidth</name>
        <param>
          <type>double</type>
          <declname>bandwidth</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the subdevice bandpass filter. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bandwidth</parametername>
</parameternamelist>
<parameterdescription>
<para>the filter bandwidth in Hz </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="182"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a76cd397790909d126ac4e0705c39d390" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>shd::sensor_value_t</type>
        <definition>virtual shd::sensor_value_t shd_smini_source::get_dboard_sensor</definition>
        <argsstring>(const std::string &amp;name, size_t chan=0)=0</argsstring>
        <name>get_dboard_sensor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a daughterboard sensor value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the sensor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a sensor value object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="191"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1ab1eacdf9cedc5bc20085ad2e7c4e99b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>virtual std::vector&lt;std::string&gt; shd_smini_source::get_dboard_sensor_names</definition>
        <argsstring>(size_t chan=0)=0</argsstring>
        <name>get_dboard_sensor_names</name>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a list of possible daughterboard sensor names. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>chan</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel index 0 to N-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of sensor names </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="198"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1af764fe01f740e894e359bb44528be461" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>shd::sensor_value_t</type>
        <definition>virtual shd::sensor_value_t shd_smini_source::get_mboard_sensor</definition>
        <argsstring>(const std::string &amp;name, size_t mboard=0)=0</argsstring>
        <name>get_mboard_sensor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mboard</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a motherboard sensor value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the sensor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mboard</parametername>
</parameternamelist>
<parameterdescription>
<para>the motherboard index 0 to M-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a sensor value object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="207"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a22372f1146cb4eae39140fc8a1b51285" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>virtual std::vector&lt;std::string&gt; shd_smini_source::get_mboard_sensor_names</definition>
        <argsstring>(size_t mboard=0)=0</argsstring>
        <name>get_mboard_sensor_names</name>
        <param>
          <type>size_t</type>
          <declname>mboard</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a list of possible motherboard sensor names. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mboard</parametername>
</parameternamelist>
<parameterdescription>
<para>the motherboard index 0 to M-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a vector of sensor names </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="214"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1acaf3f089f5671eb269fe8fd2915a3fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void shd_smini_source::set_clock_config</definition>
        <argsstring>(const shd::clock_config_t &amp;clock_config, size_t mboard=0)=0</argsstring>
        <name>set_clock_config</name>
        <param>
          <type>const shd::clock_config_t &amp;</type>
          <declname>clock_config</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mboard</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the clock configuration. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>clock_config</parametername>
</parameternamelist>
<parameterdescription>
<para>the new configuration </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mboard</parametername>
</parameternamelist>
<parameterdescription>
<para>the motherboard index 0 to M-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="222"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a5e27ab240a17000af54434b63a418c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double shd_smini_source::get_clock_rate</definition>
        <argsstring>(size_t mboard=0)=0</argsstring>
        <name>get_clock_rate</name>
        <param>
          <type>size_t</type>
          <declname>mboard</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the master clock rate. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mboard</parametername>
</parameternamelist>
<parameterdescription>
<para>the motherboard index 0 to M-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the clock rate in Hz </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="229"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1af989f2ef0ca62d6c4593551c6fb71c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void shd_smini_source::set_clock_rate</definition>
        <argsstring>(double rate, size_t mboard=0)=0</argsstring>
        <name>set_clock_rate</name>
        <param>
          <type>double</type>
          <declname>rate</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mboard</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the master clock rate. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rate</parametername>
</parameternamelist>
<parameterdescription>
<para>the new rate in Hz </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mboard</parametername>
</parameternamelist>
<parameterdescription>
<para>the motherboard index 0 to M-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="237"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1ac1f1627ebe508234c61a55e1ed1b3bd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>shd::time_spec_t</type>
        <definition>virtual shd::time_spec_t shd_smini_source::get_time_now</definition>
        <argsstring>(size_t mboard=0)=0</argsstring>
        <name>get_time_now</name>
        <param>
          <type>size_t</type>
          <declname>mboard</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current time registers. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mboard</parametername>
</parameternamelist>
<parameterdescription>
<para>the motherboard index 0 to M-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the current smini time </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="244"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a439f5fec3cd7db7cd5a7d55b8d7936de" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>shd::time_spec_t</type>
        <definition>virtual shd::time_spec_t shd_smini_source::get_time_last_pps</definition>
        <argsstring>(size_t mboard=0)=0</argsstring>
        <name>get_time_last_pps</name>
        <param>
          <type>size_t</type>
          <declname>mboard</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the time when the last pps pulse occured. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mboard</parametername>
</parameternamelist>
<parameterdescription>
<para>the motherboard index 0 to M-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the current smini time </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="251"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1acff0d82c6dd0c50f8d775b6828bae495" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void shd_smini_source::set_time_now</definition>
        <argsstring>(const shd::time_spec_t &amp;time_spec, size_t mboard=0)=0</argsstring>
        <name>set_time_now</name>
        <param>
          <type>const shd::time_spec_t &amp;</type>
          <declname>time_spec</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>mboard</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the time registers immediately. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time_spec</parametername>
</parameternamelist>
<parameterdescription>
<para>the new time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mboard</parametername>
</parameternamelist>
<parameterdescription>
<para>the motherboard index 0 to M-1 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="259"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1aaf6c77b2ab859f86cc35ad529b06afd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void shd_smini_source::set_time_next_pps</definition>
        <argsstring>(const shd::time_spec_t &amp;time_spec)=0</argsstring>
        <name>set_time_next_pps</name>
        <param>
          <type>const shd::time_spec_t &amp;</type>
          <declname>time_spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the time registers at the next pps. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time_spec</parametername>
</parameternamelist>
<parameterdescription>
<para>the new time </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="265"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1ac2e724ace77782917f50b9d830e1fe6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void shd_smini_source::set_time_unknown_pps</definition>
        <argsstring>(const shd::time_spec_t &amp;time_spec)=0</argsstring>
        <name>set_time_unknown_pps</name>
        <param>
          <type>const shd::time_spec_t &amp;</type>
          <declname>time_spec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sync the time registers with an unknown pps edge. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time_spec</parametername>
</parameternamelist>
<parameterdescription>
<para>the new time </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="271"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a1ce9ecb098658e04c864c5ae0d3955cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>shd::xmini::dboard_iface::sptr</type>
        <definition>virtual shd::xmini::dboard_iface::sptr shd_smini_source::get_dboard_iface</definition>
        <argsstring>(size_t chan=0)=0</argsstring>
        <name>get_dboard_iface</name>
        <param>
          <type>size_t</type>
          <declname>chan</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to the underlying shd dboard iface object. <simplesect kind="return"><para>the dboard_iface object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="277"/>
      </memberdef>
      <memberdef kind="function" id="classshd__smini__source_1a871c7dbdb125e80598930cc506ac9736" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>shd::xmini::multi_xmini::sptr</type>
        <definition>virtual shd::xmini::multi_xmini::sptr shd_smini_source::get_device</definition>
        <argsstring>(void)=0</argsstring>
        <name>get_device</name>
        <param>
          <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get access to the underlying shd device object. <simplesect kind="return"><para>the multi smini device object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="283"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6940">
        <label>shd_smini_source</label>
        <link refid="classshd__smini__source"/>
        <childnode refid="6941" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6944">
        <label>gr_msg_accepter</label>
        <link refid="classgr__msg__accepter"/>
        <childnode refid="6945" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6941">
        <label>gr_sync_block</label>
        <link refid="classgr__sync__block"/>
        <childnode refid="6942" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6942">
        <label>gr_block</label>
        <link refid="classgr__block"/>
        <childnode refid="6943" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6945">
        <label>gruel::msg_accepter</label>
        <link refid="classgruel_1_1msg__accepter"/>
      </node>
      <node id="6943">
        <label>gr_basic_block</label>
        <link refid="classgr__basic__block"/>
        <childnode refid="6944" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6946">
        <label>shd_smini_source</label>
        <link refid="classshd__smini__source"/>
        <childnode refid="6947" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6950">
        <label>gr_msg_accepter</label>
        <link refid="classgr__msg__accepter"/>
        <childnode refid="6951" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6947">
        <label>gr_sync_block</label>
        <link refid="classgr__sync__block"/>
        <childnode refid="6948" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6948">
        <label>gr_block</label>
        <link refid="classgr__block"/>
        <childnode refid="6949" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6952">
        <label>boost::shared_ptr&lt; gr_io_signature &gt;</label>
        <link refid="classboost_1_1shared__ptr"/>
        <childnode refid="6953" relation="usage">
          <edgelabel>px</edgelabel>
        </childnode>
      </node>
      <node id="6955">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="6951">
        <label>gruel::msg_accepter</label>
        <link refid="classgruel_1_1msg__accepter"/>
      </node>
      <node id="6953">
        <label>gr_io_signature</label>
        <link refid="classgr__io__signature"/>
      </node>
      <node id="6949">
        <label>gr_basic_block</label>
        <link refid="classgr__basic__block"/>
        <childnode refid="6950" relation="public-inheritance">
        </childnode>
        <childnode refid="6952" relation="usage">
          <edgelabel>d_input_signature</edgelabel>
          <edgelabel>d_output_signature</edgelabel>
        </childnode>
        <childnode refid="6954" relation="usage">
          <edgelabel>d_name</edgelabel>
        </childnode>
      </node>
      <node id="6954">
        <label>std::string</label>
        <childnode refid="6955" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" line="38" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-shd/include/gr_shd_smini_source.h" bodystart="37" bodyend="284"/>
    <listofallmembers>
      <member refid="classgr__block_1a7578dece9d597abe61db91aae8a0df83" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>add_item_tag</name></member>
      <member refid="classgr__block_1ac8ef6a9b0086e00d80f10ccc8a7df321" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>add_item_tag</name></member>
      <member refid="classgr__block_1a0ac966add9d0c994aa06c61d30ef8335" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>alignment</name></member>
      <member refid="classgr__basic__block_1a5c90b7c003ddd61f8df6bef2aceeab3da0abd1c82699481ffa502e5bb8d7bdaec" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>BLACK</name></member>
      <member refid="classgr__basic__block_1a50a714df9c3ce8c03854a09ac84e589b" prot="public" virt="virtual"><scope>shd_smini_source</scope><name>check_topology</name></member>
      <member refid="classgr__basic__block_1a1cedb1704b6c00977c681b378ede384c" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>color</name></member>
      <member refid="classgr__block_1ac76b4c53af762a819bca003d5b5cb4d1" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>consume</name></member>
      <member refid="classgr__block_1a64e9a2096975841b72ff3c1662d27df9" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>consume_each</name></member>
      <member refid="classgr__basic__block_1a7fb7e692e3b98a82410b396ef263bb41" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>d_color</name></member>
      <member refid="classgr__basic__block_1a2c8da0c28bbbfb0e759278c9b9459e96" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>d_input_signature</name></member>
      <member refid="classgr__basic__block_1afd352cc073ef28012d4d079a863f5401" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>d_name</name></member>
      <member refid="classgr__basic__block_1a76d64ed7a79566e3310306ae6f194d75" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>d_output_signature</name></member>
      <member refid="classgr__basic__block_1a0d2999c04f47327f93dd7def5dc704f8" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>d_unique_id</name></member>
      <member refid="classgr__block_1afb276858409ac55d62fca1c87d7d4083" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>detail</name></member>
      <member refid="classgr__block_1ab4eeb29440f674815ab3b44b4fb0c34d" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>fixed_rate</name></member>
      <member refid="classgr__sync__block_1a0cbbc0ce275498411248e678038710b2" prot="public" virt="virtual"><scope>shd_smini_source</scope><name>fixed_rate_ninput_to_noutput</name></member>
      <member refid="classgr__sync__block_1adaecb00ae09408c22e46c44d09aad53e" prot="public" virt="virtual"><scope>shd_smini_source</scope><name>fixed_rate_noutput_to_ninput</name></member>
      <member refid="classgr__sync__block_1a1327e83509baf039aa3c816ea81a8f22" prot="public" virt="virtual"><scope>shd_smini_source</scope><name>forecast</name></member>
      <member refid="classgr__sync__block_1a56ca60b6bc20a3510f71d961891fa81b" prot="public" virt="virtual"><scope>shd_smini_source</scope><name>general_work</name></member>
      <member refid="classshd__smini__source_1a20cbc055bfd3cb978fadfb656aeee6d6" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_antenna</name></member>
      <member refid="classshd__smini__source_1a61ccad67d1c2d85f5999cba6b63f862c" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_antennas</name></member>
      <member refid="classshd__smini__source_1ad67235709c7220f42ebbdf094efb9d8b" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_center_freq</name></member>
      <member refid="classshd__smini__source_1a5e27ab240a17000af54434b63a418c00" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_clock_rate</name></member>
      <member refid="classshd__smini__source_1a1ce9ecb098658e04c864c5ae0d3955cf" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_dboard_iface</name></member>
      <member refid="classshd__smini__source_1a76cd397790909d126ac4e0705c39d390" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_dboard_sensor</name></member>
      <member refid="classshd__smini__source_1ab1eacdf9cedc5bc20085ad2e7c4e99b2" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_dboard_sensor_names</name></member>
      <member refid="classshd__smini__source_1a871c7dbdb125e80598930cc506ac9736" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_device</name></member>
      <member refid="classshd__smini__source_1a7a26acf654f7b54d9e3a9d13e409de07" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_freq_range</name></member>
      <member refid="classshd__smini__source_1a56c514368cb5b33ae559bb700c741057" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_gain</name></member>
      <member refid="classshd__smini__source_1ad1a3654224d5edcde6fd99b41d246f74" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_gain</name></member>
      <member refid="classshd__smini__source_1a32569769954664ec09e28986f2469c7b" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_gain_names</name></member>
      <member refid="classshd__smini__source_1af2ef8eb79295d620b54f697a3a14a34c" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_gain_range</name></member>
      <member refid="classshd__smini__source_1adcca2c3c1a7b6c0bc57539db844b1da9" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_gain_range</name></member>
      <member refid="classshd__smini__source_1af764fe01f740e894e359bb44528be461" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_mboard_sensor</name></member>
      <member refid="classshd__smini__source_1a22372f1146cb4eae39140fc8a1b51285" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_mboard_sensor_names</name></member>
      <member refid="classshd__smini__source_1ad233f7cbd098934157ff274ba9bf31a6" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_samp_rate</name></member>
      <member refid="classgr__block_1a54f69c4cd5ef5b05ac58d0128256def1" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>get_tags_in_range</name></member>
      <member refid="classgr__block_1ab2650baa0c05713fc04664e69dde565d" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>get_tags_in_range</name></member>
      <member refid="classshd__smini__source_1a439f5fec3cd7db7cd5a7d55b8d7936de" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_time_last_pps</name></member>
      <member refid="classshd__smini__source_1ac1f1627ebe508234c61a55e1ed1b3bd8" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>get_time_now</name></member>
      <member refid="classgr__basic__block_1a84d1e93b57e52efb18a5aa90a3eaf2db" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>gr_basic_block</name></member>
      <member refid="classgr__basic__block_1a1183eee484f58953a2fed4c792e46245" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>gr_basic_block</name></member>
      <member refid="classgr__block_1ac94442f2da43c516ce4b8d3eb15fc316" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>gr_block</name></member>
      <member refid="classgr__block_1a268510acce1f94c0a60c5273f4948641" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>gr_block</name></member>
      <member refid="classgr__basic__block_1a69b41e361328cea911d69e1ec0bc50ff" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>gr_flat_flowgraph</name></member>
      <member refid="classgr__basic__block_1adf5bf4523d6dd698aa770e3da8f2b30d" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>gr_flowgraph</name></member>
      <member refid="classgr__msg__accepter_1a0482adcd6e89d2a441c8768737b68c21" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>gr_msg_accepter</name></member>
      <member refid="classgr__sync__block_1a8e8100cc8cafbc89a0cd64fbc2fc4153" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>gr_sync_block</name></member>
      <member refid="classgr__sync__block_1a832d8dad2dbd38e8e9cfa0b954d37c87" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>gr_sync_block</name></member>
      <member refid="classgr__basic__block_1affab9e232776d20a9b3772f545559611" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>gr_tpb_thread_body</name></member>
      <member refid="classgr__basic__block_1a5c90b7c003ddd61f8df6bef2aceeab3daa6cce7ec34a3f9cf917e545a743dc89f" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>GREY</name></member>
      <member refid="classgr__block_1ad3b305a663f4b5b5c4e17070d00f05d9" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>history</name></member>
      <member refid="classgr__basic__block_1a58f6d05e85931200f3771d3e50741281" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>input_signature</name></member>
      <member refid="classgr__block_1a1e7452c9abae22f1e5591a6132ca6a2a" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>is_unaligned</name></member>
      <member refid="classgruel_1_1msg__accepter_1a501f4d98d2f933c64d00a766f26b0280" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>msg_accepter</name></member>
      <member refid="classgr__basic__block_1aa12a20d8b8eab341da935530d29299d2" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>name</name></member>
      <member refid="classgr__block_1a6ecd7d572bcde020949502875dfa737e" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>nitems_read</name></member>
      <member refid="classgr__block_1a476660b94dd365f8b59075fdbcb79cd2" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>nitems_written</name></member>
      <member refid="classgr__block_1ade8590e9cba9ccfe1b870be46b1416c2" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>output_multiple</name></member>
      <member refid="classgr__block_1a245374fe2959e13f0b4311c5bcf4a7f7" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>output_multiple_set</name></member>
      <member refid="classgr__basic__block_1add68b96f012dfe352700b4fd1c3a184a" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>output_signature</name></member>
      <member refid="classgr__msg__accepter_1a18aa82b4055d3908a4a7d71b05009d8d" prot="public" virt="virtual"><scope>shd_smini_source</scope><name>post</name></member>
      <member refid="classgr__block_1a7617c4eac84059b96d1a4da40c6d542c" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>produce</name></member>
      <member refid="classgr__block_1aa9df8c4d3fb92bde98900831546f8b97" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>relative_rate</name></member>
      <member refid="classgr__block_1a6863065f43aac33e6167f3b622de7cd0" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>set_alignment</name></member>
      <member refid="classshd__smini__source_1a1c49dad9ac3919fc64b324836842877c" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_antenna</name></member>
      <member refid="classshd__smini__source_1a1478270c61accd0218763f77567a73bd" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_bandwidth</name></member>
      <member refid="classshd__smini__source_1a214610019935b0a8cfd109df9103a3f0" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_center_freq</name></member>
      <member refid="classshd__smini__source_1a06249f0a74ad5374c590c042c7486ab8" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>set_center_freq</name></member>
      <member refid="classshd__smini__source_1acaf3f089f5671eb269fe8fd2915a3fbd" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_clock_config</name></member>
      <member refid="classshd__smini__source_1af989f2ef0ca62d6c4593551c6fb71c02" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_clock_rate</name></member>
      <member refid="classgr__basic__block_1a0821ef947158670d53bf0739f3c8877b" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>set_color</name></member>
      <member refid="classgr__block_1a26b61f2c2ca308c3bde82f01d3e9650b" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>set_detail</name></member>
      <member refid="classgr__block_1a176a95343488a9a760c8edf8bb08db20" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>set_fixed_rate</name></member>
      <member refid="classshd__smini__source_1a33c88ddc88aa467a7a7f91b9ff232263" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_gain</name></member>
      <member refid="classshd__smini__source_1adfd2e4bc2ad7b3576657d11160ad4167" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_gain</name></member>
      <member refid="classgr__block_1a7c1c85a2d47f72255efd821a6f98f7ba" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>set_history</name></member>
      <member refid="classgr__basic__block_1a419d0fbba0ca02d822cbc299b979de54" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>set_input_signature</name></member>
      <member refid="classgr__block_1adafb375e8453f129062bb5924907a61f" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>set_is_unaligned</name></member>
      <member refid="classgr__basic__block_1a4e78d61b09a066f5719dbb9c18f3d441" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>set_msg_handler</name></member>
      <member refid="classgr__block_1a14e8b799f920e52afb93fac413b1a729" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>set_output_multiple</name></member>
      <member refid="classgr__basic__block_1a949b6ad69ebfdf423835265db99cf63d" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>set_output_signature</name></member>
      <member refid="classgr__block_1ab9dc7e6d30692bbfa65fc7c4eef6fc9d" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>set_relative_rate</name></member>
      <member refid="classshd__smini__source_1afa4e1c074383e939b54b5a9560651420" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_samp_rate</name></member>
      <member refid="classshd__smini__source_1ac3171e42394143beba68c5ae99943556" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_subdev_spec</name></member>
      <member refid="classgr__block_1af9bce945f28950c1800d8deb6bb997a1" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>set_tag_propagation_policy</name></member>
      <member refid="classshd__smini__source_1aaf6c77b2ab859f86cc35ad529b06afd6" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_time_next_pps</name></member>
      <member refid="classshd__smini__source_1acff0d82c6dd0c50f8d775b6828bae495" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_time_now</name></member>
      <member refid="classshd__smini__source_1ac2e724ace77782917f50b9d830e1fe6e" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>set_time_unknown_pps</name></member>
      <member refid="classgr__block_1a1f7f6b204a5d383f5903b222aa838eb3" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>set_unaligned</name></member>
      <member refid="classgr__block_1a49ea94a86f3199f23563bb837633ea1f" prot="public" virt="virtual"><scope>shd_smini_source</scope><name>start</name></member>
      <member refid="classgr__block_1a53c2c89c037e4e393b75414d605e36b1" prot="public" virt="virtual"><scope>shd_smini_source</scope><name>stop</name></member>
      <member refid="classgr__block_1a46e8fbf665a9a3182a9cc4d3e4402118" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>tag_propagation_policy</name></member>
      <member refid="classgr__block_1a32561c88f124ea07881879fe79840f61" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>tag_propagation_policy_t</name></member>
      <member refid="classgr__basic__block_1a87b0e931b388d349dacd6a5010b5739c" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>to_basic_block</name></member>
      <member refid="classgr__block_1a32561c88f124ea07881879fe79840f61ac59dabb0af9fac19958d18378f3cfbfb" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>TPP_ALL_TO_ALL</name></member>
      <member refid="classgr__block_1a32561c88f124ea07881879fe79840f61ad472255a4873399940aec9d614d82287" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>TPP_DONT</name></member>
      <member refid="classgr__block_1a32561c88f124ea07881879fe79840f61a98228946b0f3b3887230269c9ba5a60f" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>TPP_ONE_TO_ONE</name></member>
      <member refid="classgr__block_1a811b7548c5573f890ff2baf8a0f5c981" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>unaligned</name></member>
      <member refid="classgr__basic__block_1aa2a2947744d418c5470fbf4e623b58fe" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>unique_id</name></member>
      <member refid="classgr__basic__block_1a5c90b7c003ddd61f8df6bef2aceeab3d" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>vcolor</name></member>
      <member refid="classgr__basic__block_1a5c90b7c003ddd61f8df6bef2aceeab3da476d594a077e729bad0f2cfa2008c899" prot="protected" virt="non-virtual"><scope>shd_smini_source</scope><name>WHITE</name></member>
      <member refid="classgr__sync__block_1a0c523f4285a6eb690f677ee6295ab117" prot="public" virt="pure-virtual"><scope>shd_smini_source</scope><name>work</name></member>
      <member refid="classgr__block_1af026aa236701757fd5f71129daad883ca248a1e0554813ce26007ff5ec1530392" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>WORK_CALLED_PRODUCE</name></member>
      <member refid="classgr__block_1af026aa236701757fd5f71129daad883ca221c2211857dcee81fb2bbb97fe6b223" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>WORK_DONE</name></member>
      <member refid="classgr__basic__block_1a5bc14d27d53b7b57a960a47cc255e3f9" prot="public" virt="virtual"><scope>shd_smini_source</scope><name>~gr_basic_block</name></member>
      <member refid="classgr__block_1a19133eeffa5f8e6743342f375551ad0c" prot="public" virt="virtual"><scope>shd_smini_source</scope><name>~gr_block</name></member>
      <member refid="classgr__msg__accepter_1ad2ee9c687b775b08ce0e27e913ed8a7d" prot="public" virt="non-virtual"><scope>shd_smini_source</scope><name>~gr_msg_accepter</name></member>
      <member refid="classgruel_1_1msg__accepter_1a043f8b7de22a127df5dd9b3dfe76e2da" prot="public" virt="virtual"><scope>shd_smini_source</scope><name>~msg_accepter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

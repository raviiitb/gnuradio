<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classfsm" kind="class" prot="public">
    <compoundname>fsm</compoundname>
    <includes refid="fsm_8h" local="no">fsm.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfsm_1a0db8c2e0883c4d606951f8d4d3944cb1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int fsm::d_I</definition>
        <argsstring></argsstring>
        <name>d_I</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="40" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfsm_1a2089aebd7d04d188d003d862f66c6d1d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int fsm::d_S</definition>
        <argsstring></argsstring>
        <name>d_S</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="42" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfsm_1a2f0fb14d4c64f569013871f9dc037cc1" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int fsm::d_O</definition>
        <argsstring></argsstring>
        <name>d_O</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="44" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfsm_1a2162993c93c5cd73f31395c1de9aafbe" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; fsm::d_NS</definition>
        <argsstring></argsstring>
        <name>d_NS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="47" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfsm_1aedc7e14477239d892e08d56cc59cf3ea" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; fsm::d_OS</definition>
        <argsstring></argsstring>
        <name>d_OS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="50" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfsm_1aa63f5582b6c02fab56e90f1605b6852c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;int&gt; &gt; fsm::d_PS</definition>
        <argsstring></argsstring>
        <name>d_PS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="52" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfsm_1a5a94e03aeea4c5d5c9c18049bd5e6f1d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;int&gt; &gt; fsm::d_PI</definition>
        <argsstring></argsstring>
        <name>d_PI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="57" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfsm_1a2c0a4c5410e2af3929299a76484fb389" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; fsm::d_TMl</definition>
        <argsstring></argsstring>
        <name>d_TMl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="61" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfsm_1a0ddaae6e9dc21ae6b59940ee8a0b477d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; fsm::d_TMi</definition>
        <argsstring></argsstring>
        <name>d_TMi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="64" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classfsm_1a74dedb11be976d9423d4bc80f13b28ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>void fsm::generate_PS_PI</definition>
        <argsstring>()</argsstring>
        <name>generate_PS_PI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="65"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1a1f556ca4e237adae9630cc10ddb4f73c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>void fsm::generate_TM</definition>
        <argsstring>()</argsstring>
        <name>generate_TM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="66"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1ac43974d93933251a6ade67c25dd9d321" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool fsm::find_es</definition>
        <argsstring>(int es)</argsstring>
        <name>find_es</name>
        <param>
          <type>int</type>
          <declname>es</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfsm_1a186a9a7368d04e7d98e6976c870baca1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fsm::fsm</definition>
        <argsstring>()</argsstring>
        <name>fsm</name>
        <briefdescription>
<para>Constructor to create an uninitialized FSMS. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="72"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1af908445fb560ef461835f1c3a18016ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fsm::fsm</definition>
        <argsstring>(const fsm &amp;FSM)</argsstring>
        <name>fsm</name>
        <param>
          <type>const <ref refid="classfsm" kindref="compound">fsm</ref> &amp;</type>
          <declname>FSM</declname>
        </param>
        <briefdescription>
<para>Constructor to copy an FSMS. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="76"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1a2d6d52f3b3380b5b594d0635cbf9fdd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fsm::fsm</definition>
        <argsstring>(int I, int S, int O, const std::vector&lt; int &gt; &amp;NS, const std::vector&lt; int &gt; &amp;OS)</argsstring>
        <name>fsm</name>
        <param>
          <type>int</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>S</declname>
        </param>
        <param>
          <type>int</type>
          <declname>O</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>NS</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>OS</declname>
        </param>
        <briefdescription>
<para>Constructor to to create an FSMS. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>I</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of possible input symbols. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>S</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of possible FSM states. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>O</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of possible output symbols. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NS</parametername>
</parameternamelist>
<parameterdescription>
<para>A mapping from (current state, input symbol) to next state. next_state = NS[current_state * I + input_symbol] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>OS</parametername>
</parameternamelist>
<parameterdescription>
<para>A mapping from (current state, input symbol) to output symbol. output_symbol = OS[current_state * I + input_symbol] </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1afd89d3a7abe74449c78e444e21ba65fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fsm::fsm</definition>
        <argsstring>(const char *name)</argsstring>
        <name>fsm</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructor to create an FSMS from file contents. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>filename </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="96"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1a98222d2d02e9d652ab433fda4df7dc66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fsm::fsm</definition>
        <argsstring>(int k, int n, const std::vector&lt; int &gt; &amp;G)</argsstring>
        <name>fsm</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>G</declname>
        </param>
        <briefdescription>
<para>Creates an FSMS from the generator matrix of a (n, k) binary convolutional code. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>??? </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>??? </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>G</parametername>
</parameternamelist>
<parameterdescription>
<para>??? </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1ac0a4045b2a911557d593f14a66c44367" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fsm::fsm</definition>
        <argsstring>(int mod_size, int ch_length)</argsstring>
        <name>fsm</name>
        <param>
          <type>int</type>
          <declname>mod_size</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ch_length</declname>
        </param>
        <briefdescription>
<para>Creates an FSMS describing ISI. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mod_size</parametername>
</parameternamelist>
<parameterdescription>
<para>modulation size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ch_length</parametername>
</parameternamelist>
<parameterdescription>
<para>channel length </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1a81f2ebaafddf25b4c1aa418bff459e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fsm::fsm</definition>
        <argsstring>(int P, int M, int L)</argsstring>
        <name>fsm</name>
        <param>
          <type>int</type>
          <declname>P</declname>
        </param>
        <param>
          <type>int</type>
          <declname>M</declname>
        </param>
        <param>
          <type>int</type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Creates an FSMS describing the trellis for a CPM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>P</parametername>
</parameternamelist>
<parameterdescription>
<para>???? h=K/P (relatively prime) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>M</parametername>
</parameternamelist>
<parameterdescription>
<para>alphabet size </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>pulse duration</para></parameterdescription>
</parameteritem>
</parameterlist>
This FSM is based on the paper by B. Rimoldi &quot;A decomposition approach to CPM&quot;, IEEE Trans. Info Theory, March 1988 See also my own notes at <ulink url="http://www.eecs.umich.edu/~anastas/docs/cpm.pdf">http://www.eecs.umich.edu/~anastas/docs/cpm.pdf</ulink> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1ac6783c0f811e842c5368e69ec79bc6be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fsm::fsm</definition>
        <argsstring>(const fsm &amp;FSM1, const fsm &amp;FSM2)</argsstring>
        <name>fsm</name>
        <param>
          <type>const <ref refid="classfsm" kindref="compound">fsm</ref> &amp;</type>
          <declname>FSM1</declname>
        </param>
        <param>
          <type>const <ref refid="classfsm" kindref="compound">fsm</ref> &amp;</type>
          <declname>FSM2</declname>
        </param>
        <briefdescription>
<para>Creates an FSMS describing the joint trellis of two FSMs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSM1</parametername>
</parameternamelist>
<parameterdescription>
<para>first FSMS </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>FSM2</parametername>
</parameternamelist>
<parameterdescription>
<para>second FSMS </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="132"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1a1782872dc0fa453ec798423263fdc3fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>fsm::fsm</definition>
        <argsstring>(const fsm &amp;FSM, int n)</argsstring>
        <name>fsm</name>
        <param>
          <type>const <ref refid="classfsm" kindref="compound">fsm</ref> &amp;</type>
          <declname>FSM</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Creates an FSMS representing n stages through the originial FSM (AKA radix-n FSM). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>FSM</parametername>
</parameternamelist>
<parameterdescription>
<para>Original FSMs </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of stages. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="139"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1abefd9fd219d4755c4bb2e8b50649fa44" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int fsm::I</definition>
        <argsstring>() const </argsstring>
        <name>I</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="140" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1a8936ef142a30c4a508371ab9ffbc2b96" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int fsm::S</definition>
        <argsstring>() const </argsstring>
        <name>S</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="141" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1aae6f3dbbcdf85f5f8d43ce00bcfb9eb0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int fsm::O</definition>
        <argsstring>() const </argsstring>
        <name>O</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="142" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1ac26a317a2b73bb885a5fc1812ac5159c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; fsm::NS</definition>
        <argsstring>() const </argsstring>
        <name>NS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="143" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1a339554ffc3f74952e2cac49d5414fff1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; fsm::OS</definition>
        <argsstring>() const </argsstring>
        <name>OS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="144" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1a9477aa18ff75881235e1c2648bc46cff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; std::vector&lt;int&gt; &gt;&amp; fsm::PS</definition>
        <argsstring>() const </argsstring>
        <name>PS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="145" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1a5aff353214751b6d1bbce1495c9cf8ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; std::vector&lt;int&gt; &gt;&amp; fsm::PI</definition>
        <argsstring>() const </argsstring>
        <name>PI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="146" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1afac5ed3c857cc75fcb654386d30259b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; fsm::TMi</definition>
        <argsstring>() const </argsstring>
        <name>TMi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="147" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1a7806664145c7cb325ccdb04948736f6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; int &gt; &amp;</type>
        <definition>const std::vector&lt;int&gt;&amp; fsm::TMl</definition>
        <argsstring>() const </argsstring>
        <name>TMl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="148" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1a6dcf93654163e7db294fac2c7375b8e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>void fsm::write_trellis_svg</definition>
        <argsstring>(std::string filename, int number_stages)</argsstring>
        <name>write_trellis_svg</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>number_stages</declname>
        </param>
        <briefdescription>
<para>Creates an svg image of the trellis representation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>filename </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>number_stages</parametername>
</parameternamelist>
<parameterdescription>
<para>???? </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="156"/>
      </memberdef>
      <memberdef kind="function" id="classfsm_1ab8f5c2f0cc9c45adb3ebeeb033f7af12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>void fsm::write_fsm_txt</definition>
        <argsstring>(std::string filename)</argsstring>
        <name>write_fsm_txt</name>
        <param>
          <type>std::string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Write the FSMS to a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>filename </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Finite State Machine Specification class. </para>    </briefdescription>
    <detaileddescription>
<para>An instance of this class represents a finite state machine specification (FSMS) rather than the FSM itself. It particular the state of the FSM is not stored within an instance of this class. </para>    </detaileddescription>
    <location file="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" line="37" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-trellis/src/lib/fsm.h" bodystart="37" bodyend="164"/>
    <listofallmembers>
      <member refid="classfsm_1a0db8c2e0883c4d606951f8d4d3944cb1" prot="private" virt="non-virtual"><scope>fsm</scope><name>d_I</name></member>
      <member refid="classfsm_1a2162993c93c5cd73f31395c1de9aafbe" prot="private" virt="non-virtual"><scope>fsm</scope><name>d_NS</name></member>
      <member refid="classfsm_1a2f0fb14d4c64f569013871f9dc037cc1" prot="private" virt="non-virtual"><scope>fsm</scope><name>d_O</name></member>
      <member refid="classfsm_1aedc7e14477239d892e08d56cc59cf3ea" prot="private" virt="non-virtual"><scope>fsm</scope><name>d_OS</name></member>
      <member refid="classfsm_1a5a94e03aeea4c5d5c9c18049bd5e6f1d" prot="private" virt="non-virtual"><scope>fsm</scope><name>d_PI</name></member>
      <member refid="classfsm_1aa63f5582b6c02fab56e90f1605b6852c" prot="private" virt="non-virtual"><scope>fsm</scope><name>d_PS</name></member>
      <member refid="classfsm_1a2089aebd7d04d188d003d862f66c6d1d" prot="private" virt="non-virtual"><scope>fsm</scope><name>d_S</name></member>
      <member refid="classfsm_1a0ddaae6e9dc21ae6b59940ee8a0b477d" prot="private" virt="non-virtual"><scope>fsm</scope><name>d_TMi</name></member>
      <member refid="classfsm_1a2c0a4c5410e2af3929299a76484fb389" prot="private" virt="non-virtual"><scope>fsm</scope><name>d_TMl</name></member>
      <member refid="classfsm_1ac43974d93933251a6ade67c25dd9d321" prot="private" virt="non-virtual"><scope>fsm</scope><name>find_es</name></member>
      <member refid="classfsm_1a186a9a7368d04e7d98e6976c870baca1" prot="public" virt="non-virtual"><scope>fsm</scope><name>fsm</name></member>
      <member refid="classfsm_1af908445fb560ef461835f1c3a18016ea" prot="public" virt="non-virtual"><scope>fsm</scope><name>fsm</name></member>
      <member refid="classfsm_1a2d6d52f3b3380b5b594d0635cbf9fdd9" prot="public" virt="non-virtual"><scope>fsm</scope><name>fsm</name></member>
      <member refid="classfsm_1afd89d3a7abe74449c78e444e21ba65fe" prot="public" virt="non-virtual"><scope>fsm</scope><name>fsm</name></member>
      <member refid="classfsm_1a98222d2d02e9d652ab433fda4df7dc66" prot="public" virt="non-virtual"><scope>fsm</scope><name>fsm</name></member>
      <member refid="classfsm_1ac0a4045b2a911557d593f14a66c44367" prot="public" virt="non-virtual"><scope>fsm</scope><name>fsm</name></member>
      <member refid="classfsm_1a81f2ebaafddf25b4c1aa418bff459e21" prot="public" virt="non-virtual"><scope>fsm</scope><name>fsm</name></member>
      <member refid="classfsm_1ac6783c0f811e842c5368e69ec79bc6be" prot="public" virt="non-virtual"><scope>fsm</scope><name>fsm</name></member>
      <member refid="classfsm_1a1782872dc0fa453ec798423263fdc3fb" prot="public" virt="non-virtual"><scope>fsm</scope><name>fsm</name></member>
      <member refid="classfsm_1a74dedb11be976d9423d4bc80f13b28ad" prot="private" virt="non-virtual"><scope>fsm</scope><name>generate_PS_PI</name></member>
      <member refid="classfsm_1a1f556ca4e237adae9630cc10ddb4f73c" prot="private" virt="non-virtual"><scope>fsm</scope><name>generate_TM</name></member>
      <member refid="classfsm_1abefd9fd219d4755c4bb2e8b50649fa44" prot="public" virt="non-virtual"><scope>fsm</scope><name>I</name></member>
      <member refid="classfsm_1ac26a317a2b73bb885a5fc1812ac5159c" prot="public" virt="non-virtual"><scope>fsm</scope><name>NS</name></member>
      <member refid="classfsm_1aae6f3dbbcdf85f5f8d43ce00bcfb9eb0" prot="public" virt="non-virtual"><scope>fsm</scope><name>O</name></member>
      <member refid="classfsm_1a339554ffc3f74952e2cac49d5414fff1" prot="public" virt="non-virtual"><scope>fsm</scope><name>OS</name></member>
      <member refid="classfsm_1a5aff353214751b6d1bbce1495c9cf8ea" prot="public" virt="non-virtual"><scope>fsm</scope><name>PI</name></member>
      <member refid="classfsm_1a9477aa18ff75881235e1c2648bc46cff" prot="public" virt="non-virtual"><scope>fsm</scope><name>PS</name></member>
      <member refid="classfsm_1a8936ef142a30c4a508371ab9ffbc2b96" prot="public" virt="non-virtual"><scope>fsm</scope><name>S</name></member>
      <member refid="classfsm_1afac5ed3c857cc75fcb654386d30259b8" prot="public" virt="non-virtual"><scope>fsm</scope><name>TMi</name></member>
      <member refid="classfsm_1a7806664145c7cb325ccdb04948736f6d" prot="public" virt="non-virtual"><scope>fsm</scope><name>TMl</name></member>
      <member refid="classfsm_1ab8f5c2f0cc9c45adb3ebeeb033f7af12" prot="public" virt="non-virtual"><scope>fsm</scope><name>write_fsm_txt</name></member>
      <member refid="classfsm_1a6dcf93654163e7db294fac2c7375b8e8" prot="public" virt="non-virtual"><scope>fsm</scope><name>write_trellis_svg</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classmicrotune__4702" kind="class" prot="public">
    <compoundname>microtune_4702</compoundname>
    <basecompoundref refid="classmicrotune__xxxx" prot="public" virt="non-virtual">microtune_xxxx</basecompoundref>
    <includes refid="microtune__4702_8h" local="no">microtune_4702.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classmicrotune__4702_1adadf3916db66c349ae138129a053700a" prot="private" static="no" mutable="no">
        <type><ref refid="classboost_1_1shared__ptr" kindref="compound">i2c_sptr</ref></type>
        <definition>i2c_sptr microtune_4702::d_i2c</definition>
        <argsstring></argsstring>
        <name>d_i2c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" line="62" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrotune__4702_1a6c77ed1c3e67deb891e6f981d8f559ab" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int microtune_4702::d_i2c_addr</definition>
        <argsstring></argsstring>
        <name>d_i2c_addr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" line="63" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrotune__4702_1af1006ca8ee017c98b92dca61d89a11e4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int microtune_4702::d_reference_divider</definition>
        <argsstring></argsstring>
        <name>d_reference_divider</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" line="64" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classmicrotune__4702_1a3f49c927de737dbb07ec58406cb425f3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool microtune_4702::d_prescaler</definition>
        <argsstring></argsstring>
        <name>d_prescaler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" line="65" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmicrotune__4702_1acfcca76501b8a86d2754e4cdf531692b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>microtune_4702::microtune_4702</definition>
        <argsstring>(i2c_sptr i2c, int i2c_addr)</argsstring>
        <name>microtune_4702</name>
        <param>
          <type><ref refid="classboost_1_1shared__ptr" kindref="compound">i2c_sptr</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i2c_addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" line="36"/>
      </memberdef>
      <memberdef kind="function" id="classmicrotune__4702_1a98c76dd1a614b3b3f22dcad00a42b035" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual microtune_4702::~microtune_4702</definition>
        <argsstring>()</argsstring>
        <name>~microtune_4702</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" line="38"/>
      </memberdef>
      <memberdef kind="function" id="classmicrotune__4702_1aa55a60d3d2cf8d8ef30f701fcf8edff2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool microtune_4702::set_RF_freq</definition>
        <argsstring>(double freq, double *actual_freq)</argsstring>
        <name>set_RF_freq</name>
        <reimplements refid="classmicrotune__xxxx_1a76ecad84f1f57ce34585056b18ac8d99">set_RF_freq</reimplements>
        <param>
          <type>double</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>actual_freq</declname>
        </param>
        <briefdescription>
<para>select RF frequency to be tuned to output frequency. <computeroutput>freq</computeroutput> is the requested frequency in Hz, <computeroutput>actual_freq</computeroutput> is set to the actual frequency tuned. It takes about 100 ms for the PLL to settle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true iff sucessful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" line="48"/>
      </memberdef>
      <memberdef kind="function" id="classmicrotune__4702_1a096b82e283df729ea282f8ceaaca55b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool microtune_4702::pll_locked_p</definition>
        <argsstring>()</argsstring>
        <name>pll_locked_p</name>
        <reimplements refid="classmicrotune__xxxx_1a28ce9c429b571c70a7fa41dd07d11b9a">pll_locked_p</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true iff PLL is locked </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" line="53"/>
      </memberdef>
      <memberdef kind="function" id="classmicrotune__4702_1af39ce035b569a357df81e8b460998d47" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double microtune_4702::get_output_freq</definition>
        <argsstring>()</argsstring>
        <name>get_output_freq</name>
        <reimplements refid="classmicrotune__xxxx_1ad2f4da6893763446700314258495d8cc">get_output_freq</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the output frequency of the tuner in Hz. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" line="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>class for controlling microtune 4702 tuner module </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6207">
        <label>microtune_xxxx</label>
        <link refid="classmicrotune__xxxx"/>
      </node>
      <node id="6206">
        <label>microtune_4702</label>
        <link refid="classmicrotune__4702"/>
        <childnode refid="6207" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6209">
        <label>microtune_xxxx</label>
        <link refid="classmicrotune__xxxx"/>
      </node>
      <node id="6208">
        <label>microtune_4702</label>
        <link refid="classmicrotune__4702"/>
        <childnode refid="6209" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" line="34" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4702.h" bodystart="34" bodyend="68"/>
    <listofallmembers>
      <member refid="classmicrotune__4702_1adadf3916db66c349ae138129a053700a" prot="private" virt="non-virtual"><scope>microtune_4702</scope><name>d_i2c</name></member>
      <member refid="classmicrotune__4702_1a6c77ed1c3e67deb891e6f981d8f559ab" prot="private" virt="non-virtual"><scope>microtune_4702</scope><name>d_i2c_addr</name></member>
      <member refid="classmicrotune__4702_1a3f49c927de737dbb07ec58406cb425f3" prot="private" virt="non-virtual"><scope>microtune_4702</scope><name>d_prescaler</name></member>
      <member refid="classmicrotune__4702_1af1006ca8ee017c98b92dca61d89a11e4" prot="private" virt="non-virtual"><scope>microtune_4702</scope><name>d_reference_divider</name></member>
      <member refid="classmicrotune__4702_1af39ce035b569a357df81e8b460998d47" prot="public" virt="virtual"><scope>microtune_4702</scope><name>get_output_freq</name></member>
      <member refid="classmicrotune__4702_1acfcca76501b8a86d2754e4cdf531692b" prot="public" virt="non-virtual"><scope>microtune_4702</scope><name>microtune_4702</name></member>
      <member refid="classmicrotune__xxxx_1a0b1644c14ab5ad28eeb29301cceb68ff" prot="public" virt="non-virtual"><scope>microtune_4702</scope><name>microtune_xxxx</name></member>
      <member refid="classmicrotune__4702_1a096b82e283df729ea282f8ceaaca55b7" prot="public" virt="virtual"><scope>microtune_4702</scope><name>pll_locked_p</name></member>
      <member refid="classmicrotune__4702_1aa55a60d3d2cf8d8ef30f701fcf8edff2" prot="public" virt="virtual"><scope>microtune_4702</scope><name>set_RF_freq</name></member>
      <member refid="classmicrotune__xxxx_1a7cf6ff57a511f70662f02f303dcef0e1" prot="public" virt="non-virtual" ambiguityscope="microtune_xxxx::"><scope>microtune_4702</scope><name>set_RF_freq</name></member>
      <member refid="classmicrotune__4702_1a98c76dd1a614b3b3f22dcad00a42b035" prot="public" virt="virtual"><scope>microtune_4702</scope><name>~microtune_4702</name></member>
      <member refid="classmicrotune__xxxx_1af1dd4385969182a435cc3f0d254503df" prot="public" virt="virtual"><scope>microtune_4702</scope><name>~microtune_xxxx</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

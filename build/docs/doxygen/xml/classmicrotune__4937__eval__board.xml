<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classmicrotune__4937__eval__board" kind="class" prot="public">
    <compoundname>microtune_4937_eval_board</compoundname>
    <basecompoundref refid="classmicrotune__xxxx__eval__board" prot="public" virt="non-virtual">microtune_xxxx_eval_board</basecompoundref>
    <includes refid="microtune__4937__eval__board_8h" local="no">microtune_4937_eval_board.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classmicrotune__4937__eval__board_1ae4a0a125573ebd5cf5bfa0af5fc8f12c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>microtune_4937_eval_board::microtune_4937_eval_board</definition>
        <argsstring>(int which_pp=0)</argsstring>
        <name>microtune_4937_eval_board</name>
        <param>
          <type>int</type>
          <declname>which_pp</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4937_eval_board.h" line="36"/>
      </memberdef>
      <memberdef kind="function" id="classmicrotune__4937__eval__board_1a7bdc174ef08bf83466b739e28ab788e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>microtune_4937_eval_board::~microtune_4937_eval_board</definition>
        <argsstring>()</argsstring>
        <name>~microtune_4937_eval_board</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4937_eval_board.h" line="37"/>
      </memberdef>
      <memberdef kind="function" id="classmicrotune__4937__eval__board_1a146c33244133af23d28dd9a76863d53f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="volk_8tmpl_8h_1a8dc2b7da310a28e667530ba0e8ca4cc4" kindref="member">void</ref></type>
        <definition>virtual void microtune_4937_eval_board::set_AGC</definition>
        <argsstring>(float value_0_1000)</argsstring>
        <name>set_AGC</name>
        <reimplements refid="classmicrotune__xxxx__eval__board_1a309de3cd072b0414f2f76498d1536cf0">set_AGC</reimplements>
        <param>
          <type>float</type>
          <declname>value_0_1000</declname>
        </param>
        <briefdescription>
<para>set RF and IF AGC levels together (scale [0, 1000]) </para>        </briefdescription>
        <detaileddescription>
<para>This provides a simple linear interface for adjusting both the RF and IF gain in consort. This is the easy to use interface. 0 corresponds to minimum gain. 1000 corresponds to maximum gain. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4937_eval_board.h" line="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>control microtune 4937 eval board </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6223">
        <label>microtune_4937_eval_board</label>
        <link refid="classmicrotune__4937__eval__board"/>
        <childnode refid="6224" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6224">
        <label>microtune_xxxx_eval_board</label>
        <link refid="classmicrotune__xxxx__eval__board"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6227">
        <label>microtune_xxxx</label>
        <link refid="classmicrotune__xxxx"/>
      </node>
      <node id="6225">
        <label>microtune_4937_eval_board</label>
        <link refid="classmicrotune__4937__eval__board"/>
        <childnode refid="6226" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6226">
        <label>microtune_xxxx_eval_board</label>
        <link refid="classmicrotune__xxxx__eval__board"/>
        <childnode refid="6227" relation="usage">
          <edgelabel>d_tuner</edgelabel>
        </childnode>
        <childnode refid="6228" relation="usage">
          <edgelabel>d_i2c</edgelabel>
        </childnode>
        <childnode refid="6230" relation="usage">
          <edgelabel>d_ppio</edgelabel>
        </childnode>
      </node>
      <node id="6228">
        <label>boost::shared_ptr&lt; i2c &gt;</label>
        <link refid="classboost_1_1shared__ptr"/>
        <childnode refid="6229" relation="usage">
          <edgelabel>px</edgelabel>
        </childnode>
      </node>
      <node id="6229">
        <label>i2c</label>
        <link refid="classi2c"/>
      </node>
      <node id="6231">
        <label>ppio</label>
        <link refid="classppio"/>
      </node>
      <node id="6230">
        <label>boost::shared_ptr&lt; ppio &gt;</label>
        <link refid="classboost_1_1shared__ptr"/>
        <childnode refid="6231" relation="usage">
          <edgelabel>px</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4937_eval_board.h" line="34" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/microtune_4937_eval_board.h" bodystart="34" bodyend="47"/>
    <listofallmembers>
      <member refid="classmicrotune__xxxx__eval__board_1a7c33c3a304b3a3837aebe0b939795908" prot="public" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>board_present_p</name></member>
      <member refid="classmicrotune__xxxx__eval__board_1a6fc807ce2050b39fa5bf887a657837ae" prot="protected" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>d_i2c</name></member>
      <member refid="classmicrotune__xxxx__eval__board_1a61be9a0910599fbbdd4b0164b5453843" prot="protected" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>d_ppio</name></member>
      <member refid="classmicrotune__xxxx__eval__board_1a7734fb4f9c1e4843b149628c2c38d3a5" prot="protected" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>d_tuner</name></member>
      <member refid="classmicrotune__xxxx__eval__board_1acb8c57351294269244d6ce6269f230eb" prot="public" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>get_output_freq</name></member>
      <member refid="classmicrotune__4937__eval__board_1ae4a0a125573ebd5cf5bfa0af5fc8f12c" prot="public" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>microtune_4937_eval_board</name></member>
      <member refid="classmicrotune__xxxx__eval__board_1ad0effba516749e66b4bcd2d2da394d22" prot="public" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>microtune_xxxx_eval_board</name></member>
      <member refid="classmicrotune__xxxx__eval__board_1aea5c168dd36594567dac976c6b308e98" prot="public" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>pll_locked_p</name></member>
      <member refid="classmicrotune__4937__eval__board_1a146c33244133af23d28dd9a76863d53f" prot="public" virt="virtual"><scope>microtune_4937_eval_board</scope><name>set_AGC</name></member>
      <member refid="classmicrotune__xxxx__eval__board_1aa013afa53992233db6020ee1e973f486" prot="public" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>set_IF_AGC_voltage</name></member>
      <member refid="classmicrotune__xxxx__eval__board_1adb0dc9f8e36e6960d92993f46a6c6909" prot="public" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>set_RF_AGC_voltage</name></member>
      <member refid="classmicrotune__xxxx__eval__board_1afc1ab59edaaba910a2351298cc4da462" prot="public" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>set_RF_freq</name></member>
      <member refid="classmicrotune__xxxx__eval__board_1a559253e6340481426b5cc67e2c89973b" prot="public" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>set_RF_freq</name></member>
      <member refid="classmicrotune__4937__eval__board_1a7bdc174ef08bf83466b739e28ab788e7" prot="public" virt="non-virtual"><scope>microtune_4937_eval_board</scope><name>~microtune_4937_eval_board</name></member>
      <member refid="classmicrotune__xxxx__eval__board_1a4f2924691c7683ed5263c53582961283" prot="public" virt="virtual"><scope>microtune_4937_eval_board</scope><name>~microtune_xxxx_eval_board</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_trellis', [dirname(__file__)])
        except ImportError:
            import _trellis
            return _trellis
        if fp is not None:
            try:
                _mod = imp.load_module('_trellis', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _trellis = swig_import_helper()
    del swig_import_helper
else:
    import _trellis
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    """Proxy of C++ swig::SwigPyIterator class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _trellis.delete_SwigPyIterator
    __del__ = lambda self : None;
    def value(self):
        """value(self) -> PyObject"""
        return _trellis.SwigPyIterator_value(self)

    def incr(self, n = 1):
        """incr(self, size_t n = 1) -> SwigPyIterator"""
        return _trellis.SwigPyIterator_incr(self, n)

    def decr(self, n = 1):
        """decr(self, size_t n = 1) -> SwigPyIterator"""
        return _trellis.SwigPyIterator_decr(self, n)

    def distance(self, *args, **kwargs):
        """distance(self, SwigPyIterator x) -> ptrdiff_t"""
        return _trellis.SwigPyIterator_distance(self, *args, **kwargs)

    def equal(self, *args, **kwargs):
        """equal(self, SwigPyIterator x) -> bool"""
        return _trellis.SwigPyIterator_equal(self, *args, **kwargs)

    def copy(self):
        """copy(self) -> SwigPyIterator"""
        return _trellis.SwigPyIterator_copy(self)

    def next(self):
        """next(self) -> PyObject"""
        return _trellis.SwigPyIterator_next(self)

    def __next__(self):
        """__next__(self) -> PyObject"""
        return _trellis.SwigPyIterator___next__(self)

    def previous(self):
        """previous(self) -> PyObject"""
        return _trellis.SwigPyIterator_previous(self)

    def advance(self, *args, **kwargs):
        """advance(self, ptrdiff_t n) -> SwigPyIterator"""
        return _trellis.SwigPyIterator_advance(self, *args, **kwargs)

    def __eq__(self, *args, **kwargs):
        """__eq__(self, SwigPyIterator x) -> bool"""
        return _trellis.SwigPyIterator___eq__(self, *args, **kwargs)

    def __ne__(self, *args, **kwargs):
        """__ne__(self, SwigPyIterator x) -> bool"""
        return _trellis.SwigPyIterator___ne__(self, *args, **kwargs)

    def __iadd__(self, *args, **kwargs):
        """__iadd__(self, ptrdiff_t n) -> SwigPyIterator"""
        return _trellis.SwigPyIterator___iadd__(self, *args, **kwargs)

    def __isub__(self, *args, **kwargs):
        """__isub__(self, ptrdiff_t n) -> SwigPyIterator"""
        return _trellis.SwigPyIterator___isub__(self, *args, **kwargs)

    def __add__(self, *args, **kwargs):
        """__add__(self, ptrdiff_t n) -> SwigPyIterator"""
        return _trellis.SwigPyIterator___add__(self, *args, **kwargs)

    def __sub__(self, *args):
        """
        __sub__(self, ptrdiff_t n) -> SwigPyIterator
        __sub__(self, SwigPyIterator x) -> ptrdiff_t
        """
        return _trellis.SwigPyIterator___sub__(self, *args)

    def __iter__(self): return self
SwigPyIterator_swigregister = _trellis.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class fsm(object):
    """
    Finite State Machine Specification class.

    An instance of this class represents a finite state machine specification (FSMS) rather than the FSM itself. It particular the state of the FSM is not stored within an instance of this class.
    """
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> fsm
        __init__(self, fsm FSM) -> fsm
        __init__(self, int I, int S, int O, __dummy_3__ NS, __dummy_3__ OS) -> fsm
        __init__(self, char name) -> fsm
        __init__(self, int k, int n, __dummy_3__ G) -> fsm
        __init__(self, int mod_size, int ch_length) -> fsm
        __init__(self, int P, int M, int L) -> fsm
        __init__(self, fsm FSM1, fsm FSM2) -> fsm
        __init__(self, fsm FSM, int n) -> fsm

        Constructor to create an uninitialized FSMS.
        """
        this = _trellis.new_fsm(*args)
        try: self.this.append(this)
        except: self.this = this
    def I(self):
        """I(self) -> int"""
        return _trellis.fsm_I(self)

    def S(self):
        """S(self) -> int"""
        return _trellis.fsm_S(self)

    def O(self):
        """O(self) -> int"""
        return _trellis.fsm_O(self)

    def NS(self):
        """NS(self) -> __dummy_3__"""
        return _trellis.fsm_NS(self)

    def OS(self):
        """OS(self) -> __dummy_3__"""
        return _trellis.fsm_OS(self)

    def TMi(self):
        """TMi(self) -> __dummy_3__"""
        return _trellis.fsm_TMi(self)

    def TMl(self):
        """TMl(self) -> __dummy_3__"""
        return _trellis.fsm_TMl(self)

    def write_trellis_svg(self, *args, **kwargs):
        """
        write_trellis_svg(self, string filename, int number_stages)

        Creates an svg image of the trellis representation.
        """
        return _trellis.fsm_write_trellis_svg(self, *args, **kwargs)

    def write_fsm_txt(self, *args, **kwargs):
        """
        write_fsm_txt(self, string filename)

        Write the FSMS to a file.
        """
        return _trellis.fsm_write_fsm_txt(self, *args, **kwargs)

    __swig_destroy__ = _trellis.delete_fsm
    __del__ = lambda self : None;
fsm_swigregister = _trellis.fsm_swigregister
fsm_swigregister(fsm)

class interleaver(object):
    """INTERLEAVER class."""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> interleaver
        __init__(self, interleaver INTERLEAVER) -> interleaver
        __init__(self, int K, __dummy_3__ INTER) -> interleaver
        __init__(self, char name) -> interleaver
        __init__(self, int K, int seed) -> interleaver

        INTERLEAVER class.
        """
        this = _trellis.new_interleaver(*args)
        try: self.this.append(this)
        except: self.this = this
    def K(self):
        """K(self) -> int"""
        return _trellis.interleaver_K(self)

    def INTER(self):
        """INTER(self) -> __dummy_3__"""
        return _trellis.interleaver_INTER(self)

    def DEINTER(self):
        """DEINTER(self) -> __dummy_3__"""
        return _trellis.interleaver_DEINTER(self)

    def write_interleaver_txt(self, *args, **kwargs):
        """write_interleaver_txt(self, string filename)"""
        return _trellis.interleaver_write_interleaver_txt(self, *args, **kwargs)

    __swig_destroy__ = _trellis.delete_interleaver
    __del__ = lambda self : None;
interleaver_swigregister = _trellis.interleaver_swigregister
interleaver_swigregister(interleaver)

class trellis_permutation_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_permutation)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_permutation_sptr
        __init__(self,  p) -> trellis_permutation_sptr
        """
        this = _trellis.new_trellis_permutation_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_permutation_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_permutation_sptr
    __del__ = lambda self : None;
    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_permutation_sptr_K(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_3__"""
        return _trellis.trellis_permutation_sptr_TABLE(self)

    def SYMS_PER_BLOCK(self):
        """SYMS_PER_BLOCK(self) -> int"""
        return _trellis.trellis_permutation_sptr_SYMS_PER_BLOCK(self)

    def BYTES_PER_SYMBOL(self):
        """BYTES_PER_SYMBOL(self) -> size_t"""
        return _trellis.trellis_permutation_sptr_BYTES_PER_SYMBOL(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_permutation_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_permutation_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_permutation_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_permutation_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_permutation_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_permutation_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_permutation_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_permutation_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_permutation_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_permutation_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_permutation_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_permutation_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_permutation_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_permutation_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_permutation_sptr_check_topology(self, *args, **kwargs)

trellis_permutation_sptr_swigregister = _trellis.trellis_permutation_sptr_swigregister
trellis_permutation_sptr_swigregister(trellis_permutation_sptr)

trellis_permutation_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def permutation(*args, **kwargs):
  """
    permutation(int K, __dummy_3__ TABLE, int SYMS_PER_BLOCK, size_t BYTES_PER_SYMBOL) -> trellis_permutation_sptr

    Permutation.
    """
  return _trellis.permutation(*args, **kwargs)
class trellis_siso_f_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_siso_f)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_siso_f_sptr
        __init__(self,  p) -> trellis_siso_f_sptr
        """
        this = _trellis.new_trellis_siso_f_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_siso_f_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_siso_f_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_siso_f_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_siso_f_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_siso_f_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_siso_f_sptr_SK(self)

    def POSTI(self):
        """POSTI(self) -> bool"""
        return _trellis.trellis_siso_f_sptr_POSTI(self)

    def POSTO(self):
        """POSTO(self) -> bool"""
        return _trellis.trellis_siso_f_sptr_POSTO(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_siso_f_sptr_SISO_TYPE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_siso_f_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_siso_f_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_siso_f_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_siso_f_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_siso_f_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_siso_f_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_siso_f_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_siso_f_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_siso_f_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_siso_f_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_siso_f_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_siso_f_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_siso_f_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_siso_f_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_siso_f_sptr_check_topology(self, *args, **kwargs)

trellis_siso_f_sptr_swigregister = _trellis.trellis_siso_f_sptr_swigregister
trellis_siso_f_sptr_swigregister(trellis_siso_f_sptr)

trellis_siso_f_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def siso_f(*args, **kwargs):
  """
    siso_f(fsm FSM, int K, int S0, int SK, bool POSTI, bool POSTO, 
        trellis_siso_type_t SISO_TYPE) -> trellis_siso_f_sptr
    """
  return _trellis.siso_f(*args, **kwargs)
class trellis_siso_combined_f_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_siso_combined_f)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_siso_combined_f_sptr
        __init__(self,  p) -> trellis_siso_combined_f_sptr
        """
        this = _trellis.new_trellis_siso_combined_f_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_siso_combined_f_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_siso_combined_f_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_siso_combined_f_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_siso_combined_f_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_siso_combined_f_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_siso_combined_f_sptr_SK(self)

    def POSTI(self):
        """POSTI(self) -> bool"""
        return _trellis.trellis_siso_combined_f_sptr_POSTI(self)

    def POSTO(self):
        """POSTO(self) -> bool"""
        return _trellis.trellis_siso_combined_f_sptr_POSTO(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_siso_combined_f_sptr_SISO_TYPE(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_siso_combined_f_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_4__"""
        return _trellis.trellis_siso_combined_f_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_siso_combined_f_sptr_TYPE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_siso_combined_f_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_siso_combined_f_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_siso_combined_f_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_siso_combined_f_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_siso_combined_f_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_siso_combined_f_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_siso_combined_f_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_siso_combined_f_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_siso_combined_f_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_siso_combined_f_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_siso_combined_f_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_siso_combined_f_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_siso_combined_f_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_siso_combined_f_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_siso_combined_f_sptr_check_topology(self, *args, **kwargs)

trellis_siso_combined_f_sptr_swigregister = _trellis.trellis_siso_combined_f_sptr_swigregister
trellis_siso_combined_f_sptr_swigregister(trellis_siso_combined_f_sptr)

trellis_siso_combined_f_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def siso_combined_f(*args, **kwargs):
  """
    siso_combined_f(fsm FSM, int K, int S0, int SK, bool POSTI, bool POSTO, 
        trellis_siso_type_t SISO_TYPE, int D, __dummy_4__ TABLE, 
        trellis_metric_type_t TYPE) -> trellis_siso_combined_f_sptr
    """
  return _trellis.siso_combined_f(*args, **kwargs)
TRELLIS_MIN_SUM = _trellis.TRELLIS_MIN_SUM
TRELLIS_SUM_PRODUCT = _trellis.TRELLIS_SUM_PRODUCT
class trellis_constellation_metrics_cf_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_constellation_metrics_cf)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_constellation_metrics_cf_sptr
        __init__(self,  p) -> trellis_constellation_metrics_cf_sptr
        """
        this = _trellis.new_trellis_constellation_metrics_cf_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_constellation_metrics_cf_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_constellation_metrics_cf_sptr
    __del__ = lambda self : None;
    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_constellation_metrics_cf_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_constellation_metrics_cf_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_constellation_metrics_cf_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_constellation_metrics_cf_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_constellation_metrics_cf_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_constellation_metrics_cf_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_constellation_metrics_cf_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_constellation_metrics_cf_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_constellation_metrics_cf_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_constellation_metrics_cf_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_constellation_metrics_cf_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_constellation_metrics_cf_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_constellation_metrics_cf_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_constellation_metrics_cf_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_constellation_metrics_cf_sptr_check_topology(self, *args, **kwargs)

trellis_constellation_metrics_cf_sptr_swigregister = _trellis.trellis_constellation_metrics_cf_sptr_swigregister
trellis_constellation_metrics_cf_sptr_swigregister(trellis_constellation_metrics_cf_sptr)

trellis_constellation_metrics_cf_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def constellation_metrics_cf(*args, **kwargs):
  """
    constellation_metrics_cf(digital_constellation_sptr constellation, trellis_metric_type_t TYPE) -> trellis_constellation_metrics_cf_sptr

    Evaluate metrics for use by the Viterbi algorithm.
    """
  return _trellis.constellation_metrics_cf(*args, **kwargs)
class trellis_encoder_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_encoder_bb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_encoder_bb_sptr
        __init__(self,  p) -> trellis_encoder_bb_sptr
        """
        this = _trellis.new_trellis_encoder_bb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_encoder_bb_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_encoder_bb_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_encoder_bb_sptr_FSM(self)

    def ST(self):
        """ST(self) -> int"""
        return _trellis.trellis_encoder_bb_sptr_ST(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_encoder_bb_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_encoder_bb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_encoder_bb_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_encoder_bb_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_encoder_bb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_encoder_bb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_encoder_bb_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_encoder_bb_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_encoder_bb_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_encoder_bb_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_bb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_bb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_encoder_bb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_encoder_bb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_encoder_bb_sptr_check_topology(self, *args, **kwargs)

trellis_encoder_bb_sptr_swigregister = _trellis.trellis_encoder_bb_sptr_swigregister
trellis_encoder_bb_sptr_swigregister(trellis_encoder_bb_sptr)

trellis_encoder_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def encoder_bb(*args, **kwargs):
  """
    encoder_bb(fsm FSM, int ST) -> trellis_encoder_bb_sptr

    Convolutional encoder.
    """
  return _trellis.encoder_bb(*args, **kwargs)
class trellis_encoder_bs_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_encoder_bs)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_encoder_bs_sptr
        __init__(self,  p) -> trellis_encoder_bs_sptr
        """
        this = _trellis.new_trellis_encoder_bs_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_encoder_bs_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_encoder_bs_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_encoder_bs_sptr_FSM(self)

    def ST(self):
        """ST(self) -> int"""
        return _trellis.trellis_encoder_bs_sptr_ST(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_encoder_bs_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_encoder_bs_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_encoder_bs_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_encoder_bs_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_encoder_bs_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_encoder_bs_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_encoder_bs_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_encoder_bs_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_encoder_bs_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_encoder_bs_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_bs_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_bs_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_encoder_bs_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_encoder_bs_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_encoder_bs_sptr_check_topology(self, *args, **kwargs)

trellis_encoder_bs_sptr_swigregister = _trellis.trellis_encoder_bs_sptr_swigregister
trellis_encoder_bs_sptr_swigregister(trellis_encoder_bs_sptr)

trellis_encoder_bs_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def encoder_bs(*args, **kwargs):
  """
    encoder_bs(fsm FSM, int ST) -> trellis_encoder_bs_sptr

    Convolutional encoder.
    """
  return _trellis.encoder_bs(*args, **kwargs)
class trellis_encoder_bi_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_encoder_bi)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_encoder_bi_sptr
        __init__(self,  p) -> trellis_encoder_bi_sptr
        """
        this = _trellis.new_trellis_encoder_bi_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_encoder_bi_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_encoder_bi_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_encoder_bi_sptr_FSM(self)

    def ST(self):
        """ST(self) -> int"""
        return _trellis.trellis_encoder_bi_sptr_ST(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_encoder_bi_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_encoder_bi_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_encoder_bi_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_encoder_bi_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_encoder_bi_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_encoder_bi_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_encoder_bi_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_encoder_bi_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_encoder_bi_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_encoder_bi_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_bi_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_bi_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_encoder_bi_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_encoder_bi_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_encoder_bi_sptr_check_topology(self, *args, **kwargs)

trellis_encoder_bi_sptr_swigregister = _trellis.trellis_encoder_bi_sptr_swigregister
trellis_encoder_bi_sptr_swigregister(trellis_encoder_bi_sptr)

trellis_encoder_bi_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def encoder_bi(*args, **kwargs):
  """
    encoder_bi(fsm FSM, int ST) -> trellis_encoder_bi_sptr

    Convolutional encoder.
    """
  return _trellis.encoder_bi(*args, **kwargs)
class trellis_encoder_ss_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_encoder_ss)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_encoder_ss_sptr
        __init__(self,  p) -> trellis_encoder_ss_sptr
        """
        this = _trellis.new_trellis_encoder_ss_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_encoder_ss_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_encoder_ss_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_encoder_ss_sptr_FSM(self)

    def ST(self):
        """ST(self) -> int"""
        return _trellis.trellis_encoder_ss_sptr_ST(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_encoder_ss_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_encoder_ss_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_encoder_ss_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_encoder_ss_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_encoder_ss_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_encoder_ss_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_encoder_ss_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_encoder_ss_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_encoder_ss_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_encoder_ss_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_ss_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_ss_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_encoder_ss_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_encoder_ss_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_encoder_ss_sptr_check_topology(self, *args, **kwargs)

trellis_encoder_ss_sptr_swigregister = _trellis.trellis_encoder_ss_sptr_swigregister
trellis_encoder_ss_sptr_swigregister(trellis_encoder_ss_sptr)

trellis_encoder_ss_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def encoder_ss(*args, **kwargs):
  """
    encoder_ss(fsm FSM, int ST) -> trellis_encoder_ss_sptr

    Convolutional encoder.
    """
  return _trellis.encoder_ss(*args, **kwargs)
class trellis_encoder_si_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_encoder_si)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_encoder_si_sptr
        __init__(self,  p) -> trellis_encoder_si_sptr
        """
        this = _trellis.new_trellis_encoder_si_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_encoder_si_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_encoder_si_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_encoder_si_sptr_FSM(self)

    def ST(self):
        """ST(self) -> int"""
        return _trellis.trellis_encoder_si_sptr_ST(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_encoder_si_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_encoder_si_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_encoder_si_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_encoder_si_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_encoder_si_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_encoder_si_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_encoder_si_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_encoder_si_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_encoder_si_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_encoder_si_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_si_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_si_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_encoder_si_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_encoder_si_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_encoder_si_sptr_check_topology(self, *args, **kwargs)

trellis_encoder_si_sptr_swigregister = _trellis.trellis_encoder_si_sptr_swigregister
trellis_encoder_si_sptr_swigregister(trellis_encoder_si_sptr)

trellis_encoder_si_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def encoder_si(*args, **kwargs):
  """
    encoder_si(fsm FSM, int ST) -> trellis_encoder_si_sptr

    Convolutional encoder.
    """
  return _trellis.encoder_si(*args, **kwargs)
class trellis_encoder_ii_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_encoder_ii)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_encoder_ii_sptr
        __init__(self,  p) -> trellis_encoder_ii_sptr
        """
        this = _trellis.new_trellis_encoder_ii_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_encoder_ii_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_encoder_ii_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_encoder_ii_sptr_FSM(self)

    def ST(self):
        """ST(self) -> int"""
        return _trellis.trellis_encoder_ii_sptr_ST(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_encoder_ii_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_encoder_ii_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_encoder_ii_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_encoder_ii_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_encoder_ii_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_encoder_ii_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_encoder_ii_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_encoder_ii_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_encoder_ii_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_encoder_ii_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_ii_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_encoder_ii_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_encoder_ii_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_encoder_ii_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_encoder_ii_sptr_check_topology(self, *args, **kwargs)

trellis_encoder_ii_sptr_swigregister = _trellis.trellis_encoder_ii_sptr_swigregister
trellis_encoder_ii_sptr_swigregister(trellis_encoder_ii_sptr)

trellis_encoder_ii_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def encoder_ii(*args, **kwargs):
  """
    encoder_ii(fsm FSM, int ST) -> trellis_encoder_ii_sptr

    Convolutional encoder.
    """
  return _trellis.encoder_ii(*args, **kwargs)
class trellis_sccc_encoder_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_encoder_bb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_encoder_bb_sptr
        __init__(self,  p) -> trellis_sccc_encoder_bb_sptr
        """
        this = _trellis.new_trellis_sccc_encoder_bb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_encoder_bb_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_encoder_bb_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_bb_sptr_FSMo(self)

    def STo(self):
        """STo(self) -> int"""
        return _trellis.trellis_sccc_encoder_bb_sptr_STo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_bb_sptr_FSMi(self)

    def STi(self):
        """STi(self) -> int"""
        return _trellis.trellis_sccc_encoder_bb_sptr_STi(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_encoder_bb_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_encoder_bb_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_encoder_bb_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_encoder_bb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_encoder_bb_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_encoder_bb_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_encoder_bb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_bb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_bb_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_encoder_bb_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_encoder_bb_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_encoder_bb_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_bb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_bb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_encoder_bb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_encoder_bb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_encoder_bb_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_encoder_bb_sptr_swigregister = _trellis.trellis_sccc_encoder_bb_sptr_swigregister
trellis_sccc_encoder_bb_sptr_swigregister(trellis_sccc_encoder_bb_sptr)

trellis_sccc_encoder_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_encoder_bb(*args, **kwargs):
  """
    sccc_encoder_bb(fsm FSMo, int STo, fsm FSMi, int STi, interleaver INTERLEAVER, 
        int blocklength) -> trellis_sccc_encoder_bb_sptr

    SCCC encoder.
    """
  return _trellis.sccc_encoder_bb(*args, **kwargs)
class trellis_sccc_encoder_bs_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_encoder_bs)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_encoder_bs_sptr
        __init__(self,  p) -> trellis_sccc_encoder_bs_sptr
        """
        this = _trellis.new_trellis_sccc_encoder_bs_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_encoder_bs_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_encoder_bs_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_bs_sptr_FSMo(self)

    def STo(self):
        """STo(self) -> int"""
        return _trellis.trellis_sccc_encoder_bs_sptr_STo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_bs_sptr_FSMi(self)

    def STi(self):
        """STi(self) -> int"""
        return _trellis.trellis_sccc_encoder_bs_sptr_STi(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_encoder_bs_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_encoder_bs_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_encoder_bs_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_encoder_bs_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_encoder_bs_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_encoder_bs_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_encoder_bs_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_bs_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_bs_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_encoder_bs_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_encoder_bs_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_encoder_bs_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_bs_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_bs_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_encoder_bs_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_encoder_bs_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_encoder_bs_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_encoder_bs_sptr_swigregister = _trellis.trellis_sccc_encoder_bs_sptr_swigregister
trellis_sccc_encoder_bs_sptr_swigregister(trellis_sccc_encoder_bs_sptr)

trellis_sccc_encoder_bs_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_encoder_bs(*args, **kwargs):
  """
    sccc_encoder_bs(fsm FSMo, int STo, fsm FSMi, int STi, interleaver INTERLEAVER, 
        int blocklength) -> trellis_sccc_encoder_bs_sptr

    SCCC encoder.
    """
  return _trellis.sccc_encoder_bs(*args, **kwargs)
class trellis_sccc_encoder_bi_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_encoder_bi)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_encoder_bi_sptr
        __init__(self,  p) -> trellis_sccc_encoder_bi_sptr
        """
        this = _trellis.new_trellis_sccc_encoder_bi_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_encoder_bi_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_encoder_bi_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_bi_sptr_FSMo(self)

    def STo(self):
        """STo(self) -> int"""
        return _trellis.trellis_sccc_encoder_bi_sptr_STo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_bi_sptr_FSMi(self)

    def STi(self):
        """STi(self) -> int"""
        return _trellis.trellis_sccc_encoder_bi_sptr_STi(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_encoder_bi_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_encoder_bi_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_encoder_bi_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_encoder_bi_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_encoder_bi_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_encoder_bi_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_encoder_bi_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_bi_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_bi_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_encoder_bi_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_encoder_bi_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_encoder_bi_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_bi_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_bi_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_encoder_bi_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_encoder_bi_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_encoder_bi_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_encoder_bi_sptr_swigregister = _trellis.trellis_sccc_encoder_bi_sptr_swigregister
trellis_sccc_encoder_bi_sptr_swigregister(trellis_sccc_encoder_bi_sptr)

trellis_sccc_encoder_bi_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_encoder_bi(*args, **kwargs):
  """
    sccc_encoder_bi(fsm FSMo, int STo, fsm FSMi, int STi, interleaver INTERLEAVER, 
        int blocklength) -> trellis_sccc_encoder_bi_sptr

    SCCC encoder.
    """
  return _trellis.sccc_encoder_bi(*args, **kwargs)
class trellis_sccc_encoder_ss_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_encoder_ss)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_encoder_ss_sptr
        __init__(self,  p) -> trellis_sccc_encoder_ss_sptr
        """
        this = _trellis.new_trellis_sccc_encoder_ss_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_encoder_ss_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_encoder_ss_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_ss_sptr_FSMo(self)

    def STo(self):
        """STo(self) -> int"""
        return _trellis.trellis_sccc_encoder_ss_sptr_STo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_ss_sptr_FSMi(self)

    def STi(self):
        """STi(self) -> int"""
        return _trellis.trellis_sccc_encoder_ss_sptr_STi(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_encoder_ss_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_encoder_ss_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_encoder_ss_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_encoder_ss_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_encoder_ss_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_encoder_ss_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_encoder_ss_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_ss_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_ss_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_encoder_ss_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_encoder_ss_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_encoder_ss_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_ss_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_ss_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_encoder_ss_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_encoder_ss_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_encoder_ss_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_encoder_ss_sptr_swigregister = _trellis.trellis_sccc_encoder_ss_sptr_swigregister
trellis_sccc_encoder_ss_sptr_swigregister(trellis_sccc_encoder_ss_sptr)

trellis_sccc_encoder_ss_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_encoder_ss(*args, **kwargs):
  """
    sccc_encoder_ss(fsm FSMo, int STo, fsm FSMi, int STi, interleaver INTERLEAVER, 
        int blocklength) -> trellis_sccc_encoder_ss_sptr

    SCCC encoder.
    """
  return _trellis.sccc_encoder_ss(*args, **kwargs)
class trellis_sccc_encoder_si_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_encoder_si)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_encoder_si_sptr
        __init__(self,  p) -> trellis_sccc_encoder_si_sptr
        """
        this = _trellis.new_trellis_sccc_encoder_si_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_encoder_si_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_encoder_si_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_si_sptr_FSMo(self)

    def STo(self):
        """STo(self) -> int"""
        return _trellis.trellis_sccc_encoder_si_sptr_STo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_si_sptr_FSMi(self)

    def STi(self):
        """STi(self) -> int"""
        return _trellis.trellis_sccc_encoder_si_sptr_STi(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_encoder_si_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_encoder_si_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_encoder_si_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_encoder_si_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_encoder_si_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_encoder_si_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_encoder_si_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_si_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_si_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_encoder_si_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_encoder_si_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_encoder_si_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_si_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_si_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_encoder_si_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_encoder_si_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_encoder_si_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_encoder_si_sptr_swigregister = _trellis.trellis_sccc_encoder_si_sptr_swigregister
trellis_sccc_encoder_si_sptr_swigregister(trellis_sccc_encoder_si_sptr)

trellis_sccc_encoder_si_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_encoder_si(*args, **kwargs):
  """
    sccc_encoder_si(fsm FSMo, int STo, fsm FSMi, int STi, interleaver INTERLEAVER, 
        int blocklength) -> trellis_sccc_encoder_si_sptr

    SCCC encoder.
    """
  return _trellis.sccc_encoder_si(*args, **kwargs)
class trellis_sccc_encoder_ii_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_encoder_ii)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_encoder_ii_sptr
        __init__(self,  p) -> trellis_sccc_encoder_ii_sptr
        """
        this = _trellis.new_trellis_sccc_encoder_ii_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_encoder_ii_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_encoder_ii_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_ii_sptr_FSMo(self)

    def STo(self):
        """STo(self) -> int"""
        return _trellis.trellis_sccc_encoder_ii_sptr_STo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_encoder_ii_sptr_FSMi(self)

    def STi(self):
        """STi(self) -> int"""
        return _trellis.trellis_sccc_encoder_ii_sptr_STi(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_encoder_ii_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_encoder_ii_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_encoder_ii_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_encoder_ii_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_encoder_ii_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_encoder_ii_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_encoder_ii_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_ii_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_encoder_ii_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_encoder_ii_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_encoder_ii_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_encoder_ii_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_ii_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_encoder_ii_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_encoder_ii_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_encoder_ii_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_encoder_ii_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_encoder_ii_sptr_swigregister = _trellis.trellis_sccc_encoder_ii_sptr_swigregister
trellis_sccc_encoder_ii_sptr_swigregister(trellis_sccc_encoder_ii_sptr)

trellis_sccc_encoder_ii_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_encoder_ii(*args, **kwargs):
  """
    sccc_encoder_ii(fsm FSMo, int STo, fsm FSMi, int STi, interleaver INTERLEAVER, 
        int blocklength) -> trellis_sccc_encoder_ii_sptr

    SCCC encoder.
    """
  return _trellis.sccc_encoder_ii(*args, **kwargs)
class trellis_pccc_encoder_bb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_encoder_bb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_encoder_bb_sptr
        __init__(self,  p) -> trellis_pccc_encoder_bb_sptr
        """
        this = _trellis.new_trellis_pccc_encoder_bb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_encoder_bb_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_encoder_bb_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_bb_sptr_FSM1(self)

    def ST1(self):
        """ST1(self) -> int"""
        return _trellis.trellis_pccc_encoder_bb_sptr_ST1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_bb_sptr_FSM2(self)

    def ST2(self):
        """ST2(self) -> int"""
        return _trellis.trellis_pccc_encoder_bb_sptr_ST2(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_encoder_bb_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_encoder_bb_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_encoder_bb_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_encoder_bb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_encoder_bb_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_encoder_bb_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_encoder_bb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_bb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_bb_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_encoder_bb_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_encoder_bb_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_encoder_bb_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_bb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_bb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_encoder_bb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_encoder_bb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_encoder_bb_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_encoder_bb_sptr_swigregister = _trellis.trellis_pccc_encoder_bb_sptr_swigregister
trellis_pccc_encoder_bb_sptr_swigregister(trellis_pccc_encoder_bb_sptr)

trellis_pccc_encoder_bb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_encoder_bb(*args, **kwargs):
  """
    pccc_encoder_bb(fsm FSM1, int ST1, fsm FSM2, int ST2, interleaver INTERLEAVER, 
        int blocklength) -> trellis_pccc_encoder_bb_sptr

    SCCC encoder.
    """
  return _trellis.pccc_encoder_bb(*args, **kwargs)
class trellis_pccc_encoder_bs_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_encoder_bs)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_encoder_bs_sptr
        __init__(self,  p) -> trellis_pccc_encoder_bs_sptr
        """
        this = _trellis.new_trellis_pccc_encoder_bs_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_encoder_bs_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_encoder_bs_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_bs_sptr_FSM1(self)

    def ST1(self):
        """ST1(self) -> int"""
        return _trellis.trellis_pccc_encoder_bs_sptr_ST1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_bs_sptr_FSM2(self)

    def ST2(self):
        """ST2(self) -> int"""
        return _trellis.trellis_pccc_encoder_bs_sptr_ST2(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_encoder_bs_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_encoder_bs_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_encoder_bs_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_encoder_bs_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_encoder_bs_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_encoder_bs_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_encoder_bs_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_bs_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_bs_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_encoder_bs_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_encoder_bs_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_encoder_bs_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_bs_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_bs_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_encoder_bs_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_encoder_bs_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_encoder_bs_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_encoder_bs_sptr_swigregister = _trellis.trellis_pccc_encoder_bs_sptr_swigregister
trellis_pccc_encoder_bs_sptr_swigregister(trellis_pccc_encoder_bs_sptr)

trellis_pccc_encoder_bs_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_encoder_bs(*args, **kwargs):
  """
    pccc_encoder_bs(fsm FSM1, int ST1, fsm FSM2, int ST2, interleaver INTERLEAVER, 
        int blocklength) -> trellis_pccc_encoder_bs_sptr

    SCCC encoder.
    """
  return _trellis.pccc_encoder_bs(*args, **kwargs)
class trellis_pccc_encoder_bi_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_encoder_bi)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_encoder_bi_sptr
        __init__(self,  p) -> trellis_pccc_encoder_bi_sptr
        """
        this = _trellis.new_trellis_pccc_encoder_bi_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_encoder_bi_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_encoder_bi_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_bi_sptr_FSM1(self)

    def ST1(self):
        """ST1(self) -> int"""
        return _trellis.trellis_pccc_encoder_bi_sptr_ST1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_bi_sptr_FSM2(self)

    def ST2(self):
        """ST2(self) -> int"""
        return _trellis.trellis_pccc_encoder_bi_sptr_ST2(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_encoder_bi_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_encoder_bi_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_encoder_bi_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_encoder_bi_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_encoder_bi_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_encoder_bi_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_encoder_bi_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_bi_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_bi_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_encoder_bi_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_encoder_bi_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_encoder_bi_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_bi_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_bi_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_encoder_bi_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_encoder_bi_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_encoder_bi_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_encoder_bi_sptr_swigregister = _trellis.trellis_pccc_encoder_bi_sptr_swigregister
trellis_pccc_encoder_bi_sptr_swigregister(trellis_pccc_encoder_bi_sptr)

trellis_pccc_encoder_bi_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_encoder_bi(*args, **kwargs):
  """
    pccc_encoder_bi(fsm FSM1, int ST1, fsm FSM2, int ST2, interleaver INTERLEAVER, 
        int blocklength) -> trellis_pccc_encoder_bi_sptr

    SCCC encoder.
    """
  return _trellis.pccc_encoder_bi(*args, **kwargs)
class trellis_pccc_encoder_ss_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_encoder_ss)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_encoder_ss_sptr
        __init__(self,  p) -> trellis_pccc_encoder_ss_sptr
        """
        this = _trellis.new_trellis_pccc_encoder_ss_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_encoder_ss_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_encoder_ss_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_ss_sptr_FSM1(self)

    def ST1(self):
        """ST1(self) -> int"""
        return _trellis.trellis_pccc_encoder_ss_sptr_ST1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_ss_sptr_FSM2(self)

    def ST2(self):
        """ST2(self) -> int"""
        return _trellis.trellis_pccc_encoder_ss_sptr_ST2(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_encoder_ss_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_encoder_ss_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_encoder_ss_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_encoder_ss_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_encoder_ss_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_encoder_ss_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_encoder_ss_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_ss_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_ss_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_encoder_ss_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_encoder_ss_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_encoder_ss_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_ss_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_ss_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_encoder_ss_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_encoder_ss_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_encoder_ss_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_encoder_ss_sptr_swigregister = _trellis.trellis_pccc_encoder_ss_sptr_swigregister
trellis_pccc_encoder_ss_sptr_swigregister(trellis_pccc_encoder_ss_sptr)

trellis_pccc_encoder_ss_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_encoder_ss(*args, **kwargs):
  """
    pccc_encoder_ss(fsm FSM1, int ST1, fsm FSM2, int ST2, interleaver INTERLEAVER, 
        int blocklength) -> trellis_pccc_encoder_ss_sptr

    SCCC encoder.
    """
  return _trellis.pccc_encoder_ss(*args, **kwargs)
class trellis_pccc_encoder_si_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_encoder_si)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_encoder_si_sptr
        __init__(self,  p) -> trellis_pccc_encoder_si_sptr
        """
        this = _trellis.new_trellis_pccc_encoder_si_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_encoder_si_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_encoder_si_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_si_sptr_FSM1(self)

    def ST1(self):
        """ST1(self) -> int"""
        return _trellis.trellis_pccc_encoder_si_sptr_ST1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_si_sptr_FSM2(self)

    def ST2(self):
        """ST2(self) -> int"""
        return _trellis.trellis_pccc_encoder_si_sptr_ST2(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_encoder_si_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_encoder_si_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_encoder_si_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_encoder_si_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_encoder_si_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_encoder_si_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_encoder_si_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_si_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_si_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_encoder_si_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_encoder_si_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_encoder_si_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_si_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_si_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_encoder_si_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_encoder_si_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_encoder_si_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_encoder_si_sptr_swigregister = _trellis.trellis_pccc_encoder_si_sptr_swigregister
trellis_pccc_encoder_si_sptr_swigregister(trellis_pccc_encoder_si_sptr)

trellis_pccc_encoder_si_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_encoder_si(*args, **kwargs):
  """
    pccc_encoder_si(fsm FSM1, int ST1, fsm FSM2, int ST2, interleaver INTERLEAVER, 
        int blocklength) -> trellis_pccc_encoder_si_sptr

    SCCC encoder.
    """
  return _trellis.pccc_encoder_si(*args, **kwargs)
class trellis_pccc_encoder_ii_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_encoder_ii)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_encoder_ii_sptr
        __init__(self,  p) -> trellis_pccc_encoder_ii_sptr
        """
        this = _trellis.new_trellis_pccc_encoder_ii_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_encoder_ii_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_encoder_ii_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_ii_sptr_FSM1(self)

    def ST1(self):
        """ST1(self) -> int"""
        return _trellis.trellis_pccc_encoder_ii_sptr_ST1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_encoder_ii_sptr_FSM2(self)

    def ST2(self):
        """ST2(self) -> int"""
        return _trellis.trellis_pccc_encoder_ii_sptr_ST2(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_encoder_ii_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_encoder_ii_sptr_blocklength(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_encoder_ii_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_encoder_ii_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_encoder_ii_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_encoder_ii_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_encoder_ii_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_ii_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_encoder_ii_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_encoder_ii_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_encoder_ii_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_encoder_ii_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_ii_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_encoder_ii_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_encoder_ii_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_encoder_ii_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_encoder_ii_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_encoder_ii_sptr_swigregister = _trellis.trellis_pccc_encoder_ii_sptr_swigregister
trellis_pccc_encoder_ii_sptr_swigregister(trellis_pccc_encoder_ii_sptr)

trellis_pccc_encoder_ii_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_encoder_ii(*args, **kwargs):
  """
    pccc_encoder_ii(fsm FSM1, int ST1, fsm FSM2, int ST2, interleaver INTERLEAVER, 
        int blocklength) -> trellis_pccc_encoder_ii_sptr

    SCCC encoder.
    """
  return _trellis.pccc_encoder_ii(*args, **kwargs)
class trellis_metrics_s_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_metrics_s)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_metrics_s_sptr
        __init__(self,  p) -> trellis_metrics_s_sptr
        """
        this = _trellis.new_trellis_metrics_s_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_metrics_s_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_metrics_s_sptr
    __del__ = lambda self : None;
    def O(self):
        """O(self) -> int"""
        return _trellis.trellis_metrics_s_sptr_O(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_metrics_s_sptr_D(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_metrics_s_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_2__ table)"""
        return _trellis.trellis_metrics_s_sptr_set_TABLE(self, *args, **kwargs)

    def TABLE(self):
        """TABLE(self) -> __dummy_2__"""
        return _trellis.trellis_metrics_s_sptr_TABLE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_metrics_s_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_metrics_s_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_metrics_s_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_metrics_s_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_metrics_s_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_metrics_s_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_metrics_s_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_metrics_s_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_metrics_s_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_metrics_s_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_metrics_s_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_metrics_s_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_metrics_s_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_metrics_s_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_metrics_s_sptr_check_topology(self, *args, **kwargs)

trellis_metrics_s_sptr_swigregister = _trellis.trellis_metrics_s_sptr_swigregister
trellis_metrics_s_sptr_swigregister(trellis_metrics_s_sptr)

trellis_metrics_s_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def metrics_s(*args, **kwargs):
  """
    metrics_s(int O, int D, __dummy_2__ TABLE, trellis_metric_type_t TYPE) -> trellis_metrics_s_sptr

    Evaluate metrics for use by the Viterbi algorithm.
    """
  return _trellis.metrics_s(*args, **kwargs)
class trellis_metrics_i_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_metrics_i)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_metrics_i_sptr
        __init__(self,  p) -> trellis_metrics_i_sptr
        """
        this = _trellis.new_trellis_metrics_i_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_metrics_i_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_metrics_i_sptr
    __del__ = lambda self : None;
    def O(self):
        """O(self) -> int"""
        return _trellis.trellis_metrics_i_sptr_O(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_metrics_i_sptr_D(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_metrics_i_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_3__ table)"""
        return _trellis.trellis_metrics_i_sptr_set_TABLE(self, *args, **kwargs)

    def TABLE(self):
        """TABLE(self) -> __dummy_3__"""
        return _trellis.trellis_metrics_i_sptr_TABLE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_metrics_i_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_metrics_i_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_metrics_i_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_metrics_i_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_metrics_i_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_metrics_i_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_metrics_i_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_metrics_i_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_metrics_i_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_metrics_i_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_metrics_i_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_metrics_i_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_metrics_i_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_metrics_i_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_metrics_i_sptr_check_topology(self, *args, **kwargs)

trellis_metrics_i_sptr_swigregister = _trellis.trellis_metrics_i_sptr_swigregister
trellis_metrics_i_sptr_swigregister(trellis_metrics_i_sptr)

trellis_metrics_i_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def metrics_i(*args, **kwargs):
  """
    metrics_i(int O, int D, __dummy_3__ TABLE, trellis_metric_type_t TYPE) -> trellis_metrics_i_sptr

    Evaluate metrics for use by the Viterbi algorithm.
    """
  return _trellis.metrics_i(*args, **kwargs)
class trellis_metrics_f_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_metrics_f)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_metrics_f_sptr
        __init__(self,  p) -> trellis_metrics_f_sptr
        """
        this = _trellis.new_trellis_metrics_f_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_metrics_f_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_metrics_f_sptr
    __del__ = lambda self : None;
    def O(self):
        """O(self) -> int"""
        return _trellis.trellis_metrics_f_sptr_O(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_metrics_f_sptr_D(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_metrics_f_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_4__ table)"""
        return _trellis.trellis_metrics_f_sptr_set_TABLE(self, *args, **kwargs)

    def TABLE(self):
        """TABLE(self) -> __dummy_4__"""
        return _trellis.trellis_metrics_f_sptr_TABLE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_metrics_f_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_metrics_f_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_metrics_f_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_metrics_f_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_metrics_f_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_metrics_f_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_metrics_f_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_metrics_f_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_metrics_f_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_metrics_f_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_metrics_f_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_metrics_f_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_metrics_f_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_metrics_f_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_metrics_f_sptr_check_topology(self, *args, **kwargs)

trellis_metrics_f_sptr_swigregister = _trellis.trellis_metrics_f_sptr_swigregister
trellis_metrics_f_sptr_swigregister(trellis_metrics_f_sptr)

trellis_metrics_f_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def metrics_f(*args, **kwargs):
  """
    metrics_f(int O, int D, __dummy_4__ TABLE, trellis_metric_type_t TYPE) -> trellis_metrics_f_sptr

    Evaluate metrics for use by the Viterbi algorithm.
    """
  return _trellis.metrics_f(*args, **kwargs)
class trellis_metrics_c_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_metrics_c)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_metrics_c_sptr
        __init__(self,  p) -> trellis_metrics_c_sptr
        """
        this = _trellis.new_trellis_metrics_c_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_metrics_c_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_metrics_c_sptr
    __del__ = lambda self : None;
    def O(self):
        """O(self) -> int"""
        return _trellis.trellis_metrics_c_sptr_O(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_metrics_c_sptr_D(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_metrics_c_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, gr_complex_vector table)"""
        return _trellis.trellis_metrics_c_sptr_set_TABLE(self, *args, **kwargs)

    def TABLE(self):
        """TABLE(self) -> gr_complex_vector"""
        return _trellis.trellis_metrics_c_sptr_TABLE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_metrics_c_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_metrics_c_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_metrics_c_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_metrics_c_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_metrics_c_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_metrics_c_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_metrics_c_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_metrics_c_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_metrics_c_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_metrics_c_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_metrics_c_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_metrics_c_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_metrics_c_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_metrics_c_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_metrics_c_sptr_check_topology(self, *args, **kwargs)

trellis_metrics_c_sptr_swigregister = _trellis.trellis_metrics_c_sptr_swigregister
trellis_metrics_c_sptr_swigregister(trellis_metrics_c_sptr)

trellis_metrics_c_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def metrics_c(*args, **kwargs):
  """
    metrics_c(int O, int D, gr_complex_vector TABLE, trellis_metric_type_t TYPE) -> trellis_metrics_c_sptr

    Evaluate metrics for use by the Viterbi algorithm.
    """
  return _trellis.metrics_c(*args, **kwargs)
class trellis_viterbi_b_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_b)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_b_sptr
        __init__(self,  p) -> trellis_viterbi_b_sptr
        """
        this = _trellis.new_trellis_viterbi_b_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_b_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_b_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_b_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_b_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_b_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_b_sptr_SK(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_b_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_b_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_b_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_b_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_b_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_b_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_b_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_b_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_b_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_b_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_b_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_b_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_b_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_b_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_b_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_b_sptr_swigregister = _trellis.trellis_viterbi_b_sptr_swigregister
trellis_viterbi_b_sptr_swigregister(trellis_viterbi_b_sptr)

trellis_viterbi_b_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_b(*args, **kwargs):
  """viterbi_b(fsm FSM, int K, int S0, int SK) -> trellis_viterbi_b_sptr"""
  return _trellis.viterbi_b(*args, **kwargs)
class trellis_viterbi_s_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_s)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_s_sptr
        __init__(self,  p) -> trellis_viterbi_s_sptr
        """
        this = _trellis.new_trellis_viterbi_s_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_s_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_s_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_s_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_s_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_s_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_s_sptr_SK(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_s_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_s_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_s_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_s_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_s_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_s_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_s_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_s_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_s_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_s_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_s_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_s_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_s_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_s_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_s_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_s_sptr_swigregister = _trellis.trellis_viterbi_s_sptr_swigregister
trellis_viterbi_s_sptr_swigregister(trellis_viterbi_s_sptr)

trellis_viterbi_s_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_s(*args, **kwargs):
  """viterbi_s(fsm FSM, int K, int S0, int SK) -> trellis_viterbi_s_sptr"""
  return _trellis.viterbi_s(*args, **kwargs)
class trellis_viterbi_i_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_i)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_i_sptr
        __init__(self,  p) -> trellis_viterbi_i_sptr
        """
        this = _trellis.new_trellis_viterbi_i_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_i_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_i_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_i_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_i_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_i_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_i_sptr_SK(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_i_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_i_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_i_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_i_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_i_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_i_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_i_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_i_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_i_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_i_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_i_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_i_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_i_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_i_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_i_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_i_sptr_swigregister = _trellis.trellis_viterbi_i_sptr_swigregister
trellis_viterbi_i_sptr_swigregister(trellis_viterbi_i_sptr)

trellis_viterbi_i_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_i(*args, **kwargs):
  """viterbi_i(fsm FSM, int K, int S0, int SK) -> trellis_viterbi_i_sptr"""
  return _trellis.viterbi_i(*args, **kwargs)
class trellis_viterbi_combined_sb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_sb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_sb_sptr
        __init__(self,  p) -> trellis_viterbi_combined_sb_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_sb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_sb_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_sb_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_sb_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_sb_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_sb_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_sb_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_sb_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_2__"""
        return _trellis.trellis_viterbi_combined_sb_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_sb_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_2__ table)"""
        return _trellis.trellis_viterbi_combined_sb_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_sb_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_sb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_sb_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_sb_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_sb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_sb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_sb_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_sb_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_sb_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_sb_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_sb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_sb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_sb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_sb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_sb_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_sb_sptr_swigregister = _trellis.trellis_viterbi_combined_sb_sptr_swigregister
trellis_viterbi_combined_sb_sptr_swigregister(trellis_viterbi_combined_sb_sptr)

trellis_viterbi_combined_sb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_sb(*args, **kwargs):
  """
    viterbi_combined_sb(fsm FSM, int K, int S0, int SK, int D, __dummy_2__ TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_sb_sptr
    """
  return _trellis.viterbi_combined_sb(*args, **kwargs)
class trellis_viterbi_combined_ss_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_ss)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_ss_sptr
        __init__(self,  p) -> trellis_viterbi_combined_ss_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_ss_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_ss_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_ss_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_ss_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_ss_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_ss_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_ss_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_ss_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_2__"""
        return _trellis.trellis_viterbi_combined_ss_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_ss_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_2__ table)"""
        return _trellis.trellis_viterbi_combined_ss_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_ss_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_ss_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_ss_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_ss_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_ss_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_ss_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_ss_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_ss_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_ss_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_ss_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_ss_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_ss_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_ss_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_ss_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_ss_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_ss_sptr_swigregister = _trellis.trellis_viterbi_combined_ss_sptr_swigregister
trellis_viterbi_combined_ss_sptr_swigregister(trellis_viterbi_combined_ss_sptr)

trellis_viterbi_combined_ss_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_ss(*args, **kwargs):
  """
    viterbi_combined_ss(fsm FSM, int K, int S0, int SK, int D, __dummy_2__ TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_ss_sptr
    """
  return _trellis.viterbi_combined_ss(*args, **kwargs)
class trellis_viterbi_combined_si_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_si)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_si_sptr
        __init__(self,  p) -> trellis_viterbi_combined_si_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_si_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_si_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_si_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_si_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_si_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_si_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_si_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_si_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_2__"""
        return _trellis.trellis_viterbi_combined_si_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_si_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_2__ table)"""
        return _trellis.trellis_viterbi_combined_si_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_si_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_si_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_si_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_si_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_si_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_si_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_si_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_si_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_si_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_si_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_si_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_si_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_si_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_si_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_si_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_si_sptr_swigregister = _trellis.trellis_viterbi_combined_si_sptr_swigregister
trellis_viterbi_combined_si_sptr_swigregister(trellis_viterbi_combined_si_sptr)

trellis_viterbi_combined_si_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_si(*args, **kwargs):
  """
    viterbi_combined_si(fsm FSM, int K, int S0, int SK, int D, __dummy_2__ TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_si_sptr
    """
  return _trellis.viterbi_combined_si(*args, **kwargs)
class trellis_viterbi_combined_ib_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_ib)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_ib_sptr
        __init__(self,  p) -> trellis_viterbi_combined_ib_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_ib_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_ib_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_ib_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_ib_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_ib_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_ib_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_ib_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_ib_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_3__"""
        return _trellis.trellis_viterbi_combined_ib_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_ib_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_3__ table)"""
        return _trellis.trellis_viterbi_combined_ib_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_ib_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_ib_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_ib_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_ib_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_ib_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_ib_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_ib_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_ib_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_ib_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_ib_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_ib_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_ib_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_ib_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_ib_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_ib_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_ib_sptr_swigregister = _trellis.trellis_viterbi_combined_ib_sptr_swigregister
trellis_viterbi_combined_ib_sptr_swigregister(trellis_viterbi_combined_ib_sptr)

trellis_viterbi_combined_ib_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_ib(*args, **kwargs):
  """
    viterbi_combined_ib(fsm FSM, int K, int S0, int SK, int D, __dummy_3__ TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_ib_sptr
    """
  return _trellis.viterbi_combined_ib(*args, **kwargs)
class trellis_viterbi_combined_is_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_is)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_is_sptr
        __init__(self,  p) -> trellis_viterbi_combined_is_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_is_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_is_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_is_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_is_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_is_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_is_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_is_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_is_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_3__"""
        return _trellis.trellis_viterbi_combined_is_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_is_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_3__ table)"""
        return _trellis.trellis_viterbi_combined_is_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_is_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_is_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_is_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_is_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_is_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_is_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_is_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_is_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_is_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_is_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_is_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_is_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_is_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_is_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_is_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_is_sptr_swigregister = _trellis.trellis_viterbi_combined_is_sptr_swigregister
trellis_viterbi_combined_is_sptr_swigregister(trellis_viterbi_combined_is_sptr)

trellis_viterbi_combined_is_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_is(*args, **kwargs):
  """
    viterbi_combined_is(fsm FSM, int K, int S0, int SK, int D, __dummy_3__ TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_is_sptr
    """
  return _trellis.viterbi_combined_is(*args, **kwargs)
class trellis_viterbi_combined_ii_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_ii)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_ii_sptr
        __init__(self,  p) -> trellis_viterbi_combined_ii_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_ii_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_ii_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_ii_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_ii_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_ii_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_ii_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_ii_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_ii_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_3__"""
        return _trellis.trellis_viterbi_combined_ii_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_ii_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_3__ table)"""
        return _trellis.trellis_viterbi_combined_ii_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_ii_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_ii_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_ii_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_ii_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_ii_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_ii_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_ii_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_ii_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_ii_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_ii_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_ii_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_ii_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_ii_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_ii_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_ii_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_ii_sptr_swigregister = _trellis.trellis_viterbi_combined_ii_sptr_swigregister
trellis_viterbi_combined_ii_sptr_swigregister(trellis_viterbi_combined_ii_sptr)

trellis_viterbi_combined_ii_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_ii(*args, **kwargs):
  """
    viterbi_combined_ii(fsm FSM, int K, int S0, int SK, int D, __dummy_3__ TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_ii_sptr
    """
  return _trellis.viterbi_combined_ii(*args, **kwargs)
class trellis_viterbi_combined_fb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_fb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_fb_sptr
        __init__(self,  p) -> trellis_viterbi_combined_fb_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_fb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_fb_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_fb_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_fb_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_fb_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_fb_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_fb_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_fb_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_4__"""
        return _trellis.trellis_viterbi_combined_fb_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_fb_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_4__ table)"""
        return _trellis.trellis_viterbi_combined_fb_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_fb_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_fb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_fb_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_fb_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_fb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_fb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_fb_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_fb_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_fb_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_fb_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_fb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_fb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_fb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_fb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_fb_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_fb_sptr_swigregister = _trellis.trellis_viterbi_combined_fb_sptr_swigregister
trellis_viterbi_combined_fb_sptr_swigregister(trellis_viterbi_combined_fb_sptr)

trellis_viterbi_combined_fb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_fb(*args, **kwargs):
  """
    viterbi_combined_fb(fsm FSM, int K, int S0, int SK, int D, __dummy_4__ TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_fb_sptr
    """
  return _trellis.viterbi_combined_fb(*args, **kwargs)
class trellis_viterbi_combined_fs_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_fs)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_fs_sptr
        __init__(self,  p) -> trellis_viterbi_combined_fs_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_fs_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_fs_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_fs_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_fs_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_fs_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_fs_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_fs_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_fs_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_4__"""
        return _trellis.trellis_viterbi_combined_fs_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_fs_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_4__ table)"""
        return _trellis.trellis_viterbi_combined_fs_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_fs_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_fs_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_fs_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_fs_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_fs_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_fs_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_fs_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_fs_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_fs_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_fs_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_fs_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_fs_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_fs_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_fs_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_fs_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_fs_sptr_swigregister = _trellis.trellis_viterbi_combined_fs_sptr_swigregister
trellis_viterbi_combined_fs_sptr_swigregister(trellis_viterbi_combined_fs_sptr)

trellis_viterbi_combined_fs_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_fs(*args, **kwargs):
  """
    viterbi_combined_fs(fsm FSM, int K, int S0, int SK, int D, __dummy_4__ TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_fs_sptr
    """
  return _trellis.viterbi_combined_fs(*args, **kwargs)
class trellis_viterbi_combined_fi_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_fi)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_fi_sptr
        __init__(self,  p) -> trellis_viterbi_combined_fi_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_fi_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_fi_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_fi_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_fi_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_fi_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_fi_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_fi_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_fi_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_4__"""
        return _trellis.trellis_viterbi_combined_fi_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_fi_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, __dummy_4__ table)"""
        return _trellis.trellis_viterbi_combined_fi_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_fi_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_fi_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_fi_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_fi_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_fi_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_fi_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_fi_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_fi_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_fi_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_fi_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_fi_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_fi_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_fi_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_fi_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_fi_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_fi_sptr_swigregister = _trellis.trellis_viterbi_combined_fi_sptr_swigregister
trellis_viterbi_combined_fi_sptr_swigregister(trellis_viterbi_combined_fi_sptr)

trellis_viterbi_combined_fi_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_fi(*args, **kwargs):
  """
    viterbi_combined_fi(fsm FSM, int K, int S0, int SK, int D, __dummy_4__ TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_fi_sptr
    """
  return _trellis.viterbi_combined_fi(*args, **kwargs)
class trellis_viterbi_combined_cb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_cb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_cb_sptr
        __init__(self,  p) -> trellis_viterbi_combined_cb_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_cb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_cb_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_cb_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_cb_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_cb_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_cb_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_cb_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_cb_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> gr_complex_vector"""
        return _trellis.trellis_viterbi_combined_cb_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_cb_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, gr_complex_vector table)"""
        return _trellis.trellis_viterbi_combined_cb_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_cb_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_cb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_cb_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_cb_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_cb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_cb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_cb_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_cb_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_cb_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_cb_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_cb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_cb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_cb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_cb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_cb_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_cb_sptr_swigregister = _trellis.trellis_viterbi_combined_cb_sptr_swigregister
trellis_viterbi_combined_cb_sptr_swigregister(trellis_viterbi_combined_cb_sptr)

trellis_viterbi_combined_cb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_cb(*args, **kwargs):
  """
    viterbi_combined_cb(fsm FSM, int K, int S0, int SK, int D, gr_complex_vector TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_cb_sptr
    """
  return _trellis.viterbi_combined_cb(*args, **kwargs)
class trellis_viterbi_combined_cs_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_cs)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_cs_sptr
        __init__(self,  p) -> trellis_viterbi_combined_cs_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_cs_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_cs_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_cs_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_cs_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_cs_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_cs_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_cs_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_cs_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> gr_complex_vector"""
        return _trellis.trellis_viterbi_combined_cs_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_cs_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, gr_complex_vector table)"""
        return _trellis.trellis_viterbi_combined_cs_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_cs_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_cs_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_cs_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_cs_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_cs_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_cs_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_cs_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_cs_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_cs_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_cs_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_cs_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_cs_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_cs_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_cs_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_cs_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_cs_sptr_swigregister = _trellis.trellis_viterbi_combined_cs_sptr_swigregister
trellis_viterbi_combined_cs_sptr_swigregister(trellis_viterbi_combined_cs_sptr)

trellis_viterbi_combined_cs_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_cs(*args, **kwargs):
  """
    viterbi_combined_cs(fsm FSM, int K, int S0, int SK, int D, gr_complex_vector TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_cs_sptr
    """
  return _trellis.viterbi_combined_cs(*args, **kwargs)
class trellis_viterbi_combined_ci_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_viterbi_combined_ci)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_viterbi_combined_ci_sptr
        __init__(self,  p) -> trellis_viterbi_combined_ci_sptr
        """
        this = _trellis.new_trellis_viterbi_combined_ci_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_viterbi_combined_ci_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_viterbi_combined_ci_sptr
    __del__ = lambda self : None;
    def FSM(self):
        """FSM(self) -> fsm"""
        return _trellis.trellis_viterbi_combined_ci_sptr_FSM(self)

    def K(self):
        """K(self) -> int"""
        return _trellis.trellis_viterbi_combined_ci_sptr_K(self)

    def S0(self):
        """S0(self) -> int"""
        return _trellis.trellis_viterbi_combined_ci_sptr_S0(self)

    def SK(self):
        """SK(self) -> int"""
        return _trellis.trellis_viterbi_combined_ci_sptr_SK(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_viterbi_combined_ci_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> gr_complex_vector"""
        return _trellis.trellis_viterbi_combined_ci_sptr_TABLE(self)

    def TYPE(self):
        """TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_viterbi_combined_ci_sptr_TYPE(self)

    def set_TABLE(self, *args, **kwargs):
        """set_TABLE(self, gr_complex_vector table)"""
        return _trellis.trellis_viterbi_combined_ci_sptr_set_TABLE(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_viterbi_combined_ci_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_viterbi_combined_ci_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_viterbi_combined_ci_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_viterbi_combined_ci_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_viterbi_combined_ci_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_ci_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_viterbi_combined_ci_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_viterbi_combined_ci_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_viterbi_combined_ci_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_viterbi_combined_ci_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_ci_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_viterbi_combined_ci_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_viterbi_combined_ci_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_viterbi_combined_ci_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_viterbi_combined_ci_sptr_check_topology(self, *args, **kwargs)

trellis_viterbi_combined_ci_sptr_swigregister = _trellis.trellis_viterbi_combined_ci_sptr_swigregister
trellis_viterbi_combined_ci_sptr_swigregister(trellis_viterbi_combined_ci_sptr)

trellis_viterbi_combined_ci_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def viterbi_combined_ci(*args, **kwargs):
  """
    viterbi_combined_ci(fsm FSM, int K, int S0, int SK, int D, gr_complex_vector TABLE, 
        trellis_metric_type_t TYPE) -> trellis_viterbi_combined_ci_sptr
    """
  return _trellis.viterbi_combined_ci(*args, **kwargs)
class trellis_sccc_decoder_b_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_decoder_b)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_decoder_b_sptr
        __init__(self,  p) -> trellis_sccc_decoder_b_sptr
        """
        this = _trellis.new_trellis_sccc_decoder_b_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_decoder_b_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_decoder_b_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_b_sptr_FSMo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_b_sptr_FSMi(self)

    def STo0(self):
        """STo0(self) -> int"""
        return _trellis.trellis_sccc_decoder_b_sptr_STo0(self)

    def SToK(self):
        """SToK(self) -> int"""
        return _trellis.trellis_sccc_decoder_b_sptr_SToK(self)

    def STi0(self):
        """STi0(self) -> int"""
        return _trellis.trellis_sccc_decoder_b_sptr_STi0(self)

    def STiK(self):
        """STiK(self) -> int"""
        return _trellis.trellis_sccc_decoder_b_sptr_STiK(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_decoder_b_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_decoder_b_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_sccc_decoder_b_sptr_repetitions(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_sccc_decoder_b_sptr_SISO_TYPE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_decoder_b_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_decoder_b_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_decoder_b_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_decoder_b_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_decoder_b_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_b_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_b_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_decoder_b_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_decoder_b_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_decoder_b_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_b_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_b_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_decoder_b_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_decoder_b_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_decoder_b_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_decoder_b_sptr_swigregister = _trellis.trellis_sccc_decoder_b_sptr_swigregister
trellis_sccc_decoder_b_sptr_swigregister(trellis_sccc_decoder_b_sptr)

trellis_sccc_decoder_b_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_decoder_b(*args, **kwargs):
  """
    sccc_decoder_b(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE) -> trellis_sccc_decoder_b_sptr
    """
  return _trellis.sccc_decoder_b(*args, **kwargs)
class trellis_sccc_decoder_s_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_decoder_s)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_decoder_s_sptr
        __init__(self,  p) -> trellis_sccc_decoder_s_sptr
        """
        this = _trellis.new_trellis_sccc_decoder_s_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_decoder_s_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_decoder_s_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_s_sptr_FSMo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_s_sptr_FSMi(self)

    def STo0(self):
        """STo0(self) -> int"""
        return _trellis.trellis_sccc_decoder_s_sptr_STo0(self)

    def SToK(self):
        """SToK(self) -> int"""
        return _trellis.trellis_sccc_decoder_s_sptr_SToK(self)

    def STi0(self):
        """STi0(self) -> int"""
        return _trellis.trellis_sccc_decoder_s_sptr_STi0(self)

    def STiK(self):
        """STiK(self) -> int"""
        return _trellis.trellis_sccc_decoder_s_sptr_STiK(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_decoder_s_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_decoder_s_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_sccc_decoder_s_sptr_repetitions(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_sccc_decoder_s_sptr_SISO_TYPE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_decoder_s_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_decoder_s_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_decoder_s_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_decoder_s_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_decoder_s_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_s_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_s_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_decoder_s_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_decoder_s_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_decoder_s_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_s_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_s_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_decoder_s_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_decoder_s_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_decoder_s_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_decoder_s_sptr_swigregister = _trellis.trellis_sccc_decoder_s_sptr_swigregister
trellis_sccc_decoder_s_sptr_swigregister(trellis_sccc_decoder_s_sptr)

trellis_sccc_decoder_s_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_decoder_s(*args, **kwargs):
  """
    sccc_decoder_s(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE) -> trellis_sccc_decoder_s_sptr
    """
  return _trellis.sccc_decoder_s(*args, **kwargs)
class trellis_sccc_decoder_i_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_decoder_i)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_decoder_i_sptr
        __init__(self,  p) -> trellis_sccc_decoder_i_sptr
        """
        this = _trellis.new_trellis_sccc_decoder_i_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_decoder_i_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_decoder_i_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_i_sptr_FSMo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_i_sptr_FSMi(self)

    def STo0(self):
        """STo0(self) -> int"""
        return _trellis.trellis_sccc_decoder_i_sptr_STo0(self)

    def SToK(self):
        """SToK(self) -> int"""
        return _trellis.trellis_sccc_decoder_i_sptr_SToK(self)

    def STi0(self):
        """STi0(self) -> int"""
        return _trellis.trellis_sccc_decoder_i_sptr_STi0(self)

    def STiK(self):
        """STiK(self) -> int"""
        return _trellis.trellis_sccc_decoder_i_sptr_STiK(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_decoder_i_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_decoder_i_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_sccc_decoder_i_sptr_repetitions(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_sccc_decoder_i_sptr_SISO_TYPE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_decoder_i_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_decoder_i_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_decoder_i_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_decoder_i_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_decoder_i_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_i_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_i_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_decoder_i_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_decoder_i_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_decoder_i_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_i_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_i_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_decoder_i_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_decoder_i_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_decoder_i_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_decoder_i_sptr_swigregister = _trellis.trellis_sccc_decoder_i_sptr_swigregister
trellis_sccc_decoder_i_sptr_swigregister(trellis_sccc_decoder_i_sptr)

trellis_sccc_decoder_i_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_decoder_i(*args, **kwargs):
  """
    sccc_decoder_i(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE) -> trellis_sccc_decoder_i_sptr
    """
  return _trellis.sccc_decoder_i(*args, **kwargs)
class trellis_sccc_decoder_combined_fb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_decoder_combined_fb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_decoder_combined_fb_sptr
        __init__(self,  p) -> trellis_sccc_decoder_combined_fb_sptr
        """
        this = _trellis.new_trellis_sccc_decoder_combined_fb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_decoder_combined_fb_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_FSMo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_FSMi(self)

    def STo0(self):
        """STo0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_STo0(self)

    def SToK(self):
        """SToK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_SToK(self)

    def STi0(self):
        """STi0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_STi0(self)

    def STiK(self):
        """STiK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_STiK(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_4__"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_fb_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_decoder_combined_fb_sptr_swigregister = _trellis.trellis_sccc_decoder_combined_fb_sptr_swigregister
trellis_sccc_decoder_combined_fb_sptr_swigregister(trellis_sccc_decoder_combined_fb_sptr)

trellis_sccc_decoder_combined_fb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_decoder_combined_fb(*args, **kwargs):
  """
    sccc_decoder_combined_fb(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, __dummy_4__ TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_sccc_decoder_combined_fb_sptr
    """
  return _trellis.sccc_decoder_combined_fb(*args, **kwargs)
class trellis_sccc_decoder_combined_fs_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_decoder_combined_fs)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_decoder_combined_fs_sptr
        __init__(self,  p) -> trellis_sccc_decoder_combined_fs_sptr
        """
        this = _trellis.new_trellis_sccc_decoder_combined_fs_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_decoder_combined_fs_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_FSMo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_FSMi(self)

    def STo0(self):
        """STo0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_STo0(self)

    def SToK(self):
        """SToK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_SToK(self)

    def STi0(self):
        """STi0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_STi0(self)

    def STiK(self):
        """STiK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_STiK(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_4__"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_fs_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_decoder_combined_fs_sptr_swigregister = _trellis.trellis_sccc_decoder_combined_fs_sptr_swigregister
trellis_sccc_decoder_combined_fs_sptr_swigregister(trellis_sccc_decoder_combined_fs_sptr)

trellis_sccc_decoder_combined_fs_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_decoder_combined_fs(*args, **kwargs):
  """
    sccc_decoder_combined_fs(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, __dummy_4__ TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_sccc_decoder_combined_fs_sptr
    """
  return _trellis.sccc_decoder_combined_fs(*args, **kwargs)
class trellis_sccc_decoder_combined_fi_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_decoder_combined_fi)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_decoder_combined_fi_sptr
        __init__(self,  p) -> trellis_sccc_decoder_combined_fi_sptr
        """
        this = _trellis.new_trellis_sccc_decoder_combined_fi_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_decoder_combined_fi_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_FSMo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_FSMi(self)

    def STo0(self):
        """STo0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_STo0(self)

    def SToK(self):
        """SToK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_SToK(self)

    def STi0(self):
        """STi0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_STi0(self)

    def STiK(self):
        """STiK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_STiK(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_4__"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_fi_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_decoder_combined_fi_sptr_swigregister = _trellis.trellis_sccc_decoder_combined_fi_sptr_swigregister
trellis_sccc_decoder_combined_fi_sptr_swigregister(trellis_sccc_decoder_combined_fi_sptr)

trellis_sccc_decoder_combined_fi_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_decoder_combined_fi(*args, **kwargs):
  """
    sccc_decoder_combined_fi(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, __dummy_4__ TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_sccc_decoder_combined_fi_sptr
    """
  return _trellis.sccc_decoder_combined_fi(*args, **kwargs)
class trellis_sccc_decoder_combined_cb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_decoder_combined_cb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_decoder_combined_cb_sptr
        __init__(self,  p) -> trellis_sccc_decoder_combined_cb_sptr
        """
        this = _trellis.new_trellis_sccc_decoder_combined_cb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_decoder_combined_cb_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_FSMo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_FSMi(self)

    def STo0(self):
        """STo0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_STo0(self)

    def SToK(self):
        """SToK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_SToK(self)

    def STi0(self):
        """STi0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_STi0(self)

    def STiK(self):
        """STiK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_STiK(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> gr_complex_vector"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_cb_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_decoder_combined_cb_sptr_swigregister = _trellis.trellis_sccc_decoder_combined_cb_sptr_swigregister
trellis_sccc_decoder_combined_cb_sptr_swigregister(trellis_sccc_decoder_combined_cb_sptr)

trellis_sccc_decoder_combined_cb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_decoder_combined_cb(*args, **kwargs):
  """
    sccc_decoder_combined_cb(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, gr_complex_vector TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_sccc_decoder_combined_cb_sptr
    """
  return _trellis.sccc_decoder_combined_cb(*args, **kwargs)
class trellis_sccc_decoder_combined_cs_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_decoder_combined_cs)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_decoder_combined_cs_sptr
        __init__(self,  p) -> trellis_sccc_decoder_combined_cs_sptr
        """
        this = _trellis.new_trellis_sccc_decoder_combined_cs_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_decoder_combined_cs_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_FSMo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_FSMi(self)

    def STo0(self):
        """STo0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_STo0(self)

    def SToK(self):
        """SToK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_SToK(self)

    def STi0(self):
        """STi0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_STi0(self)

    def STiK(self):
        """STiK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_STiK(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> gr_complex_vector"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_cs_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_decoder_combined_cs_sptr_swigregister = _trellis.trellis_sccc_decoder_combined_cs_sptr_swigregister
trellis_sccc_decoder_combined_cs_sptr_swigregister(trellis_sccc_decoder_combined_cs_sptr)

trellis_sccc_decoder_combined_cs_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_decoder_combined_cs(*args, **kwargs):
  """
    sccc_decoder_combined_cs(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, gr_complex_vector TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_sccc_decoder_combined_cs_sptr
    """
  return _trellis.sccc_decoder_combined_cs(*args, **kwargs)
class trellis_sccc_decoder_combined_ci_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_sccc_decoder_combined_ci)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_sccc_decoder_combined_ci_sptr
        __init__(self,  p) -> trellis_sccc_decoder_combined_ci_sptr
        """
        this = _trellis.new_trellis_sccc_decoder_combined_ci_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_sccc_decoder_combined_ci_sptr
    __del__ = lambda self : None;
    def FSMo(self):
        """FSMo(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_FSMo(self)

    def FSMi(self):
        """FSMi(self) -> fsm"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_FSMi(self)

    def STo0(self):
        """STo0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_STo0(self)

    def SToK(self):
        """SToK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_SToK(self)

    def STi0(self):
        """STi0(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_STi0(self)

    def STiK(self):
        """STiK(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_STiK(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> gr_complex_vector"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_sccc_decoder_combined_ci_sptr_check_topology(self, *args, **kwargs)

trellis_sccc_decoder_combined_ci_sptr_swigregister = _trellis.trellis_sccc_decoder_combined_ci_sptr_swigregister
trellis_sccc_decoder_combined_ci_sptr_swigregister(trellis_sccc_decoder_combined_ci_sptr)

trellis_sccc_decoder_combined_ci_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def sccc_decoder_combined_ci(*args, **kwargs):
  """
    sccc_decoder_combined_ci(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, gr_complex_vector TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_sccc_decoder_combined_ci_sptr
    """
  return _trellis.sccc_decoder_combined_ci(*args, **kwargs)
class trellis_pccc_decoder_b_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_decoder_b)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_decoder_b_sptr
        __init__(self,  p) -> trellis_pccc_decoder_b_sptr
        """
        this = _trellis.new_trellis_pccc_decoder_b_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_decoder_b_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_decoder_b_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_b_sptr_FSM1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_b_sptr_FSM2(self)

    def ST10(self):
        """ST10(self) -> int"""
        return _trellis.trellis_pccc_decoder_b_sptr_ST10(self)

    def ST1K(self):
        """ST1K(self) -> int"""
        return _trellis.trellis_pccc_decoder_b_sptr_ST1K(self)

    def ST20(self):
        """ST20(self) -> int"""
        return _trellis.trellis_pccc_decoder_b_sptr_ST20(self)

    def ST2K(self):
        """ST2K(self) -> int"""
        return _trellis.trellis_pccc_decoder_b_sptr_ST2K(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_decoder_b_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_decoder_b_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_pccc_decoder_b_sptr_repetitions(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_pccc_decoder_b_sptr_SISO_TYPE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_decoder_b_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_decoder_b_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_decoder_b_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_decoder_b_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_decoder_b_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_b_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_b_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_decoder_b_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_decoder_b_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_decoder_b_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_b_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_b_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_decoder_b_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_decoder_b_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_decoder_b_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_decoder_b_sptr_swigregister = _trellis.trellis_pccc_decoder_b_sptr_swigregister
trellis_pccc_decoder_b_sptr_swigregister(trellis_pccc_decoder_b_sptr)

trellis_pccc_decoder_b_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_decoder_b(*args, **kwargs):
  """
    pccc_decoder_b(fsm FSM1, int ST10, int ST1K, fsm FSM2, int ST20, int ST2K, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE) -> trellis_pccc_decoder_b_sptr
    """
  return _trellis.pccc_decoder_b(*args, **kwargs)
class trellis_pccc_decoder_s_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_decoder_s)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_decoder_s_sptr
        __init__(self,  p) -> trellis_pccc_decoder_s_sptr
        """
        this = _trellis.new_trellis_pccc_decoder_s_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_decoder_s_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_decoder_s_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_s_sptr_FSM1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_s_sptr_FSM2(self)

    def ST10(self):
        """ST10(self) -> int"""
        return _trellis.trellis_pccc_decoder_s_sptr_ST10(self)

    def ST1K(self):
        """ST1K(self) -> int"""
        return _trellis.trellis_pccc_decoder_s_sptr_ST1K(self)

    def ST20(self):
        """ST20(self) -> int"""
        return _trellis.trellis_pccc_decoder_s_sptr_ST20(self)

    def ST2K(self):
        """ST2K(self) -> int"""
        return _trellis.trellis_pccc_decoder_s_sptr_ST2K(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_decoder_s_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_decoder_s_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_pccc_decoder_s_sptr_repetitions(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_pccc_decoder_s_sptr_SISO_TYPE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_decoder_s_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_decoder_s_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_decoder_s_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_decoder_s_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_decoder_s_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_s_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_s_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_decoder_s_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_decoder_s_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_decoder_s_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_s_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_s_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_decoder_s_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_decoder_s_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_decoder_s_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_decoder_s_sptr_swigregister = _trellis.trellis_pccc_decoder_s_sptr_swigregister
trellis_pccc_decoder_s_sptr_swigregister(trellis_pccc_decoder_s_sptr)

trellis_pccc_decoder_s_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_decoder_s(*args, **kwargs):
  """
    pccc_decoder_s(fsm FSM1, int ST10, int ST1K, fsm FSM2, int ST20, int ST2K, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE) -> trellis_pccc_decoder_s_sptr
    """
  return _trellis.pccc_decoder_s(*args, **kwargs)
class trellis_pccc_decoder_i_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_decoder_i)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_decoder_i_sptr
        __init__(self,  p) -> trellis_pccc_decoder_i_sptr
        """
        this = _trellis.new_trellis_pccc_decoder_i_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_decoder_i_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_decoder_i_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_i_sptr_FSM1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_i_sptr_FSM2(self)

    def ST10(self):
        """ST10(self) -> int"""
        return _trellis.trellis_pccc_decoder_i_sptr_ST10(self)

    def ST1K(self):
        """ST1K(self) -> int"""
        return _trellis.trellis_pccc_decoder_i_sptr_ST1K(self)

    def ST20(self):
        """ST20(self) -> int"""
        return _trellis.trellis_pccc_decoder_i_sptr_ST20(self)

    def ST2K(self):
        """ST2K(self) -> int"""
        return _trellis.trellis_pccc_decoder_i_sptr_ST2K(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_decoder_i_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_decoder_i_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_pccc_decoder_i_sptr_repetitions(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_pccc_decoder_i_sptr_SISO_TYPE(self)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_decoder_i_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_decoder_i_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_decoder_i_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_decoder_i_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_decoder_i_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_i_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_i_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_decoder_i_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_decoder_i_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_decoder_i_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_i_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_i_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_decoder_i_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_decoder_i_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_decoder_i_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_decoder_i_sptr_swigregister = _trellis.trellis_pccc_decoder_i_sptr_swigregister
trellis_pccc_decoder_i_sptr_swigregister(trellis_pccc_decoder_i_sptr)

trellis_pccc_decoder_i_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_decoder_i(*args, **kwargs):
  """
    pccc_decoder_i(fsm FSM1, int ST10, int ST1K, fsm FSM2, int ST20, int ST2K, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE) -> trellis_pccc_decoder_i_sptr
    """
  return _trellis.pccc_decoder_i(*args, **kwargs)
class trellis_pccc_decoder_combined_fb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_decoder_combined_fb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_decoder_combined_fb_sptr
        __init__(self,  p) -> trellis_pccc_decoder_combined_fb_sptr
        """
        this = _trellis.new_trellis_pccc_decoder_combined_fb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_decoder_combined_fb_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_FSM1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_FSM2(self)

    def ST10(self):
        """ST10(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_ST10(self)

    def ST1K(self):
        """ST1K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_ST1K(self)

    def ST20(self):
        """ST20(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_ST20(self)

    def ST2K(self):
        """ST2K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_ST2K(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_4__"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_fb_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_decoder_combined_fb_sptr_swigregister = _trellis.trellis_pccc_decoder_combined_fb_sptr_swigregister
trellis_pccc_decoder_combined_fb_sptr_swigregister(trellis_pccc_decoder_combined_fb_sptr)

trellis_pccc_decoder_combined_fb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_decoder_combined_fb(*args, **kwargs):
  """
    pccc_decoder_combined_fb(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, __dummy_4__ TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_pccc_decoder_combined_fb_sptr
    """
  return _trellis.pccc_decoder_combined_fb(*args, **kwargs)
class trellis_pccc_decoder_combined_fs_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_decoder_combined_fs)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_decoder_combined_fs_sptr
        __init__(self,  p) -> trellis_pccc_decoder_combined_fs_sptr
        """
        this = _trellis.new_trellis_pccc_decoder_combined_fs_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_decoder_combined_fs_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_FSM1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_FSM2(self)

    def ST10(self):
        """ST10(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_ST10(self)

    def ST1K(self):
        """ST1K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_ST1K(self)

    def ST20(self):
        """ST20(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_ST20(self)

    def ST2K(self):
        """ST2K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_ST2K(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_4__"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_fs_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_decoder_combined_fs_sptr_swigregister = _trellis.trellis_pccc_decoder_combined_fs_sptr_swigregister
trellis_pccc_decoder_combined_fs_sptr_swigregister(trellis_pccc_decoder_combined_fs_sptr)

trellis_pccc_decoder_combined_fs_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_decoder_combined_fs(*args, **kwargs):
  """
    pccc_decoder_combined_fs(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, __dummy_4__ TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_pccc_decoder_combined_fs_sptr
    """
  return _trellis.pccc_decoder_combined_fs(*args, **kwargs)
class trellis_pccc_decoder_combined_fi_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_decoder_combined_fi)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_decoder_combined_fi_sptr
        __init__(self,  p) -> trellis_pccc_decoder_combined_fi_sptr
        """
        this = _trellis.new_trellis_pccc_decoder_combined_fi_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_decoder_combined_fi_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_FSM1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_FSM2(self)

    def ST10(self):
        """ST10(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_ST10(self)

    def ST1K(self):
        """ST1K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_ST1K(self)

    def ST20(self):
        """ST20(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_ST20(self)

    def ST2K(self):
        """ST2K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_ST2K(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> __dummy_4__"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_fi_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_decoder_combined_fi_sptr_swigregister = _trellis.trellis_pccc_decoder_combined_fi_sptr_swigregister
trellis_pccc_decoder_combined_fi_sptr_swigregister(trellis_pccc_decoder_combined_fi_sptr)

trellis_pccc_decoder_combined_fi_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_decoder_combined_fi(*args, **kwargs):
  """
    pccc_decoder_combined_fi(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, __dummy_4__ TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_pccc_decoder_combined_fi_sptr
    """
  return _trellis.pccc_decoder_combined_fi(*args, **kwargs)
class trellis_pccc_decoder_combined_cb_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_decoder_combined_cb)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_decoder_combined_cb_sptr
        __init__(self,  p) -> trellis_pccc_decoder_combined_cb_sptr
        """
        this = _trellis.new_trellis_pccc_decoder_combined_cb_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_decoder_combined_cb_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_FSM1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_FSM2(self)

    def ST10(self):
        """ST10(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_ST10(self)

    def ST1K(self):
        """ST1K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_ST1K(self)

    def ST20(self):
        """ST20(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_ST20(self)

    def ST2K(self):
        """ST2K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_ST2K(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> gr_complex_vector"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_cb_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_decoder_combined_cb_sptr_swigregister = _trellis.trellis_pccc_decoder_combined_cb_sptr_swigregister
trellis_pccc_decoder_combined_cb_sptr_swigregister(trellis_pccc_decoder_combined_cb_sptr)

trellis_pccc_decoder_combined_cb_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_decoder_combined_cb(*args, **kwargs):
  """
    pccc_decoder_combined_cb(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, gr_complex_vector TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_pccc_decoder_combined_cb_sptr
    """
  return _trellis.pccc_decoder_combined_cb(*args, **kwargs)
class trellis_pccc_decoder_combined_cs_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_decoder_combined_cs)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_decoder_combined_cs_sptr
        __init__(self,  p) -> trellis_pccc_decoder_combined_cs_sptr
        """
        this = _trellis.new_trellis_pccc_decoder_combined_cs_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_decoder_combined_cs_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_FSM1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_FSM2(self)

    def ST10(self):
        """ST10(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_ST10(self)

    def ST1K(self):
        """ST1K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_ST1K(self)

    def ST20(self):
        """ST20(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_ST20(self)

    def ST2K(self):
        """ST2K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_ST2K(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> gr_complex_vector"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_cs_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_decoder_combined_cs_sptr_swigregister = _trellis.trellis_pccc_decoder_combined_cs_sptr_swigregister
trellis_pccc_decoder_combined_cs_sptr_swigregister(trellis_pccc_decoder_combined_cs_sptr)

trellis_pccc_decoder_combined_cs_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_decoder_combined_cs(*args, **kwargs):
  """
    pccc_decoder_combined_cs(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, gr_complex_vector TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_pccc_decoder_combined_cs_sptr
    """
  return _trellis.pccc_decoder_combined_cs(*args, **kwargs)
class trellis_pccc_decoder_combined_ci_sptr(object):
    """Proxy of C++ boost::shared_ptr<(trellis_pccc_decoder_combined_ci)> class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(self) -> trellis_pccc_decoder_combined_ci_sptr
        __init__(self,  p) -> trellis_pccc_decoder_combined_ci_sptr
        """
        this = _trellis.new_trellis_pccc_decoder_combined_ci_sptr(*args)
        try: self.this.append(this)
        except: self.this = this
    def __deref__(self):
        """__deref__(self)"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr___deref__(self)

    __swig_destroy__ = _trellis.delete_trellis_pccc_decoder_combined_ci_sptr
    __del__ = lambda self : None;
    def FSM1(self):
        """FSM1(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_FSM1(self)

    def FSM2(self):
        """FSM2(self) -> fsm"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_FSM2(self)

    def ST10(self):
        """ST10(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_ST10(self)

    def ST1K(self):
        """ST1K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_ST1K(self)

    def ST20(self):
        """ST20(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_ST20(self)

    def ST2K(self):
        """ST2K(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_ST2K(self)

    def INTERLEAVER(self):
        """INTERLEAVER(self) -> interleaver"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_INTERLEAVER(self)

    def blocklength(self):
        """blocklength(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_blocklength(self)

    def repetitions(self):
        """repetitions(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_repetitions(self)

    def D(self):
        """D(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_D(self)

    def TABLE(self):
        """TABLE(self) -> gr_complex_vector"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_TABLE(self)

    def METRIC_TYPE(self):
        """METRIC_TYPE(self) -> trellis_metric_type_t"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_METRIC_TYPE(self)

    def SISO_TYPE(self):
        """SISO_TYPE(self) -> trellis_siso_type_t"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_SISO_TYPE(self)

    def scaling(self):
        """scaling(self) -> float"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_scaling(self)

    def set_scaling(self, *args, **kwargs):
        """set_scaling(self, float scaling)"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_set_scaling(self, *args, **kwargs)

    def history(self):
        """history(self) -> unsigned int"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_history(self)

    def output_multiple(self):
        """output_multiple(self) -> int"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_output_multiple(self)

    def relative_rate(self):
        """relative_rate(self) -> double"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_relative_rate(self)

    def start(self):
        """start(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_start(self)

    def stop(self):
        """stop(self) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_stop(self)

    def nitems_read(self, *args, **kwargs):
        """nitems_read(self, unsigned int which_input) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_nitems_read(self, *args, **kwargs)

    def nitems_written(self, *args, **kwargs):
        """nitems_written(self, unsigned int which_output) -> uint64_t"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_nitems_written(self, *args, **kwargs)

    def detail(self):
        """detail(self) -> gr_block_detail_sptr"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_detail(self)

    def set_detail(self, *args, **kwargs):
        """set_detail(self, gr_block_detail_sptr detail)"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_set_detail(self, *args, **kwargs)

    def name(self):
        """name(self) -> string"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_name(self)

    def input_signature(self):
        """input_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_input_signature(self)

    def output_signature(self):
        """output_signature(self) -> gr_io_signature_sptr"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_output_signature(self)

    def unique_id(self):
        """unique_id(self) -> long"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_unique_id(self)

    def to_basic_block(self):
        """to_basic_block(self) -> gr_basic_block_sptr"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_to_basic_block(self)

    def check_topology(self, *args, **kwargs):
        """check_topology(self, int ninputs, int noutputs) -> bool"""
        return _trellis.trellis_pccc_decoder_combined_ci_sptr_check_topology(self, *args, **kwargs)

trellis_pccc_decoder_combined_ci_sptr_swigregister = _trellis.trellis_pccc_decoder_combined_ci_sptr_swigregister
trellis_pccc_decoder_combined_ci_sptr_swigregister(trellis_pccc_decoder_combined_ci_sptr)

trellis_pccc_decoder_combined_ci_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id ())


def pccc_decoder_combined_ci(*args, **kwargs):
  """
    pccc_decoder_combined_ci(fsm FSMo, int STo0, int SToK, fsm FSMi, int STi0, int STiK, 
        interleaver INTERLEAVER, int blocklength, 
        int repetitions, trellis_siso_type_t SISO_TYPE, 
        int D, gr_complex_vector TABLE, trellis_metric_type_t METRIC_TYPE, 
        float scaling) -> trellis_pccc_decoder_combined_ci_sptr
    """
  return _trellis.pccc_decoder_combined_ci(*args, **kwargs)



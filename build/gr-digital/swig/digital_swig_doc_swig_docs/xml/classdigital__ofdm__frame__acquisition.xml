<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classdigital__ofdm__frame__acquisition" kind="class" prot="public">
    <compoundname>digital_ofdm_frame_acquisition</compoundname>
    <includes refid="digital__ofdm__frame__acquisition_8h" local="no">digital_ofdm_frame_acquisition.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1ab8da47092337f039a810edb6e5442c72" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int digital_ofdm_frame_acquisition::d_occupied_carriers</definition>
        <argsstring></argsstring>
        <name>d_occupied_carriers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="86" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1af17d5c8e7a7dfb6fb190eed9edadd4e3" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int digital_ofdm_frame_acquisition::d_fft_length</definition>
        <argsstring></argsstring>
        <name>d_fft_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="87" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1a01852910faf9a86ee0551994f4084920" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int digital_ofdm_frame_acquisition::d_cplen</definition>
        <argsstring></argsstring>
        <name>d_cplen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="88" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1a5ab4a3c3112387635127af37a63442ad" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int digital_ofdm_frame_acquisition::d_freq_shift_len</definition>
        <argsstring></argsstring>
        <name>d_freq_shift_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="89" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1af82321571ffa13deffeec32f77158c00" prot="private" static="no" mutable="no">
        <type>std::vector&lt; gr_complex &gt;</type>
        <definition>std::vector&lt;gr_complex&gt; digital_ofdm_frame_acquisition::d_known_symbol</definition>
        <argsstring></argsstring>
        <name>d_known_symbol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="90" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1a80dff206f03c2ae7d9b84fb15d6ba24b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; digital_ofdm_frame_acquisition::d_known_phase_diff</definition>
        <argsstring></argsstring>
        <name>d_known_phase_diff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="91" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1afe38142d9c18c5c38a014f3a302248da" prot="private" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; digital_ofdm_frame_acquisition::d_symbol_phase_diff</definition>
        <argsstring></argsstring>
        <name>d_symbol_phase_diff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="92" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1acd3392e10ef992c4169bb1d648c54f0a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; gr_complex &gt;</type>
        <definition>std::vector&lt;gr_complex&gt; digital_ofdm_frame_acquisition::d_hestimate</definition>
        <argsstring></argsstring>
        <name>d_hestimate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="93" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1a3f5f42bd1228c45ab76611bf6918bcea" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int digital_ofdm_frame_acquisition::d_coarse_freq</definition>
        <argsstring></argsstring>
        <name>d_coarse_freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="94" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1a6b8f17de4456baefb1f1cf72c72d355f" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int digital_ofdm_frame_acquisition::d_phase_count</definition>
        <argsstring></argsstring>
        <name>d_phase_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="95" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1a4274283c632e8154136872cd9a3c9b96" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float digital_ofdm_frame_acquisition::d_snr_est</definition>
        <argsstring></argsstring>
        <name>d_snr_est</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="96" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdigital__ofdm__frame__acquisition_1a04bde5aa46f342f706b4ca53006bc289" prot="private" static="no" mutable="no">
        <type>gr_complex *</type>
        <definition>gr_complex* digital_ofdm_frame_acquisition::d_phase_lut</definition>
        <argsstring></argsstring>
        <name>d_phase_lut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="98" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classdigital__ofdm__frame__acquisition_1aa8b596a64e014d123918bf666906bfaa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend __GR_ATTR_IMPORT <ref refid="digital__ofdm__frame__acquisition_8h_1a28b15700bc2fe89911e4d951310c9184" kindref="member">digital_ofdm_frame_acquisition_sptr</ref></type>
        <definition>__GR_ATTR_IMPORT digital_ofdm_frame_acquisition_sptr digital_make_ofdm_frame_acquisition</definition>
        <argsstring>(unsigned int occupied_carriers, unsigned int fft_length, unsigned int cplen, const std::vector&lt; gr_complex &gt; &amp;known_symbol, unsigned int max_fft_shift_len)</argsstring>
        <name>digital_make_ofdm_frame_acquisition</name>
        <param>
          <type>unsigned int</type>
          <declname>occupied_carriers</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>fft_length</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cplen</declname>
        </param>
        <param>
          <type>const std::vector&lt; gr_complex &gt; &amp;</type>
          <declname>known_symbol</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>max_fft_shift_len</declname>
        </param>
        <briefdescription>
<para>Build an OFDM correlator and equalizer. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>occupied_carriers</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of subcarriers with data in the received symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fft_length</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the FFT vector (occupied_carriers + unused carriers) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cplen</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the cycle prefix </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>known_symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of complex numbers representing a known symbol at the start of a frame (usually a BPSK PN sequence) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_fft_shift_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Set&apos;s the maximum distance you can look between bins for correlation </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="72"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classdigital__ofdm__frame__acquisition_1ab78c6018c0c2a8ba38c49d990237fdd1" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>digital_ofdm_frame_acquisition::digital_ofdm_frame_acquisition</definition>
        <argsstring>(unsigned int occupied_carriers, unsigned int fft_length, unsigned int cplen, const std::vector&lt; gr_complex &gt; &amp;known_symbol, unsigned int max_fft_shift_len)</argsstring>
        <name>digital_ofdm_frame_acquisition</name>
        <param>
          <type>unsigned int</type>
          <declname>occupied_carriers</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>fft_length</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cplen</declname>
        </param>
        <param>
          <type>const std::vector&lt; gr_complex &gt; &amp;</type>
          <declname>known_symbol</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>max_fft_shift_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classdigital__ofdm__frame__acquisition_1a18fbb7db097b88cee71e213fcdcd18f7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char</type>
        <definition>unsigned char digital_ofdm_frame_acquisition::slicer</definition>
        <argsstring>(gr_complex x)</argsstring>
        <name>slicer</name>
        <param>
          <type>gr_complex</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="81"/>
      </memberdef>
      <memberdef kind="function" id="classdigital__ofdm__frame__acquisition_1a3adcd9bb2b66721587a749dd92e0a6f9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void digital_ofdm_frame_acquisition::correlate</definition>
        <argsstring>(const gr_complex *symbol, int zeros_on_left)</argsstring>
        <name>correlate</name>
        <param>
          <type>const gr_complex *</type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zeros_on_left</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="82"/>
      </memberdef>
      <memberdef kind="function" id="classdigital__ofdm__frame__acquisition_1a26f4eb9de5a68ce0067e2d189982a999" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void digital_ofdm_frame_acquisition::calculate_equalizer</definition>
        <argsstring>(const gr_complex *symbol, int zeros_on_left)</argsstring>
        <name>calculate_equalizer</name>
        <param>
          <type>const gr_complex *</type>
          <declname>symbol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>zeros_on_left</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="83"/>
      </memberdef>
      <memberdef kind="function" id="classdigital__ofdm__frame__acquisition_1ad4558869d61a19ad8943fbefbd82088c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gr_complex</type>
        <definition>gr_complex digital_ofdm_frame_acquisition::coarse_freq_comp</definition>
        <argsstring>(int freq_delta, int count)</argsstring>
        <name>coarse_freq_comp</name>
        <param>
          <type>int</type>
          <declname>freq_delta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="84"/>
      </memberdef>
      <memberdef kind="function" id="classdigital__ofdm__frame__acquisition_1a9a6e25a485b5b448ffb9dbc79154de83" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void digital_ofdm_frame_acquisition::forecast</definition>
        <argsstring>(int noutput_items, gr_vector_int &amp;ninput_items_required)</argsstring>
        <name>forecast</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_int &amp;</type>
          <declname>ninput_items_required</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdigital__ofdm__frame__acquisition_1a5eaf7d26758f6cb9486fcebcbba10640" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float digital_ofdm_frame_acquisition::snr</definition>
        <argsstring>()</argsstring>
        <name>snr</name>
        <briefdescription>
<para>Return an estimate of the SNR of the channel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="106" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classdigital__ofdm__frame__acquisition_1a25af84f8f31a5a2a8c2dc65d5d179683" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>digital_ofdm_frame_acquisition::~digital_ofdm_frame_acquisition</definition>
        <argsstring>(void)</argsstring>
        <name>~digital_ofdm_frame_acquisition</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="108"/>
      </memberdef>
      <memberdef kind="function" id="classdigital__ofdm__frame__acquisition_1aa3c370a5204800671828e0976f39b66f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int digital_ofdm_frame_acquisition::general_work</definition>
        <argsstring>(int noutput_items, gr_vector_int &amp;ninput_items, gr_vector_const_void_star &amp;input_items, gr_vector_void_star &amp;output_items)</argsstring>
        <name>general_work</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_int &amp;</type>
          <declname>ninput_items</declname>
        </param>
        <param>
          <type>gr_vector_const_void_star &amp;</type>
          <declname>input_items</declname>
        </param>
        <param>
          <type>gr_vector_void_star &amp;</type>
          <declname>output_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>take a vector of complex constellation points in from an FFT and performs a correlation and equalization.</para><para>This block takes the output of an FFT of a received OFDM symbol and finds the start of a frame based on two known symbols. It also looks at the surrounding bins in the FFT output for the correlation in case there is a large frequency shift in the data. This block assumes that the fine frequency shift has already been corrected and that the samples fall in the middle of one FFT bin. </para>    </briefdescription>
    <detaileddescription>
<para>It then uses one of those known symbols to estimate the channel response over all subcarriers and does a simple 1-tap equalization on all subcarriers. This corrects for the phase and amplitude distortion caused by the channel. </para>    </detaileddescription>
    <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" line="58" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_ofdm_frame_acquisition.h" bodystart="57" bodyend="113"/>
    <listofallmembers>
      <member refid="classdigital__ofdm__frame__acquisition_1a26f4eb9de5a68ce0067e2d189982a999" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>calculate_equalizer</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1ad4558869d61a19ad8943fbefbd82088c" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>coarse_freq_comp</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a3adcd9bb2b66721587a749dd92e0a6f9" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>correlate</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a3f5f42bd1228c45ab76611bf6918bcea" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_coarse_freq</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a01852910faf9a86ee0551994f4084920" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_cplen</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1af17d5c8e7a7dfb6fb190eed9edadd4e3" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_fft_length</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a5ab4a3c3112387635127af37a63442ad" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_freq_shift_len</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1acd3392e10ef992c4169bb1d648c54f0a" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_hestimate</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a80dff206f03c2ae7d9b84fb15d6ba24b" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_known_phase_diff</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1af82321571ffa13deffeec32f77158c00" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_known_symbol</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1ab8da47092337f039a810edb6e5442c72" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_occupied_carriers</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a6b8f17de4456baefb1f1cf72c72d355f" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_phase_count</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a04bde5aa46f342f706b4ca53006bc289" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_phase_lut</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a4274283c632e8154136872cd9a3c9b96" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_snr_est</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1afe38142d9c18c5c38a014f3a302248da" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>d_symbol_phase_diff</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1aa8b596a64e014d123918bf666906bfaa" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>digital_make_ofdm_frame_acquisition</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1ab78c6018c0c2a8ba38c49d990237fdd1" prot="protected" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>digital_ofdm_frame_acquisition</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a9a6e25a485b5b448ffb9dbc79154de83" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>forecast</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1aa3c370a5204800671828e0976f39b66f" prot="public" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>general_work</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a18fbb7db097b88cee71e213fcdcd18f7" prot="private" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>slicer</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a5eaf7d26758f6cb9486fcebcbba10640" prot="public" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>snr</name></member>
      <member refid="classdigital__ofdm__frame__acquisition_1a25af84f8f31a5a2a8c2dc65d5d179683" prot="public" virt="non-virtual"><scope>digital_ofdm_frame_acquisition</scope><name>~digital_ofdm_frame_acquisition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="digital__costas__loop__cc_8h" kind="file">
    <compoundname>digital_costas_loop_cc.h</compoundname>
    <includes local="no">gr_sync_block.h</includes>
    <includes local="no">gri_control_loop.h</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">fstream</includes>
    <includes refid="digital__api_8h" local="no">digital_api.h</includes>
    <incdepgraph>
      <node id="170">
        <label>gri_control_loop.h</label>
      </node>
      <node id="174">
        <label>gruel/attributes.h</label>
      </node>
      <node id="169">
        <label>gr_sync_block.h</label>
      </node>
      <node id="168">
        <label>/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_costas_loop_cc.h</label>
        <link refid="digital_costas_loop_cc.h"/>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
      </node>
      <node id="171">
        <label>stdexcept</label>
      </node>
      <node id="172">
        <label>fstream</label>
      </node>
      <node id="173">
        <label>digital_api.h</label>
        <link refid="digital__api_8h"/>
        <childnode refid="174" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classdigital__costas__loop__cc" prot="public">digital_costas_loop_cc</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="digital__costas__loop__cc_8h_1add7f8dd2436787c7026f12979d7ba039" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classdigital__costas__loop__cc" kindref="compound">digital_costas_loop_cc</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;digital_costas_loop_cc&gt; digital_costas_loop_cc_sptr</definition>
        <argsstring></argsstring>
        <name>digital_costas_loop_cc_sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_costas_loop_cc.h" line="60" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_costas_loop_cc.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="digital__costas__loop__cc_8h_1ada903074e51decba312a3e12b7e8fc36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__GR_ATTR_IMPORT <ref refid="digital__costas__loop__cc_8h_1add7f8dd2436787c7026f12979d7ba039" kindref="member">digital_costas_loop_cc_sptr</ref></type>
        <definition>__GR_ATTR_IMPORT digital_costas_loop_cc_sptr digital_make_costas_loop_cc</definition>
        <argsstring>(float loop_bw, int order)</argsstring>
        <name>digital_make_costas_loop_cc</name>
        <param>
          <type>float</type>
          <declname>loop_bw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>order</declname>
        </param>
        <exceptions> throw (std::invalid_argument)</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_costas_loop_cc.h" line="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006,2011<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_DIGITAL_COSTAS_LOOP_CC_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_DIGITAL_COSTAS_LOOP_CC_H</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_sync_block.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gri_control_loop.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor">#include<sp/>&lt;<ref refid="digital__api_8h" kindref="compound">digital_api.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="digital__costas__loop__cc_8h_1add7f8dd2436787c7026f12979d7ba039" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdigital__costas__loop__cc" kindref="compound" tooltip="Carrier tracking PLL for QPSKinput: complex; output: complex  The Costas loop can have two output str...">digital_costas_loop_cc</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;digital_costas_loop_cc&gt;<sp/><ref refid="digital__costas__loop__cc_8h_1add7f8dd2436787c7026f12979d7ba039" kindref="member">digital_costas_loop_cc_sptr</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="digital__costas__loop__cc_8h_1add7f8dd2436787c7026f12979d7ba039" kindref="member">digital_costas_loop_cc_sptr</ref><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="digital__costas__loop__cc_8h_1ada903074e51decba312a3e12b7e8fc36" kindref="member">digital_make_costas_loop_cc</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>loop_bw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>(std::invalid_argument);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classdigital__costas__loop__cc" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="classdigital__costas__loop__cc" kindref="compound" tooltip="Carrier tracking PLL for QPSKinput: complex; output: complex  The Costas loop can have two output str...">digital_costas_loop_cc</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>gr_sync_block,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>gri_control_loop</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="digital__costas__loop__cc_8h_1add7f8dd2436787c7026f12979d7ba039" kindref="member">digital_costas_loop_cc_sptr</ref></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><ref refid="digital__costas__loop__cc_8h_1ada903074e51decba312a3e12b7e8fc36" kindref="member">digital_make_costas_loop_cc</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>loop_bw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>(std::invalid_argument);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d_order;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="classdigital__costas__loop__cc" kindref="compound" tooltip="Carrier tracking PLL for QPSKinput: complex; output: complex  The Costas loop can have two output str...">digital_costas_loop_cc</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>loop_bw,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>(std::invalid_argument);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phase_detector_8(gr_complex<sp/>sample)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>8PSK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phase_detector_4(gr_complex<sp/>sample)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>QPSK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>phase_detector_2(gr_complex<sp/>sample)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>BPSK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>float<sp/>(<ref refid="classdigital__costas__loop__cc" kindref="compound" tooltip="Carrier tracking PLL for QPSKinput: complex; output: complex  The Costas loop can have two output str...">digital_costas_loop_cc</ref>::*d_phase_detector)(gr_complex<sp/>sample)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>work<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_vector_const_void_star<sp/>&amp;input_items,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_vector_void_star<sp/>&amp;output_items);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_costas_loop_cc.h"/>
  </compounddef>
</doxygen>

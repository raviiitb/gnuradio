<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="digital__impl__mpsk__snr__est_8h" kind="file">
    <compoundname>digital_impl_mpsk_snr_est.h</compoundname>
    <includes refid="digital__api_8h" local="no">digital_api.h</includes>
    <includes local="no">gr_sync_block.h</includes>
    <includedby refid="digital__mpsk__snr__est__cc_8h" local="no">/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_mpsk_snr_est_cc.h</includedby>
    <includedby refid="digital__probe__mpsk__snr__est__c_8h" local="no">/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_probe_mpsk_snr_est_c.h</includedby>
    <incdepgraph>
      <node id="251">
        <label>gruel/attributes.h</label>
      </node>
      <node id="252">
        <label>gr_sync_block.h</label>
      </node>
      <node id="250">
        <label>digital_api.h</label>
        <link refid="digital__api_8h"/>
        <childnode refid="251" relation="include">
        </childnode>
      </node>
      <node id="249">
        <label>/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_impl_mpsk_snr_est.h</label>
        <link refid="digital_impl_mpsk_snr_est.h"/>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="255">
        <label>/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_probe_mpsk_snr_est_c.h</label>
        <link refid="digital__probe__mpsk__snr__est__c_8h"/>
      </node>
      <node id="254">
        <label>/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_mpsk_snr_est_cc.h</label>
        <link refid="digital__mpsk__snr__est__cc_8h"/>
      </node>
      <node id="253">
        <label>/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_impl_mpsk_snr_est.h</label>
        <link refid="digital_impl_mpsk_snr_est.h"/>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classdigital__impl__mpsk__snr__est" prot="public">digital_impl_mpsk_snr_est</innerclass>
    <innerclass refid="classdigital__impl__mpsk__snr__est__simple" prot="public">digital_impl_mpsk_snr_est_simple</innerclass>
    <innerclass refid="classdigital__impl__mpsk__snr__est__skew" prot="public">digital_impl_mpsk_snr_est_skew</innerclass>
    <innerclass refid="classdigital__impl__mpsk__snr__est__m2m4" prot="public">digital_impl_mpsk_snr_est_m2m4</innerclass>
    <innerclass refid="classdigital__impl__snr__est__m2m4" prot="public">digital_impl_snr_est_m2m4</innerclass>
    <innerclass refid="classdigital__impl__mpsk__snr__est__svr" prot="public">digital_impl_mpsk_snr_est_svr</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853" prot="public" static="no">
        <name>snr_est_type_t</name>
        <enumvalue id="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853a744e64b10fa2a4fe25e2e1aa20846cca" prot="public">
          <name>SNR_EST_SIMPLE</name>
          <initializer> 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853aec30ba8b1a8135d53f074d43e882bc98" prot="public">
          <name>SNR_EST_SKEW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853aa64f2dcda2142a1f4912d570372c2c29" prot="public">
          <name>SNR_EST_M2M4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853afba9d1c8c5268ac8e74931738681a797" prot="public">
          <name>SNR_EST_SVR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for the type of SNR estimator to select. </para>        </briefdescription>
        <detaileddescription>
<para><anchor id="digital__impl__mpsk__snr__est_8h_1ref_snr_est_types"/> Below are some ROUGH estimates of what values of SNR each of these types of estimators is good for. In general, these offer a trade-off between accuracy and performance.</para><para><itemizedlist>
<listitem><para>SNR_EST_SIMPLE: Simple estimator (&gt;= 7 dB) </para></listitem>
<listitem><para>SNR_EST_SKEW: Skewness-base est (&gt;= 5 dB) </para></listitem>
<listitem><para>SNR_EST_M2M4: 2nd &amp; 4th moment est (&gt;= 1 dB) </para></listitem>
<listitem><para>SNR_EST_SVR: SVR-based est (&gt;= 0dB) </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_impl_mpsk_snr_est.h" line="41" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_impl_mpsk_snr_est.h" bodystart="41" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2011<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_DIGITAL_IMPL_MPSK_SNR_EST_H</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_DIGITAL_IMPL_MPSK_SNR_EST_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="digital__api_8h" kindref="compound">digital_api.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_sync_block.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"></codeline>
<codeline lineno="41" refid="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853" kindref="member" tooltip="Enum for the type of SNR estimator to select.">snr_est_type_t</ref><sp/>{</highlight></codeline>
<codeline lineno="42" refid="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853a744e64b10fa2a4fe25e2e1aa20846cca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853a744e64b10fa2a4fe25e2e1aa20846cca" kindref="member">SNR_EST_SIMPLE</ref><sp/>=<sp/>0,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>estimator<sp/>(&gt;=<sp/>7<sp/>dB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853aec30ba8b1a8135d53f074d43e882bc98" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853aec30ba8b1a8135d53f074d43e882bc98" kindref="member">SNR_EST_SKEW</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Skewness-base<sp/>est<sp/>(&gt;=<sp/>5<sp/>dB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853aa64f2dcda2142a1f4912d570372c2c29" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853aa64f2dcda2142a1f4912d570372c2c29" kindref="member">SNR_EST_M2M4</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2nd<sp/>&amp;<sp/>4th<sp/>moment<sp/>est<sp/>(&gt;=<sp/>1<sp/>dB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853afba9d1c8c5268ac8e74931738681a797" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="digital__impl__mpsk__snr__est_8h_1ad332265a312e8dfe1584460d8859a853afba9d1c8c5268ac8e74931738681a797" kindref="member">SNR_EST_SVR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SVR-based<sp/>est<sp/>(&gt;=<sp/>0dB)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="classdigital__impl__mpsk__snr__est" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="classdigital__impl__mpsk__snr__est" kindref="compound" tooltip="A parent class for SNR estimators, specifically for M-PSK signals in AWGN channels.">digital_impl_mpsk_snr_est</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="55" refid="classdigital__impl__mpsk__snr__est_1a1fdb4b5cacb6a4f22ba7ecf947eb020b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_alpha,<sp/><ref refid="classdigital__impl__mpsk__snr__est_1a1fdb4b5cacb6a4f22ba7ecf947eb020b" kindref="member">d_beta</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="classdigital__impl__mpsk__snr__est" kindref="compound" tooltip="A parent class for SNR estimators, specifically for M-PSK signals in AWGN channels.">digital_impl_mpsk_snr_est</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classdigital__impl__mpsk__snr__est" kindref="compound" tooltip="A parent class for SNR estimators, specifically for M-PSK signals in AWGN channels.">digital_impl_mpsk_snr_est</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_alpha(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>update(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gr_complex<sp/>*in);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>snr();</highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="83"></codeline>
<codeline lineno="90" refid="classdigital__impl__mpsk__snr__est__simple" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="classdigital__impl__mpsk__snr__est__simple" kindref="compound" tooltip="SNR Estimator using simple mean/variance estimates.">digital_impl_mpsk_snr_est_simple</ref><sp/>:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est" kindref="compound" tooltip="A parent class for SNR estimators, specifically for M-PSK signals in AWGN channels.">digital_impl_mpsk_snr_est</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_y1,<sp/>d_y2;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="classdigital__impl__mpsk__snr__est__simple" kindref="compound" tooltip="SNR Estimator using simple mean/variance estimates.">digital_impl_mpsk_snr_est_simple</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha);</highlight></codeline>
<codeline lineno="104" refid="classdigital__impl__mpsk__snr__est__simple_1af9d047c13911601b644de74fcb9713e1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdigital__impl__mpsk__snr__est__simple_1af9d047c13911601b644de74fcb9713e1" kindref="member">~digital_impl_mpsk_snr_est_simple</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est_1a7aa10fcd79810905a81b92b244d702ee" kindref="member" tooltip="Update the current registers.">update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gr_complex<sp/>*in);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est_1a1f7e662d3eb8118bc77cec9b8ff16009" kindref="member" tooltip="Use the register values to compute a new estimate.">snr</ref>();</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"></codeline>
<codeline lineno="122" refid="classdigital__impl__mpsk__snr__est__skew" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="classdigital__impl__mpsk__snr__est__skew" kindref="compound" tooltip="SNR Estimator using skewness correction.">digital_impl_mpsk_snr_est_skew</ref><sp/>:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est" kindref="compound" tooltip="A parent class for SNR estimators, specifically for M-PSK signals in AWGN channels.">digital_impl_mpsk_snr_est</ref></highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_y1,<sp/>d_y2,<sp/>d_y3;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="classdigital__impl__mpsk__snr__est__skew" kindref="compound" tooltip="SNR Estimator using skewness correction.">digital_impl_mpsk_snr_est_skew</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha);</highlight></codeline>
<codeline lineno="136" refid="classdigital__impl__mpsk__snr__est__skew_1a20d9a03ad0dc6d9b85f631b6cec9c5e6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdigital__impl__mpsk__snr__est__skew_1a20d9a03ad0dc6d9b85f631b6cec9c5e6" kindref="member">~digital_impl_mpsk_snr_est_skew</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est_1a7aa10fcd79810905a81b92b244d702ee" kindref="member" tooltip="Update the current registers.">update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gr_complex<sp/>*in);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est_1a1f7e662d3eb8118bc77cec9b8ff16009" kindref="member" tooltip="Use the register values to compute a new estimate.">snr</ref>();</highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"></codeline>
<codeline lineno="160" refid="classdigital__impl__mpsk__snr__est__m2m4" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="classdigital__impl__mpsk__snr__est__m2m4" kindref="compound" tooltip="SNR Estimator using 2nd and 4th-order moments.">digital_impl_mpsk_snr_est_m2m4</ref><sp/>:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est" kindref="compound" tooltip="A parent class for SNR estimators, specifically for M-PSK signals in AWGN channels.">digital_impl_mpsk_snr_est</ref></highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_y1,<sp/>d_y2;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="classdigital__impl__mpsk__snr__est__m2m4" kindref="compound" tooltip="SNR Estimator using 2nd and 4th-order moments.">digital_impl_mpsk_snr_est_m2m4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha);</highlight></codeline>
<codeline lineno="174" refid="classdigital__impl__mpsk__snr__est__m2m4_1a36ed440eb6db49904ce323b09ceb3134" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdigital__impl__mpsk__snr__est__m2m4_1a36ed440eb6db49904ce323b09ceb3134" kindref="member">~digital_impl_mpsk_snr_est_m2m4</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est_1a7aa10fcd79810905a81b92b244d702ee" kindref="member" tooltip="Update the current registers.">update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gr_complex<sp/>*in);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est_1a1f7e662d3eb8118bc77cec9b8ff16009" kindref="member" tooltip="Use the register values to compute a new estimate.">snr</ref>();</highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"></codeline>
<codeline lineno="212" refid="classdigital__impl__snr__est__m2m4" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="classdigital__impl__snr__est__m2m4" kindref="compound" tooltip="SNR Estimator using 2nd and 4th-order moments.">digital_impl_snr_est_m2m4</ref><sp/>:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est" kindref="compound" tooltip="A parent class for SNR estimators, specifically for M-PSK signals in AWGN channels.">digital_impl_mpsk_snr_est</ref></highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_y1,<sp/>d_y2;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_ka,<sp/>d_kw;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="classdigital__impl__snr__est__m2m4" kindref="compound" tooltip="SNR Estimator using 2nd and 4th-order moments.">digital_impl_snr_est_m2m4</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ka,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kw);</highlight></codeline>
<codeline lineno="229" refid="classdigital__impl__snr__est__m2m4_1aadc719a1217f57f3023b48f06a3ed66b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdigital__impl__snr__est__m2m4_1aadc719a1217f57f3023b48f06a3ed66b" kindref="member">~digital_impl_snr_est_m2m4</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est_1a7aa10fcd79810905a81b92b244d702ee" kindref="member" tooltip="Update the current registers.">update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gr_complex<sp/>*in);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est_1a1f7e662d3eb8118bc77cec9b8ff16009" kindref="member" tooltip="Use the register values to compute a new estimate.">snr</ref>();</highlight></codeline>
<codeline lineno="234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"></codeline>
<codeline lineno="258" refid="classdigital__impl__mpsk__snr__est__svr" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="classdigital__impl__mpsk__snr__est__svr" kindref="compound" tooltip="Signal-to-Variation Ratio SNR Estimator.">digital_impl_mpsk_snr_est_svr</ref><sp/>:</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est" kindref="compound" tooltip="A parent class for SNR estimators, specifically for M-PSK signals in AWGN channels.">digital_impl_mpsk_snr_est</ref></highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_y1,<sp/>d_y2;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="classdigital__impl__mpsk__snr__est__svr" kindref="compound" tooltip="Signal-to-Variation Ratio SNR Estimator.">digital_impl_mpsk_snr_est_svr</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha);</highlight></codeline>
<codeline lineno="272" refid="classdigital__impl__mpsk__snr__est__svr_1abe36e8a4631ef89561d6591da399e396" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdigital__impl__mpsk__snr__est__svr_1abe36e8a4631ef89561d6591da399e396" kindref="member">~digital_impl_mpsk_snr_est_svr</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est_1a7aa10fcd79810905a81b92b244d702ee" kindref="member" tooltip="Update the current registers.">update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gr_complex<sp/>*in);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classdigital__impl__mpsk__snr__est_1a1f7e662d3eb8118bc77cec9b8ff16009" kindref="member" tooltip="Use the register values to compute a new estimate.">snr</ref>();</highlight></codeline>
<codeline lineno="277"><highlight class="normal">};</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_DIGITAL_IMPL_MPSK_SNR_EST_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_impl_mpsk_snr_est.h"/>
  </compounddef>
</doxygen>

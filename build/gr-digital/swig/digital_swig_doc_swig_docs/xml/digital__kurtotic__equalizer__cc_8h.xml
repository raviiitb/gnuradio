<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="digital__kurtotic__equalizer__cc_8h" kind="file">
    <compoundname>digital_kurtotic_equalizer_cc.h</compoundname>
    <includes refid="digital__api_8h" local="no">digital_api.h</includes>
    <includes local="no">gr_adaptive_fir_ccc.h</includes>
    <includes local="no">gr_math.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="256">
        <label>/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_kurtotic_equalizer_cc.h</label>
        <link refid="digital_kurtotic_equalizer_cc.h"/>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
      </node>
      <node id="258">
        <label>gruel/attributes.h</label>
      </node>
      <node id="259">
        <label>gr_adaptive_fir_ccc.h</label>
      </node>
      <node id="257">
        <label>digital_api.h</label>
        <link refid="digital__api_8h"/>
        <childnode refid="258" relation="include">
        </childnode>
      </node>
      <node id="261">
        <label>iostream</label>
      </node>
      <node id="260">
        <label>gr_math.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classdigital__kurtotic__equalizer__cc" prot="public">digital_kurtotic_equalizer_cc</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="digital__kurtotic__equalizer__cc_8h_1afed8db95c024747c041c84d5b6a28ef9" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classdigital__kurtotic__equalizer__cc" kindref="compound">digital_kurtotic_equalizer_cc</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;digital_kurtotic_equalizer_cc&gt; digital_kurtotic_equalizer_cc_sptr</definition>
        <argsstring></argsstring>
        <name>digital_kurtotic_equalizer_cc_sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_kurtotic_equalizer_cc.h" line="32" bodyfile="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_kurtotic_equalizer_cc.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="digital__kurtotic__equalizer__cc_8h_1a3894e93c8fbff3d8d9a14c3bd803b02e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__GR_ATTR_IMPORT <ref refid="digital__kurtotic__equalizer__cc_8h_1afed8db95c024747c041c84d5b6a28ef9" kindref="member">digital_kurtotic_equalizer_cc_sptr</ref></type>
        <definition>__GR_ATTR_IMPORT digital_kurtotic_equalizer_cc_sptr digital_make_kurtotic_equalizer_cc</definition>
        <argsstring>(int num_taps, float mu)</argsstring>
        <name>digital_make_kurtotic_equalizer_cc</name>
        <param>
          <type>int</type>
          <declname>num_taps</declname>
        </param>
        <param>
          <type>float</type>
          <declname>mu</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_kurtotic_equalizer_cc.h" line="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2011<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_DIGITAL_KURTOTIC_EQUALIZER_CC_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_DIGITAL_KURTOTIC_EQUALIZER_CC_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="digital__api_8h" kindref="compound">digital_api.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_adaptive_fir_ccc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="digital__kurtotic__equalizer__cc_8h_1afed8db95c024747c041c84d5b6a28ef9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdigital__kurtotic__equalizer__cc" kindref="compound" tooltip="Implements a kurtosis-based adaptive equalizer on complex stream&amp;quot;Y. Guo, J. Zhao, Y...">digital_kurtotic_equalizer_cc</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;digital_kurtotic_equalizer_cc&gt;<sp/><ref refid="digital__kurtotic__equalizer__cc_8h_1afed8db95c024747c041c84d5b6a28ef9" kindref="member">digital_kurtotic_equalizer_cc_sptr</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="digital__kurtotic__equalizer__cc_8h_1afed8db95c024747c041c84d5b6a28ef9" kindref="member">digital_kurtotic_equalizer_cc_sptr</ref><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="digital__kurtotic__equalizer__cc_8h_1a3894e93c8fbff3d8d9a14c3bd803b02e" kindref="member">digital_make_kurtotic_equalizer_cc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_taps,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mu);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classdigital__kurtotic__equalizer__cc" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="classdigital__kurtotic__equalizer__cc" kindref="compound" tooltip="Implements a kurtosis-based adaptive equalizer on complex stream&amp;quot;Y. Guo, J. Zhao, Y...">digital_kurtotic_equalizer_cc</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>gr_adaptive_fir_ccc</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d_mu;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d_p,<sp/>d_m;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>gr_complex<sp/>d_q,<sp/>d_u;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d_alpha_p,<sp/>d_alpha_q,<sp/>d_alpha_m;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="digital__api_8h_1ae14969f36ec69051c4b2f13a0db7e9ba" kindref="member">DIGITAL_API</ref><sp/><ref refid="digital__kurtotic__equalizer__cc_8h_1afed8db95c024747c041c84d5b6a28ef9" kindref="member">digital_kurtotic_equalizer_cc_sptr</ref><sp/><ref refid="digital__kurtotic__equalizer__cc_8h_1a3894e93c8fbff3d8d9a14c3bd803b02e" kindref="member">digital_make_kurtotic_equalizer_cc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_taps,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mu);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="classdigital__kurtotic__equalizer__cc" kindref="compound" tooltip="Implements a kurtosis-based adaptive equalizer on complex stream&amp;quot;Y. Guo, J. Zhao, Y...">digital_kurtotic_equalizer_cc</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_taps,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mu);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>gr_complex<sp/>sign(gr_complex<sp/>x)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>re<sp/>=<sp/>(float)(x.real()<sp/>&gt;=<sp/>0.0f);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>im<sp/>=<sp/>(float)(x.imag()<sp/>&gt;=<sp/>0.0f);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gr_complex(re,<sp/>im);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classdigital__kurtotic__equalizer__cc_1afffe77d4e9aa59ef7b06830faeda3f03" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>gr_complex<sp/>error(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gr_complex<sp/>&amp;out)<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>p<sp/>=<sp/>E[|z|^2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>q<sp/>=<sp/>E[z^2]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m<sp/>=<sp/>E[|z|^4]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>u<sp/>=<sp/>E[kurtosis(z)]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nrm<sp/>=<sp/>norm(out);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>gr_complex<sp/>cnj<sp/>=<sp/>conj(out);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>epsilon_f<sp/>=<sp/>1e-12;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>gr_complex<sp/>epsilon_c<sp/>=<sp/>gr_complex(1e-12,<sp/>1e-12);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>d_p<sp/>=<sp/>(1-d_alpha_p)*d_p<sp/>+<sp/>(d_alpha_p)*nrm<sp/>+<sp/>epsilon_f;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>d_q<sp/>=<sp/>(1-d_alpha_q)*d_q<sp/>+<sp/>(d_alpha_q)*out*out<sp/>+<sp/>epsilon_c;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>d_m<sp/>=<sp/>(1-d_alpha_m)*d_m<sp/>+<sp/>(d_alpha_m)*nrm*nrm<sp/>+<sp/>epsilon_f;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>d_u<sp/>=<sp/>d_m<sp/>-<sp/>2.0f*(d_p*d_p)<sp/>-<sp/>d_q*d_q;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>gr_complex<sp/>F<sp/>=<sp/>(1.0f<sp/>/<sp/>(d_p*d_p*d_p))<sp/>*</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(sign(d_u)<sp/>*<sp/>(nrm*cnj<sp/>-<sp/>2.0f*d_p*cnj<sp/>-<sp/>conj(d_q)*out)<sp/>-</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abs(d_u)*cnj);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;out:<sp/>&quot;<sp/>&lt;&lt;<sp/>out<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/>p:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_p<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/>q:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_q;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/>m:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_m<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/>u:<sp/>&quot;<sp/>&lt;&lt;<sp/>d_u<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;error:<sp/>&quot;<sp/>&lt;&lt;<sp/>F<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>re<sp/>=<sp/>gr_clip(F.real(),<sp/>1.0);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>im<sp/>=<sp/>gr_clip(F.imag(),<sp/>1.0);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>gr_complex(re,<sp/>im);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="classdigital__kurtotic__equalizer__cc_1a4a99ad177cd29cf268cbb17d70ea455a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_tap(gr_complex<sp/>&amp;tap,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gr_complex<sp/>&amp;in)<sp/></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>tap<sp/>+=<sp/>d_mu*in*d_error;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105" refid="classdigital__kurtotic__equalizer__cc_1a3e418c28c61bd28e12a0327d29e778ed" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_gain(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mu)<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mu<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;digital_kurtotic_equalizer::set_gain:<sp/>Gain<sp/>value<sp/>must<sp/>be<sp/>&gt;=<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>d_mu<sp/>=<sp/>mu;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gr-digital/include/digital_kurtotic_equalizer_cc.h"/>
  </compounddef>
</doxygen>

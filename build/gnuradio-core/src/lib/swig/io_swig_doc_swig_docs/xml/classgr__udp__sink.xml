<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classgr__udp__sink" kind="class" prot="public">
    <compoundname>gr_udp_sink</compoundname>
    <includes refid="gr__udp__sink_8h" local="no">gr_udp_sink.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgr__udp__sink_1a86198c8e464c7799c428ed0cc199b7c4" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t gr_udp_sink::d_itemsize</definition>
        <argsstring></argsstring>
        <name>d_itemsize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="58" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__udp__sink_1a025970a79f905296dca98b9f98361555" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gr_udp_sink::d_payload_size</definition>
        <argsstring></argsstring>
        <name>d_payload_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="60" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__udp__sink_1aade2890db126f9ff040fec4fe71e2b4d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gr_udp_sink::d_eof</definition>
        <argsstring></argsstring>
        <name>d_eof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="61" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__udp__sink_1af79b148790d8f28c632b8d4001aedf33" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gr_udp_sink::d_socket</definition>
        <argsstring></argsstring>
        <name>d_socket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="62" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__udp__sink_1a66bfa8317a6e4fd1521453afe84e4dc2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gr_udp_sink::d_connected</definition>
        <argsstring></argsstring>
        <name>d_connected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="63" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__udp__sink_1aafe64c734391ce2823f513ec42280a44" prot="private" static="no" mutable="no">
        <type>gruel::mutex</type>
        <definition>gruel::mutex gr_udp_sink::d_mutex</definition>
        <argsstring></argsstring>
        <name>d_mutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="64" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgr__udp__sink_1a32ce1fcf4c783952927291926ca7c830" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend GR_CORE_API <ref refid="gr__udp__sink_8h_1ad898de32959e89e27f220798c745f516" kindref="member">gr_udp_sink_sptr</ref></type>
        <definition>GR_CORE_API gr_udp_sink_sptr gr_make_udp_sink</definition>
        <argsstring>(size_t itemsize, const char *host, unsigned short port, int payload_size, bool eof)</argsstring>
        <name>gr_make_udp_sink</name>
        <param>
          <type>size_t</type>
          <declname>itemsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>payload_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>eof</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="56"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgr__udp__sink_1ae4b83142ce76a6eb2319a6d56f3af0c7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr_udp_sink::gr_udp_sink</definition>
        <argsstring>(size_t itemsize, const char *host, unsigned short port, int payload_size, bool eof)</argsstring>
        <name>gr_udp_sink</name>
        <param>
          <type>size_t</type>
          <declname>itemsize</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>port</declname>
        </param>
        <param>
          <type>int</type>
          <declname>payload_size</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>eof</declname>
        </param>
        <briefdescription>
<para>UDP Sink Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itemsize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size (in bytes) of the item datatype </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>The name or IP address of the receiving host; use NULL or None for no connection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination port to connect to on receiving host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>UDP payload size by default set to 1472 = (1500 MTU - (8 byte UDP header) - (20 byte IP header)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eof</parametername>
</parameternamelist>
<parameterdescription>
<para>Send zero-length packet on disconnect </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="80"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr__udp__sink_1a1fd45dbaa9f28e948c0db03c2fe5e6e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr_udp_sink::~gr_udp_sink</definition>
        <argsstring>()</argsstring>
        <name>~gr_udp_sink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="83"/>
      </memberdef>
      <memberdef kind="function" id="classgr__udp__sink_1addfd364e9a400b77ba69760c12c6d00e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int gr_udp_sink::payload_size</definition>
        <argsstring>()</argsstring>
        <name>payload_size</name>
        <briefdescription>
<para>return the PAYLOAD_SIZE of the socket </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="86" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classgr__udp__sink_1ab93f39c0613a88896cdc0f23fc02f339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_udp_sink::connect</definition>
        <argsstring>(const char *host, unsigned short port)</argsstring>
        <name>connect</name>
        <param>
          <type>const char *</type>
          <declname>host</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>port</declname>
        </param>
        <briefdescription>
<para>Change the connection to a new destination. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>The name or IP address of the receiving host; use NULL or None to break the connection without closing </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination port to connect to on receiving host</para></parameterdescription>
</parameteritem>
</parameterlist>
Calls <ref refid="classgr__udp__sink_1a5fac74580b0dc7cf3e7fac7b87d3c7cb" kindref="member">disconnect()</ref> to terminate any current connection first. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="96"/>
      </memberdef>
      <memberdef kind="function" id="classgr__udp__sink_1a5fac74580b0dc7cf3e7fac7b87d3c7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_udp_sink::disconnect</definition>
        <argsstring>()</argsstring>
        <name>disconnect</name>
        <briefdescription>
<para>Send zero-length packet (if eof is requested) then stop sending. </para>        </briefdescription>
        <detaileddescription>
<para>Zero-byte packets can be interpreted as EOF by <ref refid="classgr__udp__source" kindref="compound">gr_udp_source</ref>. Note that disconnect occurs automatically when the sink is destroyed, but not when its top_block stops. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="103"/>
      </memberdef>
      <memberdef kind="function" id="classgr__udp__sink_1a5666786f59846c3c2984f4576060ff66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gr_udp_sink::work</definition>
        <argsstring>(int noutput_items, gr_vector_const_void_star &amp;input_items, gr_vector_void_star &amp;output_items)</argsstring>
        <name>work</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_const_void_star &amp;</type>
          <declname>input_items</declname>
        </param>
        <param>
          <type>gr_vector_void_star &amp;</type>
          <declname>output_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Write stream to an UDP socket. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itemsize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size (in bytes) of the item datatype </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>host</parametername>
</parameternamelist>
<parameterdescription>
<para>The name or IP address of the receiving host; use NULL or None for no connection </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination port to connect to on receiving host </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>payload_size</parametername>
</parameternamelist>
<parameterdescription>
<para>UDP payload size by default set to 1472 = (1500 MTU - (8 byte UDP header) - (20 byte IP header)) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eof</parametername>
</parameternamelist>
<parameterdescription>
<para>Send zero-length packet on disconnect </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" line="52" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/gr_udp_sink.h" bodystart="51" bodyend="110"/>
    <listofallmembers>
      <member refid="classgr__udp__sink_1ab93f39c0613a88896cdc0f23fc02f339" prot="public" virt="non-virtual"><scope>gr_udp_sink</scope><name>connect</name></member>
      <member refid="classgr__udp__sink_1a66bfa8317a6e4fd1521453afe84e4dc2" prot="private" virt="non-virtual"><scope>gr_udp_sink</scope><name>d_connected</name></member>
      <member refid="classgr__udp__sink_1aade2890db126f9ff040fec4fe71e2b4d" prot="private" virt="non-virtual"><scope>gr_udp_sink</scope><name>d_eof</name></member>
      <member refid="classgr__udp__sink_1a86198c8e464c7799c428ed0cc199b7c4" prot="private" virt="non-virtual"><scope>gr_udp_sink</scope><name>d_itemsize</name></member>
      <member refid="classgr__udp__sink_1aafe64c734391ce2823f513ec42280a44" prot="private" virt="non-virtual"><scope>gr_udp_sink</scope><name>d_mutex</name></member>
      <member refid="classgr__udp__sink_1a025970a79f905296dca98b9f98361555" prot="private" virt="non-virtual"><scope>gr_udp_sink</scope><name>d_payload_size</name></member>
      <member refid="classgr__udp__sink_1af79b148790d8f28c632b8d4001aedf33" prot="private" virt="non-virtual"><scope>gr_udp_sink</scope><name>d_socket</name></member>
      <member refid="classgr__udp__sink_1a5fac74580b0dc7cf3e7fac7b87d3c7cb" prot="public" virt="non-virtual"><scope>gr_udp_sink</scope><name>disconnect</name></member>
      <member refid="classgr__udp__sink_1a32ce1fcf4c783952927291926ca7c830" prot="private" virt="non-virtual"><scope>gr_udp_sink</scope><name>gr_make_udp_sink</name></member>
      <member refid="classgr__udp__sink_1ae4b83142ce76a6eb2319a6d56f3af0c7" prot="protected" virt="non-virtual"><scope>gr_udp_sink</scope><name>gr_udp_sink</name></member>
      <member refid="classgr__udp__sink_1addfd364e9a400b77ba69760c12c6d00e" prot="public" virt="non-virtual"><scope>gr_udp_sink</scope><name>payload_size</name></member>
      <member refid="classgr__udp__sink_1a5666786f59846c3c2984f4576060ff66" prot="public" virt="non-virtual"><scope>gr_udp_sink</scope><name>work</name></member>
      <member refid="classgr__udp__sink_1a1fd45dbaa9f28e948c0db03c2fe5e6e9" prot="public" virt="non-virtual"><scope>gr_udp_sink</scope><name>~gr_udp_sink</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classi2c" kind="class" prot="public">
    <compoundname>i2c</compoundname>
    <derivedcompoundref refid="classi2c__bitbang" prot="public" virt="non-virtual">i2c_bitbang</derivedcompoundref>
    <includes refid="i2c_8h" local="no">i2c.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classi2c_1a5052b59bf4913cbbf093f19260fe25bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>i2c::i2c</definition>
        <argsstring>()</argsstring>
        <name>i2c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/i2c.h" line="38" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/i2c.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classi2c_1afd966136eb0a535bc31b2ac2d2edc37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual i2c::~i2c</definition>
        <argsstring>()</argsstring>
        <name>~i2c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/i2c.h" line="39"/>
      </memberdef>
      <memberdef kind="function" id="classi2c_1a8900e88f60f3d8c7790f17f909bdbcfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool i2c::write</definition>
        <argsstring>(int addr, const unsigned char *buf, int nbytes)=0</argsstring>
        <name>write</name>
        <reimplementedby refid="classi2c__bitbang_1a36b313126b420123bceacb962cc871e5">write</reimplementedby>
        <param>
          <type>int</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nbytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true iff successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/i2c.h" line="42"/>
      </memberdef>
      <memberdef kind="function" id="classi2c_1ab8cf2942ef888184214a18a2499a326b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int i2c::read</definition>
        <argsstring>(int addr, unsigned char *buf, int max_bytes)=0</argsstring>
        <name>read</name>
        <reimplementedby refid="classi2c__bitbang_1aef0f57915960f3356707dd9a62496f36">read</reimplementedby>
        <param>
          <type>int</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of bytes read or -1 if error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/i2c.h" line="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>abstract class for controlling <ref refid="classi2c" kindref="compound">i2c</ref> bus </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="352">
        <label>i2c</label>
        <link refid="classi2c"/>
      </node>
      <node id="353">
        <label>i2c_bitbang</label>
        <link refid="classi2c__bitbang"/>
        <childnode refid="352" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/i2c.h" line="35" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/io/i2c.h" bodystart="35" bodyend="46"/>
    <listofallmembers>
      <member refid="classi2c_1a5052b59bf4913cbbf093f19260fe25bb" prot="public" virt="non-virtual"><scope>i2c</scope><name>i2c</name></member>
      <member refid="classi2c_1ab8cf2942ef888184214a18a2499a326b" prot="public" virt="pure-virtual"><scope>i2c</scope><name>read</name></member>
      <member refid="classi2c_1a8900e88f60f3d8c7790f17f909bdbcfa" prot="public" virt="pure-virtual"><scope>i2c</scope><name>write</name></member>
      <member refid="classi2c_1afd966136eb0a535bc31b2ac2d2edc37d" prot="public" virt="virtual"><scope>i2c</scope><name>~i2c</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

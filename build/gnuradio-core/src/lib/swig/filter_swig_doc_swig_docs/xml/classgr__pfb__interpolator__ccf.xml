<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classgr__pfb__interpolator__ccf" kind="class" prot="public">
    <compoundname>gr_pfb_interpolator_ccf</compoundname>
    <includes refid="gr__pfb__interpolator__ccf_8h" local="no">gr_pfb_interpolator_ccf.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgr__pfb__interpolator__ccf_1a267a62673d20804e2545d05b9f523183" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classgr__fir__ccf" kindref="compound">gr_fir_ccf</ref> * &gt;</type>
        <definition>std::vector&lt;gr_fir_ccf*&gt; gr_pfb_interpolator_ccf::d_filters</definition>
        <argsstring></argsstring>
        <name>d_filters</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="96" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__pfb__interpolator__ccf_1aea89ac0cb955747f3da5c0bd44438c92" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; float &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt;float&gt; &gt; gr_pfb_interpolator_ccf::d_taps</definition>
        <argsstring></argsstring>
        <name>d_taps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="97" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__pfb__interpolator__ccf_1af7d33fac7c7ce87e801d61937817d3a4" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int gr_pfb_interpolator_ccf::d_rate</definition>
        <argsstring></argsstring>
        <name>d_rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="98" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__pfb__interpolator__ccf_1ac6f8092b0febe04b0d4725eeea4ba6d0" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int gr_pfb_interpolator_ccf::d_taps_per_filter</definition>
        <argsstring></argsstring>
        <name>d_taps_per_filter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="99" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__pfb__interpolator__ccf_1aee71be52d61e8c097137a153cd8f3b6a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gr_pfb_interpolator_ccf::d_updated</definition>
        <argsstring></argsstring>
        <name>d_updated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="100" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgr__pfb__interpolator__ccf_1a290d9edfb106407c38022ca2905c5a5d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend GR_CORE_API <ref refid="gr__pfb__interpolator__ccf_8h_1a9d28a6e57fb44dfe9ccb744f1f617aa7" kindref="member">gr_pfb_interpolator_ccf_sptr</ref></type>
        <definition>GR_CORE_API gr_pfb_interpolator_ccf_sptr gr_make_pfb_interpolator_ccf</definition>
        <argsstring>(unsigned int interp, const std::vector&lt; float &gt; &amp;taps)</argsstring>
        <name>gr_make_pfb_interpolator_ccf</name>
        <param>
          <type>unsigned int</type>
          <declname>interp</declname>
        </param>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>taps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build the polyphase filterbank interpolator. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interp</parametername>
</parameternamelist>
<parameterdescription>
<para>(unsigned integer) Specifies the interpolation rate to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>taps</parametername>
</parameternamelist>
<parameterdescription>
<para>(vector/list of floats) The prototype filter to populate the filterbank. The taps should be generated at the interpolated sampling rate. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgr__pfb__interpolator__ccf_1ae29a60a69b3e8bf93e36409ef4bd122b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr_pfb_interpolator_ccf::gr_pfb_interpolator_ccf</definition>
        <argsstring>(unsigned int interp, const std::vector&lt; float &gt; &amp;taps)</argsstring>
        <name>gr_pfb_interpolator_ccf</name>
        <param>
          <type>unsigned int</type>
          <declname>interp</declname>
        </param>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>taps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Construct a Polyphase filterbank interpolator <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>interp</parametername>
</parameternamelist>
<parameterdescription>
<para>(unsigned integer) Specifies the interpolation rate to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>taps</parametername>
</parameternamelist>
<parameterdescription>
<para>(vector/list of floats) The prototype filter to populate the filterbank. The taps should be generated at the interpolated sampling rate. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="109"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr__pfb__interpolator__ccf_1a2eaf438a9cd2790dc7d124756d845887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr_pfb_interpolator_ccf::~gr_pfb_interpolator_ccf</definition>
        <argsstring>()</argsstring>
        <name>~gr_pfb_interpolator_ccf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="112"/>
      </memberdef>
      <memberdef kind="function" id="classgr__pfb__interpolator__ccf_1a892dd61b67931a1b46fddeb078af82dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_pfb_interpolator_ccf::set_taps</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;taps)</argsstring>
        <name>set_taps</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>taps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets the filterbank&apos;s filter taps with the new prototype filter <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>taps</parametername>
</parameternamelist>
<parameterdescription>
<para>(vector/list of floats) The prototype filter to populate the filterbank. The taps should be generated at the interpolated sampling rate. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="119"/>
      </memberdef>
      <memberdef kind="function" id="classgr__pfb__interpolator__ccf_1a13f6b31430b26996bfa9d057746adf0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_pfb_interpolator_ccf::print_taps</definition>
        <argsstring>()</argsstring>
        <name>print_taps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print all of the filterbank taps to screen. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="124"/>
      </memberdef>
      <memberdef kind="function" id="classgr__pfb__interpolator__ccf_1afc835f4e97638fd6d495832fd457932d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gr_pfb_interpolator_ccf::work</definition>
        <argsstring>(int noutput_items, gr_vector_const_void_star &amp;input_items, gr_vector_void_star &amp;output_items)</argsstring>
        <name>work</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_const_void_star &amp;</type>
          <declname>input_items</declname>
        </param>
        <param>
          <type>gr_vector_void_star &amp;</type>
          <declname>output_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Polyphase filterbank interpolator with gr_complex input, gr_complex output and float taps. </para>    </briefdescription>
    <detaileddescription>
<para>This block takes in a signal stream and performs interger up- sampling (interpolation) with a polyphase filterbank. The first input is the integer specifying how much to interpolate by. The second input is a vector (Python list) of floating-point taps of the prototype filter.</para><para>The filter&apos;s taps should be based on the interpolation rate specified. That is, the bandwidth specified is relative to the bandwidth after interpolation.</para><para>For example, using the GNU Radio&apos;s firdes utility to building filters, we build a low-pass filter with a sampling rate of <emphasis>fs</emphasis>, a 3-dB bandwidth of <emphasis>BW</emphasis> and a transition bandwidth of <emphasis>TB</emphasis>. We can also specify the out-of-band attenuation to use, ATT, and the filter window function (a Blackman-harris window in this case). The first input is the gain, which is also specified as the interpolation rate so that the output levels are the same as the input (this creates an overall increase in power).</para><para><bold><emphasis>self._taps = gr.firdes.low_pass_2(interp, interp*fs, BW, TB, attenuation_dB=ATT, window=gr.firdes.WIN_BLACKMAN_hARRIS)</emphasis></bold></para><para>The PFB interpolator code takes the taps generated above and builds a set of filters. The set contains <emphasis>interp</emphasis> number of filters and each filter contains ceil(taps.size()/interp) number of taps. Each tap from the filter prototype is sequentially inserted into the next filter. When all of the input taps are used, the remaining filters in the filterbank are filled out with 0&apos;s to make sure each filter has the same number of taps.</para><para>The theory behind this block can be found in Chapter 7.1 of the following book.</para><para><bold><emphasis>f. harris, &quot;Multirate Signal Processing for Communication
       Systems&lt;/EM&gt;,&quot; Upper Saddle River, NJ: Prentice Hall, Inc. 2004.</emphasis></bold> </para>    </detaileddescription>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" line="85" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_pfb_interpolator_ccf.h" bodystart="84" bodyend="129"/>
    <listofallmembers>
      <member refid="classgr__pfb__interpolator__ccf_1a267a62673d20804e2545d05b9f523183" prot="private" virt="non-virtual"><scope>gr_pfb_interpolator_ccf</scope><name>d_filters</name></member>
      <member refid="classgr__pfb__interpolator__ccf_1af7d33fac7c7ce87e801d61937817d3a4" prot="private" virt="non-virtual"><scope>gr_pfb_interpolator_ccf</scope><name>d_rate</name></member>
      <member refid="classgr__pfb__interpolator__ccf_1aea89ac0cb955747f3da5c0bd44438c92" prot="private" virt="non-virtual"><scope>gr_pfb_interpolator_ccf</scope><name>d_taps</name></member>
      <member refid="classgr__pfb__interpolator__ccf_1ac6f8092b0febe04b0d4725eeea4ba6d0" prot="private" virt="non-virtual"><scope>gr_pfb_interpolator_ccf</scope><name>d_taps_per_filter</name></member>
      <member refid="classgr__pfb__interpolator__ccf_1aee71be52d61e8c097137a153cd8f3b6a" prot="private" virt="non-virtual"><scope>gr_pfb_interpolator_ccf</scope><name>d_updated</name></member>
      <member refid="classgr__pfb__interpolator__ccf_1a290d9edfb106407c38022ca2905c5a5d" prot="private" virt="non-virtual"><scope>gr_pfb_interpolator_ccf</scope><name>gr_make_pfb_interpolator_ccf</name></member>
      <member refid="classgr__pfb__interpolator__ccf_1ae29a60a69b3e8bf93e36409ef4bd122b" prot="private" virt="non-virtual"><scope>gr_pfb_interpolator_ccf</scope><name>gr_pfb_interpolator_ccf</name></member>
      <member refid="classgr__pfb__interpolator__ccf_1a13f6b31430b26996bfa9d057746adf0c" prot="public" virt="non-virtual"><scope>gr_pfb_interpolator_ccf</scope><name>print_taps</name></member>
      <member refid="classgr__pfb__interpolator__ccf_1a892dd61b67931a1b46fddeb078af82dd" prot="public" virt="non-virtual"><scope>gr_pfb_interpolator_ccf</scope><name>set_taps</name></member>
      <member refid="classgr__pfb__interpolator__ccf_1afc835f4e97638fd6d495832fd457932d" prot="public" virt="non-virtual"><scope>gr_pfb_interpolator_ccf</scope><name>work</name></member>
      <member refid="classgr__pfb__interpolator__ccf_1a2eaf438a9cd2790dc7d124756d845887" prot="public" virt="non-virtual"><scope>gr_pfb_interpolator_ccf</scope><name>~gr_pfb_interpolator_ccf</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

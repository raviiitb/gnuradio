<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4" kind="class" prot="public">
    <compoundname>gr_single_pole_iir&lt; gr_complex, i_type, double &gt;</compoundname>
    <includes refid="gr__single__pole__iir_8h" local="no">gr_single_pole_iir.h</includes>
    <templateparamlist>
      <param>
        <type>class i_type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a2609b118c141b19665d16e18cc37cf0e" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double gr_single_pole_iir&lt; gr_complex, i_type, double &gt;::d_alpha</definition>
        <argsstring></argsstring>
        <name>d_alpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" line="162" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1af5a95fc377d50f3b1f74a4258fdfb9df" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double gr_single_pole_iir&lt; gr_complex, i_type, double &gt;::d_one_minus_alpha</definition>
        <argsstring></argsstring>
        <name>d_one_minus_alpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" line="163" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a89dcb1aebab3a22b2fa5186238f696d8" prot="protected" static="no" mutable="no">
        <type>gr_complexd</type>
        <definition>gr_complexd gr_single_pole_iir&lt; gr_complex, i_type, double &gt;::d_prev_output</definition>
        <argsstring></argsstring>
        <name>d_prev_output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" line="164" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a60f697c8924bd2d2ca6a370d606d2483" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gr_single_pole_iir&lt; gr_complex, i_type, double &gt;::gr_single_pole_iir</definition>
        <argsstring>(double alpha=1.0)</argsstring>
        <name>gr_single_pole_iir</name>
        <param>
          <type>double</type>
          <declname>alpha</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>construct new single pole IIR with given alpha </para>        </briefdescription>
        <detaileddescription>
<para>computes y(i) = (1-alpha) * y(i-1) + alpha * x(i) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" line="124" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1aa833356db2d31691b39b166efd615880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>gr_complex</type>
        <definition>gr_complex gr_single_pole_iir&lt; gr_complex, i_type, double &gt;::filter</definition>
        <argsstring>(const i_type input)</argsstring>
        <name>filter</name>
        <param>
          <type>const i_type</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>compute a single output value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the filtered input value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" line="133" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" bodystart="169" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a8e96513599ab00798aac14f76b451ca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_single_pole_iir&lt; gr_complex, i_type, double &gt;::filterN</definition>
        <argsstring>(gr_complex output[], const i_type input[], unsigned long n)</argsstring>
        <name>filterN</name>
        <param>
          <type>gr_complex</type>
          <declname>output</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const i_type</type>
          <declname>input</declname>
          <array>[]</array>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>compute an array of N output values. <computeroutput>input</computeroutput> must have n valid entries. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" line="139" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" bodystart="183" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1aa97e7a76ddbefd08b3a32d674891ce8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_single_pole_iir&lt; gr_complex, i_type, double &gt;::set_taps</definition>
        <argsstring>(double alpha)</argsstring>
        <name>set_taps</name>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>install <computeroutput>alpha</computeroutput> as the current taps. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" line="145" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" bodystart="144" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a93048bf18a6017347b42c6395564981b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_single_pole_iir&lt; gr_complex, i_type, double &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>reset state to zero </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" line="155" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a0d2929bf2625b21db85fa90668645273" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>gr_complexd</type>
        <definition>gr_complexd gr_single_pole_iir&lt; gr_complex, i_type, double &gt;::prev_output</definition>
        <argsstring>() const </argsstring>
        <name>prev_output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" line="159" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" bodystart="159" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" line="116" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h" bodystart="116" bodyend="165"/>
    <listofallmembers>
      <member refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a2609b118c141b19665d16e18cc37cf0e" prot="protected" virt="non-virtual"><scope>gr_single_pole_iir&lt; gr_complex, i_type, double &gt;</scope><name>d_alpha</name></member>
      <member refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1af5a95fc377d50f3b1f74a4258fdfb9df" prot="protected" virt="non-virtual"><scope>gr_single_pole_iir&lt; gr_complex, i_type, double &gt;</scope><name>d_one_minus_alpha</name></member>
      <member refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a89dcb1aebab3a22b2fa5186238f696d8" prot="protected" virt="non-virtual"><scope>gr_single_pole_iir&lt; gr_complex, i_type, double &gt;</scope><name>d_prev_output</name></member>
      <member refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1aa833356db2d31691b39b166efd615880" prot="public" virt="non-virtual"><scope>gr_single_pole_iir&lt; gr_complex, i_type, double &gt;</scope><name>filter</name></member>
      <member refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a8e96513599ab00798aac14f76b451ca2" prot="public" virt="non-virtual"><scope>gr_single_pole_iir&lt; gr_complex, i_type, double &gt;</scope><name>filterN</name></member>
      <member refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a60f697c8924bd2d2ca6a370d606d2483" prot="public" virt="non-virtual"><scope>gr_single_pole_iir&lt; gr_complex, i_type, double &gt;</scope><name>gr_single_pole_iir</name></member>
      <member refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a0d2929bf2625b21db85fa90668645273" prot="public" virt="non-virtual"><scope>gr_single_pole_iir&lt; gr_complex, i_type, double &gt;</scope><name>prev_output</name></member>
      <member refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a93048bf18a6017347b42c6395564981b" prot="public" virt="non-virtual"><scope>gr_single_pole_iir&lt; gr_complex, i_type, double &gt;</scope><name>reset</name></member>
      <member refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1aa97e7a76ddbefd08b3a32d674891ce8a" prot="public" virt="non-virtual"><scope>gr_single_pole_iir&lt; gr_complex, i_type, double &gt;</scope><name>set_taps</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

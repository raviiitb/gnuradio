<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="gr__single__pole__iir_8h" kind="file">
    <compoundname>gr_single_pole_iir.h</compoundname>
    <includes local="no">gr_core_api.h</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">gr_complex.h</includes>
    <includedby refid="gr__single__pole__iir__filter__cc_8h" local="no">/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_cc.h</includedby>
    <includedby refid="gr__single__pole__iir__filter__ff_8h" local="no">/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h</includedby>
    <incdepgraph>
      <node id="596">
        <label>stdexcept</label>
      </node>
      <node id="597">
        <label>gr_complex.h</label>
      </node>
      <node id="595">
        <label>gr_core_api.h</label>
      </node>
      <node id="594">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h</label>
        <link refid="gr_single_pole_iir.h"/>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="599">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_cc.h</label>
        <link refid="gr__single__pole__iir__filter__cc_8h"/>
      </node>
      <node id="600">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h</label>
        <link refid="gr__single__pole__iir__filter__ff_8h"/>
      </node>
      <node id="598">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h</label>
        <link refid="gr_single_pole_iir.h"/>
        <childnode refid="599" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classgr__single__pole__iir" prot="public">gr_single_pole_iir</innerclass>
    <innerclass refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4" prot="public">gr_single_pole_iir&lt; gr_complex, i_type, double &gt;</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2002,2006<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_GR_SINGLE_POLE_IIR_H_</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_GR_SINGLE_POLE_IIR_H_</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_core_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_complex.h&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>tap_type&gt;</highlight></codeline>
<codeline lineno="32" refid="classgr__single__pole__iir" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__single__pole__iir" kindref="compound" tooltip="class template for single pole IIR filter">gr_single_pole_iir</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39" refid="classgr__single__pole__iir_1a0bd31e559ccc5cce039f198ec9b88e93" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__single__pole__iir_1a0bd31e559ccc5cce039f198ec9b88e93" kindref="member" tooltip="construct new single pole IIR with given alpha">gr_single_pole_iir</ref><sp/>(tap_type<sp/>alpha<sp/>=<sp/>1.0)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1a5bd00a9e01aa6161fffad7bf395f26be" kindref="member">d_prev_output</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1af8f1dfca2e1492caf5ef10a6d01f7851" kindref="member" tooltip="install alpha as the current taps.">set_taps</ref><sp/>(alpha);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>o_type<sp/><ref refid="classgr__single__pole__iir_1ad8cecedbfed0bc1f24524d08914288c7" kindref="member" tooltip="compute a single output value.">filter</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__single__pole__iir_1aabd52c15f1973d6e75d8aad3a2c6381c" kindref="member" tooltip="compute an array of N output values. input must have n valid entries.">filterN</ref><sp/>(o_type<sp/>output[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input[],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="classgr__single__pole__iir_1af8f1dfca2e1492caf5ef10a6d01f7851" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__single__pole__iir_1af8f1dfca2e1492caf5ef10a6d01f7851" kindref="member" tooltip="install alpha as the current taps.">set_taps</ref><sp/>(tap_type<sp/>alpha)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>&lt;<sp/>0<sp/>||<sp/>alpha<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range<sp/>(</highlight><highlight class="stringliteral">&quot;Alpha<sp/>must<sp/>be<sp/>in<sp/>[0,<sp/>1]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1a3cecd484003a907e60ff8d0eff8fa887" kindref="member">d_alpha</ref><sp/>=<sp/>alpha;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1a5e0f640e76cd29ba756d962097ede891" kindref="member">d_one_minus_alpha</ref><sp/>=<sp/>1.0<sp/>-<sp/>alpha;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classgr__single__pole__iir_1aec64a97520727ae05377c782b44b6062" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__single__pole__iir_1aec64a97520727ae05377c782b44b6062" kindref="member" tooltip="reset state to zero">reset</ref><sp/>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1a5bd00a9e01aa6161fffad7bf395f26be" kindref="member">d_prev_output</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classgr__single__pole__iir_1ac9fef446e200fb03856cb2227aff9dfb" refkind="member"><highlight class="normal"><sp/><sp/>o_type<sp/><ref refid="classgr__single__pole__iir_1ac9fef446e200fb03856cb2227aff9dfb" kindref="member">prev_output</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgr__single__pole__iir_1a5bd00a9e01aa6161fffad7bf395f26be" kindref="member">d_prev_output</ref>;<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78" refid="classgr__single__pole__iir_1a3cecd484003a907e60ff8d0eff8fa887" refkind="member"><highlight class="normal"><sp/><sp/>tap_type<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1a3cecd484003a907e60ff8d0eff8fa887" kindref="member">d_alpha</ref>;</highlight></codeline>
<codeline lineno="79" refid="classgr__single__pole__iir_1a5e0f640e76cd29ba756d962097ede891" refkind="member"><highlight class="normal"><sp/><sp/>tap_type<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1a5e0f640e76cd29ba756d962097ede891" kindref="member">d_one_minus_alpha</ref>;</highlight></codeline>
<codeline lineno="80" refid="classgr__single__pole__iir_1a5bd00a9e01aa6161fffad7bf395f26be" refkind="member"><highlight class="normal"><sp/><sp/>o_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1a5bd00a9e01aa6161fffad7bf395f26be" kindref="member">d_prev_output</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>general<sp/>case.<sp/><sp/>We<sp/>may<sp/>want<sp/>to<sp/>specialize<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>tap_type&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">o_type</highlight></codeline>
<codeline lineno="89" refid="classgr__single__pole__iir_1ad8cecedbfed0bc1f24524d08914288c7" refkind="member"><highlight class="normal"><ref refid="classgr__single__pole__iir_1ad8cecedbfed0bc1f24524d08914288c7" kindref="member" tooltip="compute a single output value.">gr_single_pole_iir&lt;o_type, i_type, tap_type&gt;::filter</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>o_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/>d_alpha<sp/>*<sp/>input<sp/>+<sp/>d_one_minus_alpha<sp/>*<sp/>d_prev_output;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>d_prev_output<sp/>=<sp/>output;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(o_type)<sp/>output;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>tap_type&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classgr__single__pole__iir_1aabd52c15f1973d6e75d8aad3a2c6381c" refkind="member"><highlight class="normal"><ref refid="classgr__single__pole__iir_1aabd52c15f1973d6e75d8aad3a2c6381c" kindref="member" tooltip="compute an array of N output values. input must have n valid entries.">gr_single_pole_iir&lt;o_type, i_type, tap_type&gt;::filterN</ref><sp/>(o_type<sp/>output[],</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input[],</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>filter<sp/>(input[i]);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialized<sp/>case<sp/>for<sp/>gr_complex<sp/>output<sp/>and<sp/>double<sp/>taps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>have<sp/>a<sp/>gr_complexd<sp/>type<sp/>for<sp/>the<sp/>calculations<sp/>and<sp/>prev_output<sp/>variable<sp/>(in<sp/>stead<sp/>of<sp/>double)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="116" refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__single__pole__iir" kindref="compound" tooltip="class template for single pole IIR filter">gr_single_pole_iir</ref>&lt;gr_complex,<sp/>i_type,<sp/>double&gt;<sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123" refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a60f697c8924bd2d2ca6a370d606d2483" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__single__pole__iir_1a0bd31e559ccc5cce039f198ec9b88e93" kindref="member" tooltip="construct new single pole IIR with given alpha">gr_single_pole_iir</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>1.0)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1a5bd00a9e01aa6161fffad7bf395f26be" kindref="member">d_prev_output</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1af8f1dfca2e1492caf5ef10a6d01f7851" kindref="member" tooltip="install alpha as the current taps.">set_taps</ref><sp/>(alpha);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/>gr_complex<sp/><ref refid="classgr__single__pole__iir_1ad8cecedbfed0bc1f24524d08914288c7" kindref="member" tooltip="compute a single output value.">filter</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__single__pole__iir_1aabd52c15f1973d6e75d8aad3a2c6381c" kindref="member" tooltip="compute an array of N output values. input must have n valid entries.">filterN</ref><sp/>(gr_complex<sp/>output[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input[],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1aa97e7a76ddbefd08b3a32d674891ce8a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__single__pole__iir_1af8f1dfca2e1492caf5ef10a6d01f7851" kindref="member" tooltip="install alpha as the current taps.">set_taps</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(alpha<sp/>&lt;<sp/>0<sp/>||<sp/>alpha<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range<sp/>(</highlight><highlight class="stringliteral">&quot;Alpha<sp/>must<sp/>be<sp/>in<sp/>[0,<sp/>1]\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1a3cecd484003a907e60ff8d0eff8fa887" kindref="member">d_alpha</ref><sp/>=<sp/>alpha;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1a5e0f640e76cd29ba756d962097ede891" kindref="member">d_one_minus_alpha</ref><sp/>=<sp/>1.0<sp/>-<sp/>alpha;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a93048bf18a6017347b42c6395564981b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__single__pole__iir_1aec64a97520727ae05377c782b44b6062" kindref="member" tooltip="reset state to zero">reset</ref><sp/>()</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_1a5bd00a9e01aa6161fffad7bf395f26be" kindref="member">d_prev_output</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a0d2929bf2625b21db85fa90668645273" refkind="member"><highlight class="normal"><sp/><sp/>gr_complexd<sp/><ref refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a0d2929bf2625b21db85fa90668645273" kindref="member">prev_output</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgr__single__pole__iir_1a5bd00a9e01aa6161fffad7bf395f26be" kindref="member">d_prev_output</ref>;<sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162" refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a2609b118c141b19665d16e18cc37cf0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a2609b118c141b19665d16e18cc37cf0e" kindref="member">d_alpha</ref>;</highlight></codeline>
<codeline lineno="163" refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1af5a95fc377d50f3b1f74a4258fdfb9df" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1af5a95fc377d50f3b1f74a4258fdfb9df" kindref="member">d_one_minus_alpha</ref>;</highlight></codeline>
<codeline lineno="164" refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a89dcb1aebab3a22b2fa5186238f696d8" refkind="member"><highlight class="normal"><sp/><sp/>gr_complexd<sp/><sp/><sp/><ref refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a89dcb1aebab3a22b2fa5186238f696d8" kindref="member">d_prev_output</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">gr_complex</highlight></codeline>
<codeline lineno="169" refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1aa833356db2d31691b39b166efd615880" refkind="member"><highlight class="normal"><ref refid="classgr__single__pole__iir_1ad8cecedbfed0bc1f24524d08914288c7" kindref="member" tooltip="compute a single output value.">gr_single_pole_iir&lt;gr_complex, i_type, double&gt;::filter</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>gr_complexd<sp/><sp/><sp/>output;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>output<sp/>=<sp/><ref refid="classgr__single__pole__iir_1a3cecd484003a907e60ff8d0eff8fa887" kindref="member">d_alpha</ref><sp/>*<sp/>(gr_complexd)input<sp/>+<sp/><ref refid="classgr__single__pole__iir_1a5e0f640e76cd29ba756d962097ede891" kindref="member">d_one_minus_alpha</ref><sp/>*<sp/><ref refid="classgr__single__pole__iir_1a5bd00a9e01aa6161fffad7bf395f26be" kindref="member">d_prev_output</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="classgr__single__pole__iir_1a5bd00a9e01aa6161fffad7bf395f26be" kindref="member">d_prev_output</ref><sp/>=<sp/>output;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(gr_complex)<sp/>output;</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//Do<sp/>we<sp/>need<sp/>to<sp/>specialize<sp/>this,<sp/>although<sp/>it<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>general<sp/>case?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classgr__single__pole__iir_3_01gr__complex_00_01i__type_00_01double_01_4_1a8e96513599ab00798aac14f76b451ca2" refkind="member"><highlight class="normal"><ref refid="classgr__single__pole__iir_1aabd52c15f1973d6e75d8aad3a2c6381c" kindref="member" tooltip="compute an array of N output values. input must have n valid entries.">gr_single_pole_iir&lt;gr_complex, i_type, double&gt;::filterN</ref><sp/>(gr_complex<sp/>output[],</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input[],</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/><ref refid="classgr__single__pole__iir_1ad8cecedbfed0bc1f24524d08914288c7" kindref="member" tooltip="compute a single output value.">filter</ref><sp/>(input[i]);</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_GR_SINGLE_POLE_IIR_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="gri__iir_8h" kind="file">
    <compoundname>gri_iir.h</compoundname>
    <includes local="no">gr_core_api.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">stdexcept</includes>
    <includedby refid="gr__iir__filter__ffd_8h" local="no">/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_iir_filter_ffd.h</includedby>
    <incdepgraph>
      <node id="643">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gri_iir.h</label>
        <link refid="gri_iir.h"/>
        <childnode refid="644" relation="include">
        </childnode>
        <childnode refid="645" relation="include">
        </childnode>
        <childnode refid="646" relation="include">
        </childnode>
      </node>
      <node id="646">
        <label>stdexcept</label>
      </node>
      <node id="644">
        <label>gr_core_api.h</label>
      </node>
      <node id="645">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="647">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gri_iir.h</label>
        <link refid="gri_iir.h"/>
        <childnode refid="648" relation="include">
        </childnode>
      </node>
      <node id="648">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_iir_filter_ffd.h</label>
        <link refid="gr__iir__filter__ffd_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classgri__iir" prot="public">gri_iir</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2002<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_GRI_IIR_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_GRI_IIR_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_core_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>tap_type&gt;</highlight></codeline>
<codeline lineno="34" refid="classgri__iir" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgri__iir" kindref="compound" tooltip="base class template for Infinite Impulse Response filter (IIR)">gri_iir</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="59" refid="classgri__iir_1a79ac3f84ffeb3c6190b249a639b0f2ca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgri__iir_1a9e7ea537a27b610aa96ba407be82831d" kindref="member">gri_iir</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;tap_type&gt;&amp;<sp/>fftaps,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;tap_type&gt;&amp;<sp/>fbtaps)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>(std::invalid_argument)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgri__iir_1abbc8febf2bccd566121688c66b0b0326" kindref="member" tooltip="install new taps.">set_taps</ref><sp/>(fftaps,<sp/>fbtaps);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classgri__iir_1a9e7ea537a27b610aa96ba407be82831d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgri__iir_1a9e7ea537a27b610aa96ba407be82831d" kindref="member">gri_iir</ref><sp/>()<sp/>:<sp/><ref refid="classgri__iir_1af7e5eba6e33011c68e168a1b75ed2baa" kindref="member">d_latest_n</ref>(0),<ref refid="classgri__iir_1a325cbd21166ec28dc27ca0feccef7b38" kindref="member">d_latest_m</ref>(0)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classgri__iir_1a50545f86e1ab90ef36893d3a2b81fb2f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgri__iir_1a50545f86e1ab90ef36893d3a2b81fb2f" kindref="member">~gri_iir</ref><sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>o_type<sp/><ref refid="classgri__iir_1adb60d3d25c5fce9278d8f2cd5e3c74cb" kindref="member" tooltip="compute a single output value.">filter</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgri__iir_1aef452a0ffbc9d9040b08d58d0bbe0589" kindref="member" tooltip="compute an array of N output values. input must have N valid entries.">filter_n</ref><sp/>(o_type<sp/>output[],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input[],<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classgri__iir_1a82e9ff44853cc878f317b5405e786038" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classgri__iir_1a82e9ff44853cc878f317b5405e786038" kindref="member">ntaps_ff</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgri__iir_1aadd595c780fc6b2ee50c7c8b3eb5eea3" kindref="member">d_fftaps</ref>.size<sp/>();<sp/>}</highlight></codeline>
<codeline lineno="85" refid="classgri__iir_1afe39444b015e40596401bc98c613264b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classgri__iir_1afe39444b015e40596401bc98c613264b" kindref="member">ntaps_fb</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgri__iir_1ae270ca4360515fbd80cf9ad513b96f24" kindref="member">d_fbtaps</ref>.size<sp/>();<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classgri__iir_1abbc8febf2bccd566121688c66b0b0326" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgri__iir_1abbc8febf2bccd566121688c66b0b0326" kindref="member" tooltip="install new taps.">set_taps</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;tap_type&gt;<sp/>&amp;fftaps,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;tap_type&gt;<sp/>&amp;fbtaps)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>(std::invalid_argument)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgri__iir_1af7e5eba6e33011c68e168a1b75ed2baa" kindref="member">d_latest_n</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgri__iir_1a325cbd21166ec28dc27ca0feccef7b38" kindref="member">d_latest_m</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgri__iir_1aadd595c780fc6b2ee50c7c8b3eb5eea3" kindref="member">d_fftaps</ref><sp/>=<sp/>fftaps;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgri__iir_1ae270ca4360515fbd80cf9ad513b96f24" kindref="member">d_fbtaps</ref><sp/>=<sp/>fbtaps;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>fftaps.size<sp/>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>fbtaps.size<sp/>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgri__iir_1aac5a985051761be98d5753f5a1542003" kindref="member">d_prev_input</ref>.resize<sp/>(2<sp/>*<sp/>n);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgri__iir_1a566a5d039cf32bb27a750b123e8dae7a" kindref="member">d_prev_output</ref>.resize<sp/>(2<sp/>*<sp/>m);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2<sp/>*<sp/>n;<sp/>i++){</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgri__iir_1aac5a985051761be98d5753f5a1542003" kindref="member">d_prev_input</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>2<sp/>*<sp/>m;<sp/>i++){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgri__iir_1a566a5d039cf32bb27a750b123e8dae7a" kindref="member">d_prev_output</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="114" refid="classgri__iir_1aadd595c780fc6b2ee50c7c8b3eb5eea3" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;tap_type&gt;<sp/><ref refid="classgri__iir_1aadd595c780fc6b2ee50c7c8b3eb5eea3" kindref="member">d_fftaps</ref>;</highlight></codeline>
<codeline lineno="115" refid="classgri__iir_1ae270ca4360515fbd80cf9ad513b96f24" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;tap_type&gt;<sp/><ref refid="classgri__iir_1ae270ca4360515fbd80cf9ad513b96f24" kindref="member">d_fbtaps</ref>;</highlight></codeline>
<codeline lineno="116" refid="classgri__iir_1af7e5eba6e33011c68e168a1b75ed2baa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgri__iir_1af7e5eba6e33011c68e168a1b75ed2baa" kindref="member">d_latest_n</ref>;</highlight></codeline>
<codeline lineno="117" refid="classgri__iir_1a325cbd21166ec28dc27ca0feccef7b38" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgri__iir_1a325cbd21166ec28dc27ca0feccef7b38" kindref="member">d_latest_m</ref>;</highlight></codeline>
<codeline lineno="118" refid="classgri__iir_1a566a5d039cf32bb27a750b123e8dae7a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;tap_type&gt;<sp/><ref refid="classgri__iir_1a566a5d039cf32bb27a750b123e8dae7a" kindref="member">d_prev_output</ref>;</highlight></codeline>
<codeline lineno="119" refid="classgri__iir_1aac5a985051761be98d5753f5a1542003" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;i_type&gt;<sp/><sp/><sp/><ref refid="classgri__iir_1aac5a985051761be98d5753f5a1542003" kindref="member">d_prev_input</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>general<sp/>case.<sp/><sp/>We<sp/>may<sp/>want<sp/>to<sp/>specialize<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>tap_type&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">o_type</highlight></codeline>
<codeline lineno="128" refid="classgri__iir_1adb60d3d25c5fce9278d8f2cd5e3c74cb" refkind="member"><highlight class="normal"><ref refid="classgri__iir_1adb60d3d25c5fce9278d8f2cd5e3c74cb" kindref="member" tooltip="compute a single output value.">gri_iir&lt;i_type, o_type, tap_type&gt;::filter</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>tap_type<sp/><sp/><sp/><sp/><sp/><sp/>acc;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>ntaps_ff<sp/>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>ntaps_fb<sp/>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(o_type)<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>latest_n<sp/>=<sp/>d_latest_n;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>latest_m<sp/>=<sp/>d_latest_m;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>acc<sp/>=<sp/>d_fftaps[0]<sp/>*<sp/>input;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>n;<sp/>i<sp/>++)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>(d_fftaps[i]<sp/>*<sp/>d_prev_input[latest_n<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>m;<sp/>i<sp/>++)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>acc<sp/>+=<sp/>(d_fbtaps[i]<sp/>*<sp/>d_prev_output[latest_m<sp/>+<sp/>i]);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>values<sp/>twice<sp/>to<sp/>avoid<sp/>having<sp/>to<sp/>handle<sp/>wrap-around<sp/>in<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>d_prev_output[latest_m]<sp/>=<sp/>acc;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>d_prev_output[latest_m+m]<sp/>=<sp/>acc;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>d_prev_input[latest_n]<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>d_prev_input[latest_n+n]<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>latest_n--;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>latest_m--;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(latest_n<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>latest_n<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(latest_m<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>latest_m<sp/>+=<sp/>m;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>d_latest_m<sp/>=<sp/>latest_m;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>d_latest_n<sp/>=<sp/>latest_n;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(o_type)<sp/>acc;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>tap_type&gt;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="classgri__iir_1aef452a0ffbc9d9040b08d58d0bbe0589" refkind="member"><highlight class="normal"><ref refid="classgri__iir_1aef452a0ffbc9d9040b08d58d0bbe0589" kindref="member" tooltip="compute an array of N output values. input must have N valid entries.">gri_iir&lt;i_type, o_type, tap_type&gt;::filter_n</ref><sp/>(o_type<sp/>output[],</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>i_type<sp/>input[],</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>filter<sp/>(input[i]);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_GRI_IIR_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gri_iir.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classgr__fir__fsf" kind="class" prot="public">
    <compoundname>gr_fir_fsf</compoundname>
    <derivedcompoundref refid="classgr__fir__fsf__generic" prot="public" virt="non-virtual">gr_fir_fsf_generic</derivedcompoundref>
    <includes refid="gr__fir__fsf_8h" local="no">gr_fir_fsf.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgr__fir__fsf_1a4cd04bb59ee2ab71a3b470ead188d101" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; gr_fir_fsf::d_taps</definition>
        <argsstring></argsstring>
        <name>d_taps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" line="51" bodyfile="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr__fir__fsf_1af2b781c4ecca64a3a5315dfe6e10a62f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gr_fir_fsf::gr_fir_fsf</definition>
        <argsstring>()</argsstring>
        <name>gr_fir_fsf</name>
        <briefdescription>
<para>construct new FIR with given taps. </para>        </briefdescription>
        <detaileddescription>
<para>Note that taps must be in forward order, e.g., coefficient 0 is stored in new_taps[0], coefficient 1 is stored in new_taps[1], etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" line="64" bodyfile="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classgr__fir__fsf_1a58226fbee4ba0994918afe687343f548" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gr_fir_fsf::gr_fir_fsf</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;taps)</argsstring>
        <name>gr_fir_fsf</name>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>taps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" line="65" bodyfile="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classgr__fir__fsf_1a711d702cf671f00754acd74813d38c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual gr_fir_fsf::~gr_fir_fsf</definition>
        <argsstring>()</argsstring>
        <name>~gr_fir_fsf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" line="67"/>
      </memberdef>
      <memberdef kind="function" id="classgr__fir__fsf_1a72d4b9fb5669d54e826b506a288c3b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>short</type>
        <definition>virtual short gr_fir_fsf::filter</definition>
        <argsstring>(const float input[])=0</argsstring>
        <name>filter</name>
        <reimplementedby refid="classgr__fir__fsf__generic_1a8a88649387d44e24b3c2ab7033087f82">filter</reimplementedby>
        <reimplementedby refid="classgr__fir__fsf__simd_1a9b221f60ff010490358eed5e39bc9673">filter</reimplementedby>
        <param>
          <type>const float</type>
          <declname>input</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>compute a single output value. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>input</computeroutput> must have <ref refid="classgr__fir__fsf_1a695ea61ff30c7b9c196571834002da46" kindref="member">ntaps()</ref> valid entries. input[0] .. input[<ref refid="classgr__fir__fsf_1a695ea61ff30c7b9c196571834002da46" kindref="member">ntaps()</ref> - 1] are referenced to compute the output value.</para><para><simplesect kind="return"><para>the filtered input value. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" line="79"/>
      </memberdef>
      <memberdef kind="function" id="classgr__fir__fsf_1a40b807639ff338eea553e9cfbe5b7852" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr_fir_fsf::filterN</definition>
        <argsstring>(short output[], const float input[], unsigned long n)=0</argsstring>
        <name>filterN</name>
        <reimplementedby refid="classgr__fir__fsf__generic_1a5a22acd8dae47ae1bc008198ffa68b5e">filterN</reimplementedby>
        <param>
          <type>short</type>
          <declname>output</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const float</type>
          <declname>input</declname>
          <array>[]</array>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>compute an array of N output values. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>input</computeroutput> must have (n - 1 + <ref refid="classgr__fir__fsf_1a695ea61ff30c7b9c196571834002da46" kindref="member">ntaps()</ref>) valid entries. input[0] .. input[n - 1 + <ref refid="classgr__fir__fsf_1a695ea61ff30c7b9c196571834002da46" kindref="member">ntaps()</ref> - 1] are referenced to compute the output values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" line="88"/>
      </memberdef>
      <memberdef kind="function" id="classgr__fir__fsf_1abaa7da67d2c6484fcbf5c509b21794ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr_fir_fsf::filterNdec</definition>
        <argsstring>(short output[], const float input[], unsigned long n, unsigned decimate)=0</argsstring>
        <name>filterNdec</name>
        <reimplementedby refid="classgr__fir__fsf__generic_1a4893ed68bbc23906e76e5094b50ffbbf">filterNdec</reimplementedby>
        <param>
          <type>short</type>
          <declname>output</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const float</type>
          <declname>input</declname>
          <array>[]</array>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>n</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>decimate</declname>
        </param>
        <briefdescription>
<para>compute an array of N output values, decimating the input </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>input</computeroutput> must have (decimate * (n - 1) + <ref refid="classgr__fir__fsf_1a695ea61ff30c7b9c196571834002da46" kindref="member">ntaps()</ref>) valid entries. input[0] .. input[decimate * (n - 1) + <ref refid="classgr__fir__fsf_1a695ea61ff30c7b9c196571834002da46" kindref="member">ntaps()</ref> - 1] are referenced to compute the output values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" line="98"/>
      </memberdef>
      <memberdef kind="function" id="classgr__fir__fsf_1adc6959598abe050fe195c2202fc6c521" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void gr_fir_fsf::set_taps</definition>
        <argsstring>(const std::vector&lt; float &gt; &amp;taps)</argsstring>
        <name>set_taps</name>
        <reimplementedby refid="classgr__fir__fsf__simd_1a73c1e774c165feec6b4e16123d4d83b4">set_taps</reimplementedby>
        <param>
          <type>const std::vector&lt; float &gt; &amp;</type>
          <declname>taps</declname>
        </param>
        <briefdescription>
<para>install <computeroutput>new_taps</computeroutput> as the current taps. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" line="104" bodyfile="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classgr__fir__fsf_1a695ea61ff30c7b9c196571834002da46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned gr_fir_fsf::ntaps</definition>
        <argsstring>() const </argsstring>
        <name>ntaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>number of taps in filter. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" line="113" bodyfile="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" bodystart="113" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classgr__fir__fsf_1ae6dcb8e0d14dd3fe98459f76d1b329c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::vector&lt; float &gt;</type>
        <definition>virtual const std::vector&lt;float&gt; gr_fir_fsf::get_taps</definition>
        <argsstring>() const </argsstring>
        <name>get_taps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>current taps </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" line="119" bodyfile="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" bodystart="118" bodyend="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Abstract class for FIR with float input, short output and float taps</para><para>This is the abstract class for a Finite Impulse Response filter. </para>    </briefdescription>
    <detaileddescription>
<para>The trailing suffix has the form _IOT where I codes the input type, O codes the output type, and T codes the tap type. I,O,T are elements of the set &apos;s&apos; (short), &apos;f&apos; (float), &apos;c&apos; (gr_complex), &apos;i&apos; (int) </para>    </detaileddescription>
    <inheritancegraph>
      <node id="567">
        <label>gr_fir_fsf_simd</label>
        <link refid="classgr__fir__fsf__simd"/>
        <childnode refid="566" relation="public-inheritance">
        </childnode>
      </node>
      <node id="565">
        <label>gr_fir_fsf</label>
        <link refid="classgr__fir__fsf"/>
      </node>
      <node id="569">
        <label>gr_fir_fsf_sse</label>
        <link refid="classgr__fir__fsf__sse"/>
        <childnode refid="567" relation="public-inheritance">
        </childnode>
      </node>
      <node id="566">
        <label>gr_fir_fsf_generic</label>
        <link refid="classgr__fir__fsf__generic"/>
        <childnode refid="565" relation="public-inheritance">
        </childnode>
      </node>
      <node id="568">
        <label>gr_fir_fsf_3dnow</label>
        <link refid="classgr__fir__fsf__3dnow"/>
        <childnode refid="567" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="571">
        <label>std::vector&lt; float &gt;</label>
      </node>
      <node id="570">
        <label>gr_fir_fsf</label>
        <link refid="classgr__fir__fsf"/>
        <childnode refid="571" relation="usage">
          <edgelabel>d_taps</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" line="48" bodyfile="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_fsf.h" bodystart="48" bodyend="122"/>
    <listofallmembers>
      <member refid="classgr__fir__fsf_1a4cd04bb59ee2ab71a3b470ead188d101" prot="protected" virt="non-virtual"><scope>gr_fir_fsf</scope><name>d_taps</name></member>
      <member refid="classgr__fir__fsf_1a72d4b9fb5669d54e826b506a288c3b12" prot="public" virt="pure-virtual"><scope>gr_fir_fsf</scope><name>filter</name></member>
      <member refid="classgr__fir__fsf_1a40b807639ff338eea553e9cfbe5b7852" prot="public" virt="pure-virtual"><scope>gr_fir_fsf</scope><name>filterN</name></member>
      <member refid="classgr__fir__fsf_1abaa7da67d2c6484fcbf5c509b21794ed" prot="public" virt="pure-virtual"><scope>gr_fir_fsf</scope><name>filterNdec</name></member>
      <member refid="classgr__fir__fsf_1ae6dcb8e0d14dd3fe98459f76d1b329c9" prot="public" virt="virtual"><scope>gr_fir_fsf</scope><name>get_taps</name></member>
      <member refid="classgr__fir__fsf_1af2b781c4ecca64a3a5315dfe6e10a62f" prot="public" virt="non-virtual"><scope>gr_fir_fsf</scope><name>gr_fir_fsf</name></member>
      <member refid="classgr__fir__fsf_1a58226fbee4ba0994918afe687343f548" prot="public" virt="non-virtual"><scope>gr_fir_fsf</scope><name>gr_fir_fsf</name></member>
      <member refid="classgr__fir__fsf_1a695ea61ff30c7b9c196571834002da46" prot="public" virt="non-virtual"><scope>gr_fir_fsf</scope><name>ntaps</name></member>
      <member refid="classgr__fir__fsf_1adc6959598abe050fe195c2202fc6c521" prot="public" virt="virtual"><scope>gr_fir_fsf</scope><name>set_taps</name></member>
      <member refid="classgr__fir__fsf_1a711d702cf671f00754acd74813d38c4d" prot="public" virt="virtual"><scope>gr_fir_fsf</scope><name>~gr_fir_fsf</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

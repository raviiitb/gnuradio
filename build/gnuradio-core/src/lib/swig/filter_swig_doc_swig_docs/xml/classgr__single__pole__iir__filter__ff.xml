<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classgr__single__pole__iir__filter__ff" kind="class" prot="public">
    <compoundname>gr_single_pole_iir_filter_ff</compoundname>
    <includes refid="gr__single__pole__iir__filter__ff_8h" local="no">gr_single_pole_iir_filter_ff.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgr__single__pole__iir__filter__ff_1acc6e78d076f10ca8a4e82c4fa48db8ff" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int gr_single_pole_iir_filter_ff::d_vlen</definition>
        <argsstring></argsstring>
        <name>d_vlen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h" line="72" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__single__pole__iir__filter__ff_1aa7ba57563f4a15cc1629ef194d88f55f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classgr__single__pole__iir" kindref="compound">gr_single_pole_iir</ref>&lt; float, float, double &gt; &gt;</type>
        <definition>std::vector&lt;gr_single_pole_iir&lt;float,float,double&gt; &gt; gr_single_pole_iir_filter_ff::d_iir</definition>
        <argsstring></argsstring>
        <name>d_iir</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h" line="73" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgr__single__pole__iir__filter__ff_1ab7788c33a303afc9931592ed2c913d75" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend GR_CORE_API <ref refid="gr__single__pole__iir__filter__ff_8h_1a79f42743bb13fefd3394ca1b1c7a3aa3" kindref="member">gr_single_pole_iir_filter_ff_sptr</ref></type>
        <definition>GR_CORE_API gr_single_pole_iir_filter_ff_sptr gr_make_single_pole_iir_filter_ff</definition>
        <argsstring>(double alpha, unsigned int vlen)</argsstring>
        <name>gr_make_single_pole_iir_filter_ff</name>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>vlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h" line="70"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgr__single__pole__iir__filter__ff_1a964b4b914173300afbf85371eef60441" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr_single_pole_iir_filter_ff::gr_single_pole_iir_filter_ff</definition>
        <argsstring>(double alpha, unsigned int vlen)</argsstring>
        <name>gr_single_pole_iir_filter_ff</name>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>vlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h" line="75"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr__single__pole__iir__filter__ff_1ae0494465fb6923cf3646e0e1f6d6e440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr_single_pole_iir_filter_ff::~gr_single_pole_iir_filter_ff</definition>
        <argsstring>()</argsstring>
        <name>~gr_single_pole_iir_filter_ff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h" line="78"/>
      </memberdef>
      <memberdef kind="function" id="classgr__single__pole__iir__filter__ff_1a976054dc62593e2e25416d1c9d95dd18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_single_pole_iir_filter_ff::set_taps</definition>
        <argsstring>(double alpha)</argsstring>
        <name>set_taps</name>
        <param>
          <type>double</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h" line="80"/>
      </memberdef>
      <memberdef kind="function" id="classgr__single__pole__iir__filter__ff_1a24f289a15c2060345be5212c5b97c243" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gr_single_pole_iir_filter_ff::work</definition>
        <argsstring>(int noutput_items, gr_vector_const_void_star &amp;input_items, gr_vector_void_star &amp;output_items)</argsstring>
        <name>work</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_const_void_star &amp;</type>
          <declname>input_items</declname>
        </param>
        <param>
          <type>gr_vector_void_star &amp;</type>
          <declname>output_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h" line="84"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>single pole IIR filter with float input, float output</para><para>The input and output satisfy a difference equation of the form <htmlonly> 
 \f{
 y[n] - (1-alpha) y[n-1] = alpha x[n]
 \f}
 </htmlonly> </para>    </briefdescription>
    <detaileddescription>
<para> 
 y[n] - (1-alpha) y[n-1] = alpha x[n]
 </para><para>with the corresponding rational system function <htmlonly> 
 \f{
 H(z) = \frac{alpha}{1 - (1-alpha) z^{-1}}
 \f}
 </htmlonly></para><para> 
H(z) = \ frac{alpha}{1 - (1-alpha) z^{-1}}
 </para><para>Note that some texts define the system function with a + in the denominator. If you&apos;re using that convention, you&apos;ll need to negate the feedback tap. </para>    </detaileddescription>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h" line="67" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_single_pole_iir_filter_ff.h" bodystart="66" bodyend="85"/>
    <listofallmembers>
      <member refid="classgr__single__pole__iir__filter__ff_1aa7ba57563f4a15cc1629ef194d88f55f" prot="private" virt="non-virtual"><scope>gr_single_pole_iir_filter_ff</scope><name>d_iir</name></member>
      <member refid="classgr__single__pole__iir__filter__ff_1acc6e78d076f10ca8a4e82c4fa48db8ff" prot="private" virt="non-virtual"><scope>gr_single_pole_iir_filter_ff</scope><name>d_vlen</name></member>
      <member refid="classgr__single__pole__iir__filter__ff_1ab7788c33a303afc9931592ed2c913d75" prot="private" virt="non-virtual"><scope>gr_single_pole_iir_filter_ff</scope><name>gr_make_single_pole_iir_filter_ff</name></member>
      <member refid="classgr__single__pole__iir__filter__ff_1a964b4b914173300afbf85371eef60441" prot="private" virt="non-virtual"><scope>gr_single_pole_iir_filter_ff</scope><name>gr_single_pole_iir_filter_ff</name></member>
      <member refid="classgr__single__pole__iir__filter__ff_1a976054dc62593e2e25416d1c9d95dd18" prot="public" virt="non-virtual"><scope>gr_single_pole_iir_filter_ff</scope><name>set_taps</name></member>
      <member refid="classgr__single__pole__iir__filter__ff_1a24f289a15c2060345be5212c5b97c243" prot="public" virt="non-virtual"><scope>gr_single_pole_iir_filter_ff</scope><name>work</name></member>
      <member refid="classgr__single__pole__iir__filter__ff_1ae0494465fb6923cf3646e0e1f6d6e440" prot="public" virt="non-virtual"><scope>gr_single_pole_iir_filter_ff</scope><name>~gr_single_pole_iir_filter_ff</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

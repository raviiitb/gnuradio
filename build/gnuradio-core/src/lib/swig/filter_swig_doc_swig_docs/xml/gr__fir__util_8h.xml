<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="gr__fir__util_8h" kind="file">
    <compoundname>gr_fir_util.h</compoundname>
    <includes local="no">gr_core_api.h</includes>
    <includes local="no">gr_types.h</includes>
    <includedby refid="gr__fir__sysconfig_8h" local="no">/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_sysconfig.h</includedby>
    <incdepgraph>
      <node id="154">
        <label>gr_types.h</label>
      </node>
      <node id="153">
        <label>gr_core_api.h</label>
      </node>
      <node id="152">
        <label>/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_util.h</label>
        <link refid="gr_fir_util.h"/>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="156">
        <label>/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_sysconfig.h</label>
        <link refid="gr__fir__sysconfig_8h"/>
        <childnode refid="157" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_fir_sysconfig_powerpc.h</label>
        <link refid="gr__fir__sysconfig__powerpc_8h"/>
      </node>
      <node id="158">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_fir_sysconfig_armv7_a.h</label>
        <link refid="gr__fir__sysconfig__armv7__a_8h"/>
      </node>
      <node id="155">
        <label>/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_util.h</label>
        <link refid="gr_fir_util.h"/>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_sysconfig_generic.h</label>
        <link refid="gr__fir__sysconfig__generic_8h"/>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_fir_sysconfig_x86.h</label>
        <link refid="gr__fir__sysconfig__x86_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structgr__fir__ccf__info" prot="public">gr_fir_ccf_info</innerclass>
    <innerclass refid="structgr__fir__fcc__info" prot="public">gr_fir_fcc_info</innerclass>
    <innerclass refid="structgr__fir__ccc__info" prot="public">gr_fir_ccc_info</innerclass>
    <innerclass refid="structgr__fir__fff__info" prot="public">gr_fir_fff_info</innerclass>
    <innerclass refid="structgr__fir__scc__info" prot="public">gr_fir_scc_info</innerclass>
    <innerclass refid="structgr__fir__fsf__info" prot="public">gr_fir_fsf_info</innerclass>
    <innerclass refid="structgr__fir__util" prot="public">gr_fir_util</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2003,2004<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>WARNING:<sp/>This<sp/>file<sp/>is<sp/>automatically<sp/>generated<sp/>by</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>generate_gr_fir_util.py.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>Any<sp/>changes<sp/>made<sp/>to<sp/>this<sp/>file<sp/>will<sp/>be<sp/>overwritten.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_GR_FIR_UTIL_H</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_GR_FIR_UTIL_H</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor">#include<sp/>&lt;gr_core_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__fir__ccf" kindref="compound" tooltip="Abstract class for FIR with gr_complex input, gr_complex output and float tapsThis is the abstract cl...">gr_fir_ccf</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__fir__fcc" kindref="compound" tooltip="Abstract class for FIR with float input, gr_complex output and gr_complex tapsThis is the abstract cl...">gr_fir_fcc</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__fir__ccc" kindref="compound" tooltip="Abstract class for FIR with gr_complex input, gr_complex output and gr_complex tapsThis is the abstra...">gr_fir_ccc</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__fir__fff" kindref="compound" tooltip="Abstract class for FIR with float input, float output and float tapsThis is the abstract class for a ...">gr_fir_fff</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__fir__scc" kindref="compound" tooltip="Abstract class for FIR with short input, gr_complex output and gr_complex tapsThis is the abstract cl...">gr_fir_scc</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__fir__fsf" kindref="compound" tooltip="Abstract class for FIR with float input, short output and float tapsThis is the abstract class for a ...">gr_fir_fsf</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>structures<sp/>returned<sp/>by<sp/>get_gr_fir_XXX_info<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structgr__fir__ccf__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="structgr__fir__ccf__info" kindref="compound">gr_fir_ccf_info</ref><sp/>{</highlight></codeline>
<codeline lineno="61" refid="structgr__fir__ccf__info_1ab93b6a691673ce2c26d3c5584d70d250" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="structgr__fir__ccf__info_1ab93b6a691673ce2c26d3c5584d70d250" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>name,<sp/>e.g.,<sp/>&quot;generic&quot;,<sp/>&quot;SSE&quot;,<sp/>&quot;3DNow!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structgr__fir__ccf__info_1ac1590d8a50eaf9c4fd7ff30e9bc90a4e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__fir__ccf" kindref="compound" tooltip="Abstract class for FIR with gr_complex input, gr_complex output and float tapsThis is the abstract cl...">gr_fir_ccf</ref><sp/><sp/><sp/><sp/>*(*create)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structgr__fir__fcc__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="structgr__fir__fcc__info" kindref="compound">gr_fir_fcc_info</ref><sp/>{</highlight></codeline>
<codeline lineno="66" refid="structgr__fir__fcc__info_1abcbedaa9197808529b49cc864da0631b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="structgr__fir__fcc__info_1abcbedaa9197808529b49cc864da0631b" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>name,<sp/>e.g.,<sp/>&quot;generic&quot;,<sp/>&quot;SSE&quot;,<sp/>&quot;3DNow!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structgr__fir__fcc__info_1a3a606c7a0d8902eed93c2c31d1cd5d5a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__fir__fcc" kindref="compound" tooltip="Abstract class for FIR with float input, gr_complex output and gr_complex tapsThis is the abstract cl...">gr_fir_fcc</ref><sp/><sp/><sp/><sp/>*(*create)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;gr_complex&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="structgr__fir__ccc__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="structgr__fir__ccc__info" kindref="compound">gr_fir_ccc_info</ref><sp/>{</highlight></codeline>
<codeline lineno="71" refid="structgr__fir__ccc__info_1a9a4427fec75c88c6e32e54cde9ffc035" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="structgr__fir__ccc__info_1a9a4427fec75c88c6e32e54cde9ffc035" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>name,<sp/>e.g.,<sp/>&quot;generic&quot;,<sp/>&quot;SSE&quot;,<sp/>&quot;3DNow!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="structgr__fir__ccc__info_1ad142ed96680c92893b4bfa94c89bcab7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__fir__ccc" kindref="compound" tooltip="Abstract class for FIR with gr_complex input, gr_complex output and gr_complex tapsThis is the abstra...">gr_fir_ccc</ref><sp/><sp/><sp/><sp/>*(*create)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;gr_complex&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structgr__fir__fff__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="structgr__fir__fff__info" kindref="compound">gr_fir_fff_info</ref><sp/>{</highlight></codeline>
<codeline lineno="76" refid="structgr__fir__fff__info_1a56f138dcab8baa0a1a66d986a9793bf7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="structgr__fir__fff__info_1a56f138dcab8baa0a1a66d986a9793bf7" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>name,<sp/>e.g.,<sp/>&quot;generic&quot;,<sp/>&quot;SSE&quot;,<sp/>&quot;3DNow!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structgr__fir__fff__info_1adaf6c12946519d91dd8224c530225c9a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__fir__fff" kindref="compound" tooltip="Abstract class for FIR with float input, float output and float tapsThis is the abstract class for a ...">gr_fir_fff</ref><sp/><sp/><sp/><sp/>*(*create)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="structgr__fir__scc__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="structgr__fir__scc__info" kindref="compound">gr_fir_scc_info</ref><sp/>{</highlight></codeline>
<codeline lineno="81" refid="structgr__fir__scc__info_1a9dfd54f0ce1cb7a98f1d35e90796e3d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="structgr__fir__scc__info_1a9dfd54f0ce1cb7a98f1d35e90796e3d9" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>name,<sp/>e.g.,<sp/>&quot;generic&quot;,<sp/>&quot;SSE&quot;,<sp/>&quot;3DNow!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structgr__fir__scc__info_1a8fd5175063394a503dd3e7973d8cb428" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__fir__scc" kindref="compound" tooltip="Abstract class for FIR with short input, gr_complex output and gr_complex tapsThis is the abstract cl...">gr_fir_scc</ref><sp/><sp/><sp/><sp/>*(*create)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;gr_complex&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="structgr__fir__fsf__info" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="structgr__fir__fsf__info" kindref="compound">gr_fir_fsf_info</ref><sp/>{</highlight></codeline>
<codeline lineno="86" refid="structgr__fir__fsf__info_1a11f1c7598d7e0aabfdafd4a819737a7e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="structgr__fir__fsf__info_1a11f1c7598d7e0aabfdafd4a819737a7e" kindref="member">name</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implementation<sp/>name,<sp/>e.g.,<sp/>&quot;generic&quot;,<sp/>&quot;SSE&quot;,<sp/>&quot;3DNow!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structgr__fir__fsf__info_1a04583a831e8b40fae941eac7cd9e32b8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__fir__fsf" kindref="compound" tooltip="Abstract class for FIR with float input, short output and float tapsThis is the abstract class for a ...">gr_fir_fsf</ref><sp/><sp/><sp/><sp/>*(*create)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="structgr__fir__util" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="structgr__fir__util" kindref="compound">gr_fir_util</ref><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>fast<sp/>version<sp/>of<sp/>gr_fir_XXX.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classgr__fir__ccf" kindref="compound" tooltip="Abstract class for FIR with gr_complex input, gr_complex output and float tapsThis is the abstract cl...">gr_fir_ccf</ref><sp/>*create_gr_fir_ccf<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classgr__fir__fcc" kindref="compound" tooltip="Abstract class for FIR with float input, gr_complex output and gr_complex tapsThis is the abstract cl...">gr_fir_fcc</ref><sp/>*create_gr_fir_fcc<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;gr_complex&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classgr__fir__ccc" kindref="compound" tooltip="Abstract class for FIR with gr_complex input, gr_complex output and gr_complex tapsThis is the abstra...">gr_fir_ccc</ref><sp/>*create_gr_fir_ccc<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;gr_complex&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classgr__fir__fff" kindref="compound" tooltip="Abstract class for FIR with float input, float output and float tapsThis is the abstract class for a ...">gr_fir_fff</ref><sp/>*create_gr_fir_fff<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classgr__fir__scc" kindref="compound" tooltip="Abstract class for FIR with short input, gr_complex output and gr_complex tapsThis is the abstract cl...">gr_fir_scc</ref><sp/>*create_gr_fir_scc<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;gr_complex&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classgr__fir__fsf" kindref="compound" tooltip="Abstract class for FIR with float input, short output and float tapsThis is the abstract class for a ...">gr_fir_fsf</ref><sp/>*create_gr_fir_fsf<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/>&amp;taps);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>information<sp/>about<sp/>all<sp/>gr_fir_XXX<sp/>implementations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>useful<sp/>for<sp/>benchmarking,<sp/>testing,<sp/>etc<sp/>without<sp/>having<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>know<sp/>a<sp/>priori<sp/>what&apos;s<sp/>linked<sp/>into<sp/>this<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>caller<sp/>must<sp/>pass<sp/>in<sp/>a<sp/>valid<sp/>pointer<sp/>to<sp/>a<sp/>vector.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>vector<sp/>will<sp/>be<sp/>filled<sp/>with<sp/>structs<sp/>describing<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>available<sp/>implementations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_gr_fir_ccf_info<sp/>(std::vector&lt;gr_fir_ccf_info&gt;<sp/>*info);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_gr_fir_fcc_info<sp/>(std::vector&lt;gr_fir_fcc_info&gt;<sp/>*info);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_gr_fir_ccc_info<sp/>(std::vector&lt;gr_fir_ccc_info&gt;<sp/>*info);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_gr_fir_fff_info<sp/>(std::vector&lt;gr_fir_fff_info&gt;<sp/>*info);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_gr_fir_scc_info<sp/>(std::vector&lt;gr_fir_scc_info&gt;<sp/>*info);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_gr_fir_fsf_info<sp/>(std::vector&lt;gr_fir_fsf_info&gt;<sp/>*info);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_GR_FIR_UTIL_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/build/gnuradio-core/src/lib/filter/gr_fir_util.h"/>
  </compounddef>
</doxygen>

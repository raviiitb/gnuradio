<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="gr__dc__blocker__ff_8h" kind="file">
    <compoundname>gr_dc_blocker_ff.h</compoundname>
    <includes local="no">gr_core_api.h</includes>
    <includes local="no">gr_sync_block.h</includes>
    <includes local="no">deque</includes>
    <incdepgraph>
      <node id="350">
        <label>gr_sync_block.h</label>
      </node>
      <node id="349">
        <label>gr_core_api.h</label>
      </node>
      <node id="351">
        <label>deque</label>
      </node>
      <node id="348">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_dc_blocker_ff.h</label>
        <link refid="gr_dc_blocker_ff.h"/>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classmoving__averager__f" prot="public">moving_averager_f</innerclass>
    <innerclass refid="classgr__dc__blocker__ff" prot="public">gr_dc_blocker_ff</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gr__dc__blocker__ff_8h_1ab2707060adc95d05728d563d7b6e06b1" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr__dc__blocker__ff" kindref="compound">gr_dc_blocker_ff</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;gr_dc_blocker_ff&gt; gr_dc_blocker_ff_sptr</definition>
        <argsstring></argsstring>
        <name>gr_dc_blocker_ff_sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_dc_blocker_ff.h" line="48" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_dc_blocker_ff.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gr__dc__blocker__ff_8h_1a9175ff62dcdfb00a031b486acaf9b54a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GR_CORE_API <ref refid="gr__dc__blocker__ff_8h_1ab2707060adc95d05728d563d7b6e06b1" kindref="member">gr_dc_blocker_ff_sptr</ref></type>
        <definition>GR_CORE_API gr_dc_blocker_ff_sptr gr_make_dc_blocker_ff</definition>
        <argsstring>(int D=32, bool long_form=true)</argsstring>
        <name>gr_make_dc_blocker_ff</name>
        <param>
          <type>int</type>
          <declname>D</declname>
          <defval>32</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>long_form</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Build the DC blocker. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>D</parametername>
</parameternamelist>
<parameterdescription>
<para>(int) the length of the delay line </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>long_form</parametername>
</parameternamelist>
<parameterdescription>
<para>(bool) whether to use long (true, default) or short form </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_dc_blocker_ff.h" line="49"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2011<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_GR_DC_BLOCKER_FF_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_GR_DC_BLOCKER_FF_H</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_core_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_sync_block.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classmoving__averager__f" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="classmoving__averager__f" kindref="compound">moving_averager_f</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="classmoving__averager__f" kindref="compound">moving_averager_f</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>~<ref refid="classmoving__averager__f" kindref="compound">moving_averager_f</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>filter(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x);</highlight></codeline>
<codeline lineno="38" refid="classmoving__averager__f_1a63d03a96d4aa05da954d42ecae339b0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classmoving__averager__f_1a63d03a96d4aa05da954d42ecae339b0c" kindref="member">delayed_sig</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_out;<sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d_length;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d_out,<sp/>d_out_d1,<sp/>d_out_d2;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>std::deque&lt;float&gt;<sp/>d_delay_line;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="gr__dc__blocker__ff_8h_1ab2707060adc95d05728d563d7b6e06b1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__dc__blocker__ff" kindref="compound" tooltip="a computationally efficient controllable DC blocker">gr_dc_blocker_ff</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;gr_dc_blocker_ff&gt;<sp/><ref refid="gr__dc__blocker__ff_8h_1ab2707060adc95d05728d563d7b6e06b1" kindref="member">gr_dc_blocker_ff_sptr</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">GR_CORE_API<sp/><ref refid="gr__dc__blocker__ff_8h_1ab2707060adc95d05728d563d7b6e06b1" kindref="member">gr_dc_blocker_ff_sptr</ref><sp/><ref refid="gr__dc__blocker__ff_8h_1a9175ff62dcdfb00a031b486acaf9b54a" kindref="member">gr_make_dc_blocker_ff</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D=32,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>long_form=</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classgr__dc__blocker__ff" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="classgr__dc__blocker__ff" kindref="compound" tooltip="a computationally efficient controllable DC blocker">gr_dc_blocker_ff</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>gr_sync_block</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>GR_CORE_API<sp/><ref refid="gr__dc__blocker__ff_8h_1ab2707060adc95d05728d563d7b6e06b1" kindref="member">gr_dc_blocker_ff_sptr</ref><sp/><ref refid="gr__dc__blocker__ff_8h_1a9175ff62dcdfb00a031b486acaf9b54a" kindref="member">gr_make_dc_blocker_ff</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>long_form);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d_length;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>d_long_form;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="classmoving__averager__f" kindref="compound">moving_averager_f</ref><sp/>*d_ma_0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="classmoving__averager__f" kindref="compound">moving_averager_f</ref><sp/>*d_ma_1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="classmoving__averager__f" kindref="compound">moving_averager_f</ref><sp/>*d_ma_2;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="classmoving__averager__f" kindref="compound">moving_averager_f</ref><sp/>*d_ma_3;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>std::deque&lt;float&gt;<sp/>d_delay_line;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="classgr__dc__blocker__ff" kindref="compound" tooltip="a computationally efficient controllable DC blocker">gr_dc_blocker_ff</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>D,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>long_form);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>~<ref refid="classgr__dc__blocker__ff" kindref="compound" tooltip="a computationally efficient controllable DC blocker">gr_dc_blocker_ff</ref><sp/>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_group_delay();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//int<sp/>set_length(int<sp/>D);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>work<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_vector_const_void_star<sp/>&amp;input_items,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gr_vector_void_star<sp/>&amp;output_items);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/filter/gr_dc_blocker_ff.h"/>
  </compounddef>
</doxygen>

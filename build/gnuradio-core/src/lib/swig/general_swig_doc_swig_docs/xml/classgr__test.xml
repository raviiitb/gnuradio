<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classgr__test" kind="class" prot="public">
    <compoundname>gr_test</compoundname>
    <includes refid="gr__test_8h" local="no">gr_test.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgr__test_1aa3c203116c6bc15fdf7b1c5750562627" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int gr_test::d_sizeof_input_item</definition>
        <argsstring></argsstring>
        <name>d_sizeof_input_item</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="170" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__test_1a861e0e31303892e9acffa5a3be04f9aa" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int gr_test::d_sizeof_output_item</definition>
        <argsstring></argsstring>
        <name>d_sizeof_output_item</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="171" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__test_1ae073453777b26e35d98165c888f73b54" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool gr_test::d_check_topology</definition>
        <argsstring></argsstring>
        <name>d_check_topology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="172" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__test_1a7ac1f9d9aa0cc701f08da9b4211e5346" prot="protected" static="no" mutable="no">
        <type>char</type>
        <definition>char gr_test::d_temp</definition>
        <argsstring></argsstring>
        <name>d_temp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="173" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__test_1ac2dcb99dc170b465b063624d2082a792" prot="protected" static="no" mutable="no">
        <type><ref refid="gr__test__types_8h_1a7e11c1089ad4d0f3c0d4c0cea0281fa6" kindref="member">gr_consume_type_t</ref></type>
        <definition>gr_consume_type_t gr_test::d_consume_type</definition>
        <argsstring></argsstring>
        <name>d_consume_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="174" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__test_1a80c41a7a262059c6c7b7b3b77bb3203d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int gr_test::d_min_consume</definition>
        <argsstring></argsstring>
        <name>d_min_consume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="175" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__test_1ae069b12d1c283923f1d64176d49a2a88" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int gr_test::d_max_consume</definition>
        <argsstring></argsstring>
        <name>d_max_consume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="176" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__test_1a51d2a008941c2ff0e0bad38b66a57f87" prot="protected" static="no" mutable="no">
        <type><ref refid="gr__test__types_8h_1afc8b997c194075e5d0d5cb793e829329" kindref="member">gr_produce_type_t</ref></type>
        <definition>gr_produce_type_t gr_test::d_produce_type</definition>
        <argsstring></argsstring>
        <name>d_produce_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="177" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__test_1ab413d9a967b53cd273e84eacc0392e05" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int gr_test::d_min_produce</definition>
        <argsstring></argsstring>
        <name>d_min_produce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="178" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__test_1a595d614900bcb35deaaa932823cf1adc" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int gr_test::d_max_produce</definition>
        <argsstring></argsstring>
        <name>d_max_produce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="179" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="179" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr__test_1a63e7ef2d796c5e4afc570b163c8ccd61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gr_test::~gr_test</definition>
        <argsstring>()</argsstring>
        <name>~gr_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="58" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classgr__test_1a871aa0cd617be4a13e5cb036bdb55cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gr_test::general_work</definition>
        <argsstring>(int noutput_items, gr_vector_int &amp;ninput_items, gr_vector_const_void_star &amp;input_items, gr_vector_void_star &amp;output_items)</argsstring>
        <name>general_work</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_int &amp;</type>
          <declname>ninput_items</declname>
        </param>
        <param>
          <type>gr_vector_const_void_star &amp;</type>
          <declname>input_items</declname>
        </param>
        <param>
          <type>gr_vector_void_star &amp;</type>
          <declname>output_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="63"/>
      </memberdef>
      <memberdef kind="function" id="classgr__test_1a066f8bfd35652cf2f9394bee8e61dc50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_test::forecast</definition>
        <argsstring>(int noutput_items, gr_vector_int &amp;ninput_items_required)</argsstring>
        <name>forecast</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_int &amp;</type>
          <declname>ninput_items_required</declname>
        </param>
        <briefdescription>
<para>Estimate input requirements given output request. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>noutput_items</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output items to produce </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ninput_items_required</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input items required on each input stream</para></parameterdescription>
</parameteritem>
</parameterlist>
Given a request to product <computeroutput>noutput_items</computeroutput>, estimate the number of data items required on each input stream. The estimate doesn&apos;t have to be exact, but should be close. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="80" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="78" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classgr__test_1a5d96333a3756b37fe54a6a3f88866b64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_test::set_check_topology</definition>
        <argsstring>(bool check_topology)</argsstring>
        <name>set_check_topology</name>
        <param>
          <type>bool</type>
          <declname>check_topology</declname>
        </param>
        <briefdescription>
<para>Force check topology to return true or false. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>check_topology</parametername>
</parameternamelist>
<parameterdescription>
<para>value to return when check_topology is called (true or false) default check_topology returns true </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="94" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classgr__test_1ac9924b05718346c0cf3d231f2a82474b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gr_test::check_topology</definition>
        <argsstring>(int ninputs, int noutputs)</argsstring>
        <name>check_topology</name>
        <param>
          <type>int</type>
          <declname>ninputs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>noutputs</declname>
        </param>
        <briefdescription>
<para>Confirm that ninputs and noutputs is an acceptable combination. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ninputs</parametername>
</parameternamelist>
<parameterdescription>
<para>number of input streams connected </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>noutputs</parametername>
</parameternamelist>
<parameterdescription>
<para>number of output streams connected</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if this is a valid configuration for this block.</para></simplesect>
This function is called by the runtime system whenever the topology changes. Most classes do not need to override this. This check is in addition to the constraints specified by the input and output gr_io_signatures. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="109" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="109" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classgr__test_1abd560ba788790b052bcdf55c40fe203b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int gr_test::fixed_rate_ninput_to_noutput</definition>
        <argsstring>(int ninput)</argsstring>
        <name>fixed_rate_ninput_to_noutput</name>
        <param>
          <type>int</type>
          <declname>ninput</declname>
        </param>
        <briefdescription>
<para>Given ninput samples, return number of output samples that will be produced. N.B. this is only defined if fixed_rate returns true. Generally speaking, you don&apos;t need to override this. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="123" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classgr__test_1abb33a7036cbb39bcfeacf22c6352b50b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int gr_test::fixed_rate_noutput_to_ninput</definition>
        <argsstring>(int noutput)</argsstring>
        <name>fixed_rate_noutput_to_ninput</name>
        <param>
          <type>int</type>
          <declname>noutput</declname>
        </param>
        <briefdescription>
<para>Given noutput samples, return number of input samples required to produce noutput. N.B. this is only defined if fixed_rate returns true. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="129" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classgr__test_1a7aa4753ba5e757786726f7dd29118199" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_test::set_fixed_rate_public</definition>
        <argsstring>(bool fixed_rate)</argsstring>
        <name>set_fixed_rate_public</name>
        <param>
          <type>bool</type>
          <declname>fixed_rate</declname>
        </param>
        <briefdescription>
<para>Set if fixed rate should return true. N.B. This is normally a private method but we make it available here as public. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="135" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classgr__test_1a0134531834988f75b8c7f64968005516" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_test::set_consume_type</definition>
        <argsstring>(gr_consume_type_t cons_type)</argsstring>
        <name>set_consume_type</name>
        <param>
          <type><ref refid="gr__test__types_8h_1a7e11c1089ad4d0f3c0d4c0cea0281fa6" kindref="member">gr_consume_type_t</ref></type>
          <declname>cons_type</declname>
        </param>
        <briefdescription>
<para>Set the consume pattern. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cons_type</parametername>
</parameternamelist>
<parameterdescription>
<para>which consume pattern to use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="142" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classgr__test_1a866d8cbba629307e5e976339048c0234" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_test::set_consume_limit</definition>
        <argsstring>(unsigned int limit)</argsstring>
        <name>set_consume_limit</name>
        <param>
          <type>unsigned int</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Set the consume limit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>min or maximum items to consume (depending on consume_type) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="149" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classgr__test_1a607096450cf5b6e967f35b5e82d918e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_test::set_produce_type</definition>
        <argsstring>(gr_produce_type_t prod_type)</argsstring>
        <name>set_produce_type</name>
        <param>
          <type><ref refid="gr__test__types_8h_1afc8b997c194075e5d0d5cb793e829329" kindref="member">gr_produce_type_t</ref></type>
          <declname>prod_type</declname>
        </param>
        <briefdescription>
<para>Set the produce pattern. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prod_type</parametername>
</parameternamelist>
<parameterdescription>
<para>which produce pattern to use </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="156" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classgr__test_1ae47866bc4ef06e4cca54d7a015b4532e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_test::set_produce_limit</definition>
        <argsstring>(unsigned int limit)</argsstring>
        <name>set_produce_limit</name>
        <param>
          <type>unsigned int</type>
          <declname>limit</declname>
        </param>
        <briefdescription>
<para>Set the produce limit. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>limit</parametername>
</parameternamelist>
<parameterdescription>
<para>min or maximum items to produce (depending on produce_type) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="163" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="163" bodyend="163"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classgr__test_1a0de0cde25f060628652711db1fa75909" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr_test::gr_test</definition>
        <argsstring>(const std::string &amp;name, int min_inputs, int max_inputs, unsigned int sizeof_input_item, int min_outputs, int max_outputs, unsigned int sizeof_output_item, unsigned int history, unsigned int output_multiple, double relative_rate, bool fixed_rate, gr_consume_type_t cons_type, gr_produce_type_t prod_type)</argsstring>
        <name>gr_test</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_inputs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_inputs</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sizeof_input_item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_outputs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_outputs</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sizeof_output_item</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>history</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>output_multiple</declname>
        </param>
        <param>
          <type>double</type>
          <declname>relative_rate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fixed_rate</declname>
        </param>
        <param>
          <type><ref refid="gr__test__types_8h_1a7e11c1089ad4d0f3c0d4c0cea0281fa6" kindref="member">gr_consume_type_t</ref></type>
          <declname>cons_type</declname>
        </param>
        <param>
          <type><ref refid="gr__test__types_8h_1afc8b997c194075e5d0d5cb793e829329" kindref="member">gr_produce_type_t</ref></type>
          <declname>prod_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="183"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgr__test_1a834c4c9a1df0365810fea217a8869c6d" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend __GR_ATTR_IMPORT <ref refid="gr__test_8h_1a81b0e95fb4d89e2f6e11e685980030c3" kindref="member">gr_test_sptr</ref></type>
        <definition>__GR_ATTR_IMPORT gr_test_sptr gr_make_test</definition>
        <argsstring>(const std::string &amp;name, int min_inputs, int max_inputs, unsigned int sizeof_input_item, int min_outputs, int max_outputs, unsigned int sizeof_output_item, unsigned int history, unsigned int output_multiple, double relative_rate, bool fixed_rate, gr_consume_type_t cons_type, gr_produce_type_t prod_type)</argsstring>
        <name>gr_make_test</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_inputs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_inputs</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sizeof_input_item</declname>
        </param>
        <param>
          <type>int</type>
          <declname>min_outputs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max_outputs</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>sizeof_output_item</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>history</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>output_multiple</declname>
        </param>
        <param>
          <type>double</type>
          <declname>relative_rate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fixed_rate</declname>
        </param>
        <param>
          <type><ref refid="gr__test__types_8h_1a7e11c1089ad4d0f3c0d4c0cea0281fa6" kindref="member">gr_consume_type_t</ref></type>
          <declname>cons_type</declname>
        </param>
        <param>
          <type><ref refid="gr__test__types_8h_1afc8b997c194075e5d0d5cb793e829329" kindref="member">gr_produce_type_t</ref></type>
          <declname>prod_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Test class for testing runtime system (setting up buffers and such.)</para><para>This block does not do any usefull actual data processing. It just exposes setting all standard block parameters using the contructor or public methods. </para>    </briefdescription>
    <detaileddescription>
<para>This block can be usefull when testing the runtime system. You can force this block to have a large history, decimation factor and/or large output_multiple. The runtime system should detect this and create large enough buffers all through the signal chain. </para>    </detaileddescription>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" line="54" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_test.h" bodystart="54" bodyend="191"/>
    <listofallmembers>
      <member refid="classgr__test_1ac9924b05718346c0cf3d231f2a82474b" prot="public" virt="non-virtual"><scope>gr_test</scope><name>check_topology</name></member>
      <member refid="classgr__test_1ae073453777b26e35d98165c888f73b54" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>d_check_topology</name></member>
      <member refid="classgr__test_1ac2dcb99dc170b465b063624d2082a792" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>d_consume_type</name></member>
      <member refid="classgr__test_1ae069b12d1c283923f1d64176d49a2a88" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>d_max_consume</name></member>
      <member refid="classgr__test_1a595d614900bcb35deaaa932823cf1adc" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>d_max_produce</name></member>
      <member refid="classgr__test_1a80c41a7a262059c6c7b7b3b77bb3203d" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>d_min_consume</name></member>
      <member refid="classgr__test_1ab413d9a967b53cd273e84eacc0392e05" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>d_min_produce</name></member>
      <member refid="classgr__test_1a51d2a008941c2ff0e0bad38b66a57f87" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>d_produce_type</name></member>
      <member refid="classgr__test_1aa3c203116c6bc15fdf7b1c5750562627" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>d_sizeof_input_item</name></member>
      <member refid="classgr__test_1a861e0e31303892e9acffa5a3be04f9aa" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>d_sizeof_output_item</name></member>
      <member refid="classgr__test_1a7ac1f9d9aa0cc701f08da9b4211e5346" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>d_temp</name></member>
      <member refid="classgr__test_1abd560ba788790b052bcdf55c40fe203b" prot="public" virt="non-virtual"><scope>gr_test</scope><name>fixed_rate_ninput_to_noutput</name></member>
      <member refid="classgr__test_1abb33a7036cbb39bcfeacf22c6352b50b" prot="public" virt="non-virtual"><scope>gr_test</scope><name>fixed_rate_noutput_to_ninput</name></member>
      <member refid="classgr__test_1a066f8bfd35652cf2f9394bee8e61dc50" prot="public" virt="non-virtual"><scope>gr_test</scope><name>forecast</name></member>
      <member refid="classgr__test_1a871aa0cd617be4a13e5cb036bdb55cd7" prot="public" virt="non-virtual"><scope>gr_test</scope><name>general_work</name></member>
      <member refid="classgr__test_1a834c4c9a1df0365810fea217a8869c6d" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>gr_make_test</name></member>
      <member refid="classgr__test_1a0de0cde25f060628652711db1fa75909" prot="protected" virt="non-virtual"><scope>gr_test</scope><name>gr_test</name></member>
      <member refid="classgr__test_1a5d96333a3756b37fe54a6a3f88866b64" prot="public" virt="non-virtual"><scope>gr_test</scope><name>set_check_topology</name></member>
      <member refid="classgr__test_1a866d8cbba629307e5e976339048c0234" prot="public" virt="non-virtual"><scope>gr_test</scope><name>set_consume_limit</name></member>
      <member refid="classgr__test_1a0134531834988f75b8c7f64968005516" prot="public" virt="non-virtual"><scope>gr_test</scope><name>set_consume_type</name></member>
      <member refid="classgr__test_1a7aa4753ba5e757786726f7dd29118199" prot="public" virt="non-virtual"><scope>gr_test</scope><name>set_fixed_rate_public</name></member>
      <member refid="classgr__test_1ae47866bc4ef06e4cca54d7a015b4532e" prot="public" virt="non-virtual"><scope>gr_test</scope><name>set_produce_limit</name></member>
      <member refid="classgr__test_1a607096450cf5b6e967f35b5e82d918e0" prot="public" virt="non-virtual"><scope>gr_test</scope><name>set_produce_type</name></member>
      <member refid="classgr__test_1a63e7ef2d796c5e4afc570b163c8ccd61" prot="public" virt="non-virtual"><scope>gr_test</scope><name>~gr_test</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

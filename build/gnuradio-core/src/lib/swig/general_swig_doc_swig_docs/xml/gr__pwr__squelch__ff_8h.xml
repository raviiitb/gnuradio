<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="gr__pwr__squelch__ff_8h" kind="file">
    <compoundname>gr_pwr_squelch_ff.h</compoundname>
    <includes refid="gr__core__api_8h" local="no">gr_core_api.h</includes>
    <includes local="no">cmath</includes>
    <includes refid="gr__squelch__base__ff_8h" local="no">gr_squelch_base_ff.h</includes>
    <includes local="no">gr_single_pole_iir.h</includes>
    <incdepgraph>
      <node id="711">
        <label>gr_squelch_base_ff.h</label>
        <link refid="gr__squelch__base__ff_8h"/>
        <childnode refid="708" relation="include">
        </childnode>
        <childnode refid="712" relation="include">
        </childnode>
      </node>
      <node id="709">
        <label>gruel/attributes.h</label>
      </node>
      <node id="710">
        <label>cmath</label>
      </node>
      <node id="708">
        <label>gr_core_api.h</label>
        <link refid="gr__core__api_8h"/>
        <childnode refid="709" relation="include">
        </childnode>
      </node>
      <node id="712">
        <label>gr_block.h</label>
      </node>
      <node id="707">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_pwr_squelch_ff.h</label>
        <link refid="gr_pwr_squelch_ff.h"/>
        <childnode refid="708" relation="include">
        </childnode>
        <childnode refid="710" relation="include">
        </childnode>
        <childnode refid="711" relation="include">
        </childnode>
        <childnode refid="713" relation="include">
        </childnode>
      </node>
      <node id="713">
        <label>gr_single_pole_iir.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="classgr__pwr__squelch__ff" prot="public">gr_pwr_squelch_ff</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gr__pwr__squelch__ff_8h_1ae88c18260d2f28273750df75ecb10e42" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr__pwr__squelch__ff" kindref="compound">gr_pwr_squelch_ff</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;gr_pwr_squelch_ff&gt; gr_pwr_squelch_ff_sptr</definition>
        <argsstring></argsstring>
        <name>gr_pwr_squelch_ff_sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_pwr_squelch_ff.h" line="32" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_pwr_squelch_ff.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gr__pwr__squelch__ff_8h_1ab607a7b70ac89523e1b9b2340088da63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__GR_ATTR_IMPORT <ref refid="gr__pwr__squelch__ff_8h_1ae88c18260d2f28273750df75ecb10e42" kindref="member">gr_pwr_squelch_ff_sptr</ref></type>
        <definition>__GR_ATTR_IMPORT gr_pwr_squelch_ff_sptr gr_make_pwr_squelch_ff</definition>
        <argsstring>(double db, double alpha=0.0001, int ramp=0, bool gate=false)</argsstring>
        <name>gr_make_pwr_squelch_ff</name>
        <param>
          <type>double</type>
          <declname>db</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
          <defval>0.0001</defval>
        </param>
        <param>
          <type>int</type>
          <declname>ramp</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>gate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_pwr_squelch_ff.h" line="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_GR_PWR_SQUELCH_FF_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_GR_PWR_SQUELCH_FF_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__core__api_8h" kindref="compound">gr_core_api.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__squelch__base__ff_8h" kindref="compound">gr_squelch_base_ff.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_single_pole_iir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="gr__pwr__squelch__ff_8h_1ae88c18260d2f28273750df75ecb10e42" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__pwr__squelch__ff" kindref="compound" tooltip="gate or zero output when input power below threshold">gr_pwr_squelch_ff</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;gr_pwr_squelch_ff&gt;<sp/><ref refid="gr__pwr__squelch__ff_8h_1ae88c18260d2f28273750df75ecb10e42" kindref="member">gr_pwr_squelch_ff_sptr</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="gr__core__api_8h_1a8b8937b0c61edd85ab57ce8203543248" kindref="member">GR_CORE_API</ref><sp/><ref refid="gr__pwr__squelch__ff_8h_1ae88c18260d2f28273750df75ecb10e42" kindref="member">gr_pwr_squelch_ff_sptr</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="gr__pwr__squelch__ff_8h_1ab607a7b70ac89523e1b9b2340088da63" kindref="member">gr_make_pwr_squelch_ff</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>0.0001,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classgr__squelch__base__ff_1ac2f3750d222001ce567cd0a98aac1f42" kindref="member">ramp</ref>=0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgr__squelch__base__ff_1a3a355b937004b1591ea4cd7e6f350f01" kindref="member">gate</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classgr__pwr__squelch__ff" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gr__core__api_8h_1a8b8937b0c61edd85ab57ce8203543248" kindref="member">GR_CORE_API</ref><sp/><ref refid="classgr__pwr__squelch__ff" kindref="compound" tooltip="gate or zero output when input power below threshold">gr_pwr_squelch_ff</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgr__squelch__base__ff" kindref="compound">gr_squelch_base_ff</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_threshold;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_pwr;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>gr_single_pole_iir&lt;double,double,double&gt;<sp/>d_iir;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="gr__core__api_8h_1a8b8937b0c61edd85ab57ce8203543248" kindref="member">GR_CORE_API</ref><sp/><ref refid="gr__pwr__squelch__ff_8h_1ae88c18260d2f28273750df75ecb10e42" kindref="member">gr_pwr_squelch_ff_sptr</ref><sp/><ref refid="gr__pwr__squelch__ff_8h_1ab607a7b70ac89523e1b9b2340088da63" kindref="member">gr_make_pwr_squelch_ff</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ramp,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gate);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classgr__pwr__squelch__ff" kindref="compound" tooltip="gate or zero output when input power below threshold">gr_pwr_squelch_ff</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ramp,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gate);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__squelch__base__ff_1aa9108138b750f1ebbd8c6a09f5b47e00" kindref="member">update_state</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;in);</highlight></codeline>
<codeline lineno="53" refid="classgr__pwr__squelch__ff_1aa624cf99e3b6c45b894524b0e3f00530" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgr__pwr__squelch__ff_1aa624cf99e3b6c45b894524b0e3f00530" kindref="member">mute</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_pwr<sp/>&lt;<sp/>d_threshold;<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/><ref refid="classgr__squelch__base__ff_1a2e51b381d993274ec398cda51906a5e3" kindref="member">squelch_range</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classgr__pwr__squelch__ff_1af5f62ebcd6e2cc4342e1f152454d3be0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classgr__pwr__squelch__ff_1af5f62ebcd6e2cc4342e1f152454d3be0" kindref="member">threshold</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10*log10(d_threshold);<sp/>}</highlight></codeline>
<codeline lineno="59" refid="classgr__pwr__squelch__ff_1a89074b4a36fce15f322873de74cc5e84" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__pwr__squelch__ff_1a89074b4a36fce15f322873de74cc5e84" kindref="member">set_threshold</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>db)<sp/>{<sp/>d_threshold<sp/>=<sp/>std::pow(10.0,<sp/>db/10);<sp/>}</highlight></codeline>
<codeline lineno="60" refid="classgr__pwr__squelch__ff_1a16af7fef6ad197132e4fe5c52e153ab2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__pwr__squelch__ff_1a16af7fef6ad197132e4fe5c52e153ab2" kindref="member">set_alpha</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha)<sp/>{<sp/>d_iir.set_taps(alpha);<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_GR_PWR_SQUELCH_FF_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_pwr_squelch_ff.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="gr__nco_8h" kind="file">
    <compoundname>gr_nco.h</compoundname>
    <includes local="no">vector</includes>
    <includes local="no">gr_sincos.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">gr_complex.h</includes>
    <incdepgraph>
      <node id="582">
        <label>gr_sincos.h</label>
      </node>
      <node id="583">
        <label>cmath</label>
      </node>
      <node id="584">
        <label>gr_complex.h</label>
      </node>
      <node id="580">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h</label>
        <link refid="gr_nco.h"/>
        <childnode refid="581" relation="include">
        </childnode>
        <childnode refid="582" relation="include">
        </childnode>
        <childnode refid="583" relation="include">
        </childnode>
        <childnode refid="584" relation="include">
        </childnode>
      </node>
      <node id="581">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classgr__nco" prot="public">gr_nco</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2002<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_GR_NCO_H_</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_GR_NCO_H_</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_sincos.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_complex.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">//FIXME<sp/><sp/>Eventually<sp/>generalize<sp/>this<sp/>to<sp/>fixed<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="40" refid="classgr__nco" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__nco" kindref="compound" tooltip="base class template for Numerically Controlled Oscillator (NCO)">gr_nco</ref><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="42" refid="classgr__nco_1a2559257b4b1ef02dc1b4a8da4f49e583" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__nco_1a2559257b4b1ef02dc1b4a8da4f49e583" kindref="member">gr_nco</ref><sp/>()<sp/>:<sp/><ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>(0),<sp/><ref refid="classgr__nco_1a2059238c2da93a471fce526bdd2dc6e2" kindref="member">phase_inc</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classgr__nco_1a9e9f508bff7e014c64a6dce17bffbfa9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a9e9f508bff7e014c64a6dce17bffbfa9" kindref="member">~gr_nco</ref><sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>radians</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classgr__nco_1a0f06623da940487d6c546997debb0af0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a0f06623da940487d6c546997debb0af0" kindref="member">set_phase</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>=<sp/>angle;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classgr__nco_1adebaf4df7e9d941bef8d15785dfff6cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1adebaf4df7e9d941bef8d15785dfff6cd" kindref="member">adjust_phase</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta_phase)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>+=<sp/>delta_phase;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>angle_rate<sp/>is<sp/>in<sp/>radians<sp/>/<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classgr__nco_1a0fb6a20fc445d8c5d204edea99d6c429" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a0fb6a20fc445d8c5d204edea99d6c429" kindref="member">set_freq</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle_rate){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__nco_1a2059238c2da93a471fce526bdd2dc6e2" kindref="member">phase_inc</ref><sp/>=<sp/>angle_rate;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>angle_rate<sp/>is<sp/>a<sp/>delta<sp/>in<sp/>radians<sp/>/<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="classgr__nco_1aaaefdc0f44d2d0a75078ccecaa5cf0a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1aaaefdc0f44d2d0a75078ccecaa5cf0a0" kindref="member">adjust_freq</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta_angle_rate)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__nco_1a2059238c2da93a471fce526bdd2dc6e2" kindref="member">phase_inc</ref><sp/>+=<sp/>delta_angle_rate;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>increment<sp/>current<sp/>phase<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classgr__nco_1a81fa5f973481363ccae81e815ec629a3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a81fa5f973481363ccae81e815ec629a3" kindref="member">step</ref><sp/>()</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>+=<sp/><ref refid="classgr__nco_1a2059238c2da93a471fce526bdd2dc6e2" kindref="member">phase_inc</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs<sp/>(<ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref>)<sp/>&gt;<sp/>M_PI){</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>&gt;<sp/>M_PI)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>-=<sp/>2*M_PI;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>&lt;<sp/>-M_PI)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>+=<sp/>2*M_PI;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="classgr__nco_1a1e43537bf60084cdece096a286e24c36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a81fa5f973481363ccae81e815ec629a3" kindref="member">step</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>+=<sp/><ref refid="classgr__nco_1a2059238c2da93a471fce526bdd2dc6e2" kindref="member">phase_inc</ref><sp/>*<sp/>n;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs<sp/>(<ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref>)<sp/>&gt;<sp/>M_PI){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>&gt;<sp/>M_PI)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>-=<sp/>2*M_PI;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>&lt;<sp/>-M_PI)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref><sp/>+=<sp/>2*M_PI;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>units<sp/>are<sp/>radians<sp/>/<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="classgr__nco_1a5152bb2a0d45a3ca2db5e6156e39dabe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a5152bb2a0d45a3ca2db5e6156e39dabe" kindref="member">get_phase</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref>;<sp/>}</highlight></codeline>
<codeline lineno="97" refid="classgr__nco_1a8681ddce0197120e4f6a84ccca12839e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a8681ddce0197120e4f6a84ccca12839e" kindref="member">get_freq</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a2059238c2da93a471fce526bdd2dc6e2" kindref="member">phase_inc</ref>;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>sin<sp/>and<sp/>cos<sp/>for<sp/>current<sp/>phase<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a201edc7a5d1399c3886658ea4b570342" kindref="member">sincos</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sinx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*cosx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>cos<sp/>or<sp/>sin<sp/>for<sp/>current<sp/>phase<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classgr__nco_1ab991c608a8d90c9af9ae5ea608acfa6e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1ab991c608a8d90c9af9ae5ea608acfa6e" kindref="member">cos</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1ab991c608a8d90c9af9ae5ea608acfa6e" kindref="member">std::cos</ref><sp/>(<ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref>);<sp/>}</highlight></codeline>
<codeline lineno="104" refid="classgr__nco_1ac3b1e9a0be5aecc1538487c41cf51b32" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1ac3b1e9a0be5aecc1538487c41cf51b32" kindref="member">sin</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1ac3b1e9a0be5aecc1538487c41cf51b32" kindref="member">std::sin</ref><sp/>(<ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref>);<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>a<sp/>block<sp/>at<sp/>a<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1ac3b1e9a0be5aecc1538487c41cf51b32" kindref="member">sin</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl<sp/>=<sp/>1.0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1ab991c608a8d90c9af9ae5ea608acfa6e" kindref="member">cos</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl<sp/>=<sp/>1.0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a201edc7a5d1399c3886658ea4b570342" kindref="member">sincos</ref><sp/>(gr_complex<sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl<sp/>=<sp/>1.0);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1ac3b1e9a0be5aecc1538487c41cf51b32" kindref="member">sin</ref><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl<sp/>=<sp/>1.0);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1ab991c608a8d90c9af9ae5ea608acfa6e" kindref="member">cos</ref><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl<sp/>=<sp/>1.0);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1ac3b1e9a0be5aecc1538487c41cf51b32" kindref="member">sin</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl<sp/>=<sp/>1.0);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1ab991c608a8d90c9af9ae5ea608acfa6e" kindref="member">cos</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl<sp/>=<sp/>1.0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116" refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="117" refid="classgr__nco_1a2059238c2da93a471fce526bdd2dc6e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classgr__nco_1a2059238c2da93a471fce526bdd2dc6e2" kindref="member">phase_inc</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="classgr__nco_1a201edc7a5d1399c3886658ea4b570342" refkind="member"><highlight class="normal"><ref refid="classgr__nco_1a201edc7a5d1399c3886658ea4b570342" kindref="member">gr_nco&lt;o_type,i_type&gt;::sincos</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*sinx,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*cosx)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="123"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>gr_sincosf<sp/>(phase,<sp/>sinx,<sp/>cosx);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classgr__nco_1a3afb645f64eb06869fe58b3e14badfe2" refkind="member"><highlight class="normal"><ref refid="classgr__nco_1ac3b1e9a0be5aecc1538487c41cf51b32" kindref="member">gr_nco&lt;o_type,i_type&gt;::sin</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(float)(sin<sp/>()<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>step<sp/>();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classgr__nco_1aafb7d1186603337e07998d9db3e204f7" refkind="member"><highlight class="normal"><ref refid="classgr__nco_1ab991c608a8d90c9af9ae5ea608acfa6e" kindref="member">gr_nco&lt;o_type,i_type&gt;::cos</ref><sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++){</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(float)(cos<sp/>()<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>step<sp/>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classgr__nco_1a10bbc185b6c9e4a65719a1add98191ae" refkind="member"><highlight class="normal"><ref refid="classgr__nco_1ac3b1e9a0be5aecc1538487c41cf51b32" kindref="member">gr_nco&lt;o_type,i_type&gt;::sin</ref><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(short)(sin()<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>step<sp/>();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="classgr__nco_1a2f8121120df7ef03f56d1467b251f3bc" refkind="member"><highlight class="normal"><ref refid="classgr__nco_1ab991c608a8d90c9af9ae5ea608acfa6e" kindref="member">gr_nco&lt;o_type,i_type&gt;::cos</ref><sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++){</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(short)(cos<sp/>()<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>step<sp/>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classgr__nco_1a874aca305fcec928991648cd74735dbb" refkind="member"><highlight class="normal"><ref refid="classgr__nco_1ac3b1e9a0be5aecc1538487c41cf51b32" kindref="member">gr_nco&lt;o_type,i_type&gt;::sin</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(int)(sin<sp/>()<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>step<sp/>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classgr__nco_1ad4310e211170d65c0347e38f1f1506f6" refkind="member"><highlight class="normal"><ref refid="classgr__nco_1ab991c608a8d90c9af9ae5ea608acfa6e" kindref="member">gr_nco&lt;o_type,i_type&gt;::cos</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>(int)(cos<sp/>()<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>step<sp/>();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>o_type,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>i_type&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classgr__nco_1a9803e92c387c52cba4a1aca3d86aa1eb" refkind="member"><highlight class="normal"><ref refid="classgr__nco_1a201edc7a5d1399c3886658ea4b570342" kindref="member">gr_nco&lt;o_type,i_type&gt;::sincos</ref><sp/>(gr_complex<sp/>*output,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutput_items,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ampl)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>noutput_items;<sp/>i++){</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cosx,<sp/>sinx;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>sincos<sp/>(&amp;sinx,<sp/>&amp;cosx);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>output[i]<sp/>=<sp/>gr_complex(cosx<sp/>*<sp/>ampl,<sp/>sinx<sp/>*<sp/>ampl);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>step<sp/>();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_NCO_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h"/>
  </compounddef>
</doxygen>

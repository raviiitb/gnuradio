<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classgri__control__loop" kind="class" prot="public">
    <compoundname>gri_control_loop</compoundname>
    <derivedcompoundref refid="classgr__pll__carriertracking__cc" prot="public" virt="non-virtual">gr_pll_carriertracking_cc</derivedcompoundref>
    <derivedcompoundref refid="classgr__pll__freqdet__cf" prot="public" virt="non-virtual">gr_pll_freqdet_cf</derivedcompoundref>
    <derivedcompoundref refid="classgr__pll__refout__cc" prot="public" virt="non-virtual">gr_pll_refout_cc</derivedcompoundref>
    <includes refid="gri__control__loop_8h" local="no">gri_control_loop.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgri__control__loop_1ae7ce04a289ee1e3a5b7be8e156dba371" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float gri_control_loop::d_phase</definition>
        <argsstring></argsstring>
        <name>d_phase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="31" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgri__control__loop_1a42a6732580496b6f30000a2c41ee836f" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float gri_control_loop::d_freq</definition>
        <argsstring></argsstring>
        <name>d_freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="31" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgri__control__loop_1ab5027caee2503be49e95ca72fe70d52c" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float gri_control_loop::d_max_freq</definition>
        <argsstring></argsstring>
        <name>d_max_freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="32" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgri__control__loop_1a879954cc120f992ea1a4b31219a3ec70" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float gri_control_loop::d_min_freq</definition>
        <argsstring></argsstring>
        <name>d_min_freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="32" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgri__control__loop_1a8231c282a273e0b07b84170bb20306a8" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float gri_control_loop::d_damping</definition>
        <argsstring></argsstring>
        <name>d_damping</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="33" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgri__control__loop_1a94567390864b3182ce88aa2243caa61b" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float gri_control_loop::d_loop_bw</definition>
        <argsstring></argsstring>
        <name>d_loop_bw</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="33" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgri__control__loop_1ae506efda44062047ca8715cd750b65e4" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float gri_control_loop::d_alpha</definition>
        <argsstring></argsstring>
        <name>d_alpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="34" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgri__control__loop_1a2134b6631db367d7d7a93d52b991c2d9" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float gri_control_loop::d_beta</definition>
        <argsstring></argsstring>
        <name>d_beta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="34" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgri__control__loop_1a312bd7c64f1d0dbad92bf61935bda1e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gri_control_loop::gri_control_loop</definition>
        <argsstring>(float loop_bw, float max_freq, float min_freq)</argsstring>
        <name>gri_control_loop</name>
        <param>
          <type>float</type>
          <declname>loop_bw</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max_freq</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min_freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="37"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1ada37c1edf3dc039561c450f109478cb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual gri_control_loop::~gri_control_loop</definition>
        <argsstring>()</argsstring>
        <name>~gri_control_loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="38"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1a8a42d0495ec0c416b7506468561491d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gri_control_loop::update_gains</definition>
        <argsstring>()</argsstring>
        <name>update_gains</name>
        <briefdescription>
<para>update the system gains from the loop bandwidth and damping factor </para>        </briefdescription>
        <detaileddescription>
<para>This function updates the system gains based on the loop bandwidth and damping factor of the system. These two factors can be set separately through their own set functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="47"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1a28d9553fbb472f7d061fd6d25392ac63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gri_control_loop::advance_loop</definition>
        <argsstring>(float error)</argsstring>
        <name>advance_loop</name>
        <param>
          <type>float</type>
          <declname>error</declname>
        </param>
        <briefdescription>
<para>update the system gains from the loop bandwidth and damping factor </para>        </briefdescription>
        <detaileddescription>
<para>This function updates the system gains based on the loop bandwidth and damping factor of the system. These two factors can be set separately through their own set functions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="56"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1aa08d9f6d6551089e77c9e758d84a47c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gri_control_loop::phase_wrap</definition>
        <argsstring>()</argsstring>
        <name>phase_wrap</name>
        <briefdescription>
<para>Keep the phase between -2pi and 2pi. </para>        </briefdescription>
        <detaileddescription>
<para>This function keeps the phase between -2pi and 2pi. If the phase is greater than 2pi by d, it wraps around to be -2pi+d; similarly if it is less than -2pi by d, it wraps around to 2pi-d.</para><para>This function should be called after advance_loop to keep the phase in a good operating region. It is set as a separate method in case another way is desired as this is fairly heavy-handed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="68"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1ac61a43fb70d96c5a727e87de7cea123f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gri_control_loop::frequency_limit</definition>
        <argsstring>()</argsstring>
        <name>frequency_limit</name>
        <briefdescription>
<para>Keep the frequency between d_min_freq and d_max_freq. </para>        </briefdescription>
        <detaileddescription>
<para>This function keeps the frequency between d_min_freq and d_max_freq. If the frequency is greater than d_max_freq, it is set to d_max_freq. If the frequency is less than d_min_freq, it is set to d_min_freq.</para><para>This function should be called after advance_loop to keep the frequency in the specified region. It is set as a separate method in case another way is desired as this is fairly heavy-handed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="80"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1a35b2e90ed2b8a1a757f550e76d4a81c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gri_control_loop::set_loop_bandwidth</definition>
        <argsstring>(float bw)</argsstring>
        <name>set_loop_bandwidth</name>
        <param>
          <type>float</type>
          <declname>bw</declname>
        </param>
        <briefdescription>
<para>Set the loop bandwidth. </para>        </briefdescription>
        <detaileddescription>
<para>Set the loop filter&apos;s bandwidth to <computeroutput>bw</computeroutput>. This should be between 2*pi/200 and 2*pi/100 (in rads/samp). It must also be a positive number.</para><para>When a new damping factor is set, the gains, alpha and beta, of the loop are recalculated by a call to <ref refid="classgri__control__loop_1a8a42d0495ec0c416b7506468561491d8" kindref="member">update_gains()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bw</parametername>
</parameternamelist>
<parameterdescription>
<para>(float) new bandwidth </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="99"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1ac7b0c098ed71cbf1e0cb523ef2201e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gri_control_loop::set_damping_factor</definition>
        <argsstring>(float df)</argsstring>
        <name>set_damping_factor</name>
        <param>
          <type>float</type>
          <declname>df</declname>
        </param>
        <briefdescription>
<para>Set the loop damping factor. </para>        </briefdescription>
        <detaileddescription>
<para>Set the loop filter&apos;s damping factor to <computeroutput>df</computeroutput>. The damping factor should be sqrt(2)/2.0 for critically damped systems. Set it to anything else only if you know what you are doing. It must be a number between 0 and 1.</para><para>When a new damping factor is set, the gains, alpha and beta, of the loop are recalculated by a call to <ref refid="classgri__control__loop_1a8a42d0495ec0c416b7506468561491d8" kindref="member">update_gains()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>df</parametername>
</parameternamelist>
<parameterdescription>
<para>(float) new damping factor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1a5ad976cdb6a0d7f4c67710f77361be88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gri_control_loop::set_alpha</definition>
        <argsstring>(float alpha)</argsstring>
        <name>set_alpha</name>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
<para>Set the loop gain alpha. </para>        </briefdescription>
        <detaileddescription>
<para>Set&apos;s the loop filter&apos;s alpha gain parameter.</para><para>This value should really only be set by adjusting the loop bandwidth and damping factor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>alpha</parametername>
</parameternamelist>
<parameterdescription>
<para>(float) new alpha gain </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1a926557505f7bdeff03adeb3805d9aa34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gri_control_loop::set_beta</definition>
        <argsstring>(float beta)</argsstring>
        <name>set_beta</name>
        <param>
          <type>float</type>
          <declname>beta</declname>
        </param>
        <briefdescription>
<para>Set the loop gain beta. </para>        </briefdescription>
        <detaileddescription>
<para>Set&apos;s the loop filter&apos;s beta gain parameter.</para><para>This value should really only be set by adjusting the loop bandwidth and damping factor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>beta</parametername>
</parameternamelist>
<parameterdescription>
<para>(float) new beta gain </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="141"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1ab5309b3d4959f1299288a95a8bfd50e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gri_control_loop::set_frequency</definition>
        <argsstring>(float freq)</argsstring>
        <name>set_frequency</name>
        <param>
          <type>float</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
<para>Set the Costas loop&apos;s frequency. </para>        </briefdescription>
        <detaileddescription>
<para>Set&apos;s the Costas Loop&apos;s frequency. While this is normally updated by the inner loop of the algorithm, it could be useful to manually initialize, set, or reset this under certain circumstances.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>freq</parametername>
</parameternamelist>
<parameterdescription>
<para>(float) new frequency </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="153"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1a6c8bf0e6f168c23ab16afa6c33f4a1cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gri_control_loop::set_phase</definition>
        <argsstring>(float phase)</argsstring>
        <name>set_phase</name>
        <param>
          <type>float</type>
          <declname>phase</declname>
        </param>
        <briefdescription>
<para>Set the Costas loop&apos;s phase. </para>        </briefdescription>
        <detaileddescription>
<para>Set&apos;s the Costas Loop&apos;s phase. While this is normally updated by the inner loop of the algorithm, it could be useful to manually initialize, set, or reset this under certain circumstances.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>phase</parametername>
</parameternamelist>
<parameterdescription>
<para>(float) new phase </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="165"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1a700ac8b13c088f67ebd3e40157d1e48e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float gri_control_loop::get_loop_bandwidth</definition>
        <argsstring>() const </argsstring>
        <name>get_loop_bandwidth</name>
        <briefdescription>
<para>Returns the loop bandwidth. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="175"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1a4b8d42ef24799cc7bd63395f4f7872fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float gri_control_loop::get_damping_factor</definition>
        <argsstring>() const </argsstring>
        <name>get_damping_factor</name>
        <briefdescription>
<para>Returns the loop damping factor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="180"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1aef0ddd87ede66367425db9fcff605d8f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float gri_control_loop::get_alpha</definition>
        <argsstring>() const </argsstring>
        <name>get_alpha</name>
        <briefdescription>
<para>Returns the loop gain alpha. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="185"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1ae613ad824f873f88738f009e069e290e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float gri_control_loop::get_beta</definition>
        <argsstring>() const </argsstring>
        <name>get_beta</name>
        <briefdescription>
<para>Returns the loop gain beta. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="190"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1abacc2448c0c6e54e7c3f7c2c89fc7326" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float gri_control_loop::get_frequency</definition>
        <argsstring>() const </argsstring>
        <name>get_frequency</name>
        <briefdescription>
<para>Get the Costas loop&apos;s frequency estimate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="195"/>
      </memberdef>
      <memberdef kind="function" id="classgri__control__loop_1a965443d91327875e4a2936cd5d519a7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float gri_control_loop::get_phase</definition>
        <argsstring>() const </argsstring>
        <name>get_phase</name>
        <briefdescription>
<para>Get the Costas loop&apos;s phase estimate. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="200"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="624">
        <label>gr_pll_carriertracking_cc</label>
        <link refid="classgr__pll__carriertracking__cc"/>
        <childnode refid="623" relation="public-inheritance">
        </childnode>
      </node>
      <node id="626">
        <label>gr_pll_refout_cc</label>
        <link refid="classgr__pll__refout__cc"/>
        <childnode refid="623" relation="public-inheritance">
        </childnode>
      </node>
      <node id="623">
        <label>gri_control_loop</label>
        <link refid="classgri__control__loop"/>
      </node>
      <node id="625">
        <label>gr_pll_freqdet_cf</label>
        <link refid="classgr__pll__freqdet__cf"/>
        <childnode refid="623" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" line="29" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gri_control_loop.h" bodystart="28" bodyend="201"/>
    <listofallmembers>
      <member refid="classgri__control__loop_1a28d9553fbb472f7d061fd6d25392ac63" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>advance_loop</name></member>
      <member refid="classgri__control__loop_1ae506efda44062047ca8715cd750b65e4" prot="protected" virt="non-virtual"><scope>gri_control_loop</scope><name>d_alpha</name></member>
      <member refid="classgri__control__loop_1a2134b6631db367d7d7a93d52b991c2d9" prot="protected" virt="non-virtual"><scope>gri_control_loop</scope><name>d_beta</name></member>
      <member refid="classgri__control__loop_1a8231c282a273e0b07b84170bb20306a8" prot="protected" virt="non-virtual"><scope>gri_control_loop</scope><name>d_damping</name></member>
      <member refid="classgri__control__loop_1a42a6732580496b6f30000a2c41ee836f" prot="protected" virt="non-virtual"><scope>gri_control_loop</scope><name>d_freq</name></member>
      <member refid="classgri__control__loop_1a94567390864b3182ce88aa2243caa61b" prot="protected" virt="non-virtual"><scope>gri_control_loop</scope><name>d_loop_bw</name></member>
      <member refid="classgri__control__loop_1ab5027caee2503be49e95ca72fe70d52c" prot="protected" virt="non-virtual"><scope>gri_control_loop</scope><name>d_max_freq</name></member>
      <member refid="classgri__control__loop_1a879954cc120f992ea1a4b31219a3ec70" prot="protected" virt="non-virtual"><scope>gri_control_loop</scope><name>d_min_freq</name></member>
      <member refid="classgri__control__loop_1ae7ce04a289ee1e3a5b7be8e156dba371" prot="protected" virt="non-virtual"><scope>gri_control_loop</scope><name>d_phase</name></member>
      <member refid="classgri__control__loop_1ac61a43fb70d96c5a727e87de7cea123f" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>frequency_limit</name></member>
      <member refid="classgri__control__loop_1aef0ddd87ede66367425db9fcff605d8f" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>get_alpha</name></member>
      <member refid="classgri__control__loop_1ae613ad824f873f88738f009e069e290e" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>get_beta</name></member>
      <member refid="classgri__control__loop_1a4b8d42ef24799cc7bd63395f4f7872fe" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>get_damping_factor</name></member>
      <member refid="classgri__control__loop_1abacc2448c0c6e54e7c3f7c2c89fc7326" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>get_frequency</name></member>
      <member refid="classgri__control__loop_1a700ac8b13c088f67ebd3e40157d1e48e" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>get_loop_bandwidth</name></member>
      <member refid="classgri__control__loop_1a965443d91327875e4a2936cd5d519a7d" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>get_phase</name></member>
      <member refid="classgri__control__loop_1a312bd7c64f1d0dbad92bf61935bda1e3" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>gri_control_loop</name></member>
      <member refid="classgri__control__loop_1aa08d9f6d6551089e77c9e758d84a47c3" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>phase_wrap</name></member>
      <member refid="classgri__control__loop_1a5ad976cdb6a0d7f4c67710f77361be88" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>set_alpha</name></member>
      <member refid="classgri__control__loop_1a926557505f7bdeff03adeb3805d9aa34" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>set_beta</name></member>
      <member refid="classgri__control__loop_1ac7b0c098ed71cbf1e0cb523ef2201e89" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>set_damping_factor</name></member>
      <member refid="classgri__control__loop_1ab5309b3d4959f1299288a95a8bfd50e8" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>set_frequency</name></member>
      <member refid="classgri__control__loop_1a35b2e90ed2b8a1a757f550e76d4a81c8" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>set_loop_bandwidth</name></member>
      <member refid="classgri__control__loop_1a6c8bf0e6f168c23ab16afa6c33f4a1cb" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>set_phase</name></member>
      <member refid="classgri__control__loop_1a8a42d0495ec0c416b7506468561491d8" prot="public" virt="non-virtual"><scope>gri_control_loop</scope><name>update_gains</name></member>
      <member refid="classgri__control__loop_1ada37c1edf3dc039561c450f109478cb5" prot="public" virt="virtual"><scope>gri_control_loop</scope><name>~gri_control_loop</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

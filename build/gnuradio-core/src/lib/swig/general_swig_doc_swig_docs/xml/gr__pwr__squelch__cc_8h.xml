<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="gr__pwr__squelch__cc_8h" kind="file">
    <compoundname>gr_pwr_squelch_cc.h</compoundname>
    <includes refid="gr__core__api_8h" local="no">gr_core_api.h</includes>
    <includes local="no">cmath</includes>
    <includes refid="gr__squelch__base__cc_8h" local="no">gr_squelch_base_cc.h</includes>
    <includes local="no">gr_single_pole_iir.h</includes>
    <incdepgraph>
      <node id="691">
        <label>gr_squelch_base_cc.h</label>
        <link refid="gr__squelch__base__cc_8h"/>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
      </node>
      <node id="689">
        <label>gruel/attributes.h</label>
      </node>
      <node id="690">
        <label>cmath</label>
      </node>
      <node id="688">
        <label>gr_core_api.h</label>
        <link refid="gr__core__api_8h"/>
        <childnode refid="689" relation="include">
        </childnode>
      </node>
      <node id="692">
        <label>gr_block.h</label>
      </node>
      <node id="693">
        <label>gr_single_pole_iir.h</label>
      </node>
      <node id="687">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_pwr_squelch_cc.h</label>
        <link refid="gr_pwr_squelch_cc.h"/>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classgr__pwr__squelch__cc" prot="public">gr_pwr_squelch_cc</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gr__pwr__squelch__cc_8h_1a6f9cdb2facf7dac5269edb70033e666c" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr__pwr__squelch__cc" kindref="compound">gr_pwr_squelch_cc</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;gr_pwr_squelch_cc&gt; gr_pwr_squelch_cc_sptr</definition>
        <argsstring></argsstring>
        <name>gr_pwr_squelch_cc_sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_pwr_squelch_cc.h" line="32" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_pwr_squelch_cc.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gr__pwr__squelch__cc_8h_1af916c8c575e98eeba817133cc852e25d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>__GR_ATTR_IMPORT <ref refid="gr__pwr__squelch__cc_8h_1a6f9cdb2facf7dac5269edb70033e666c" kindref="member">gr_pwr_squelch_cc_sptr</ref></type>
        <definition>__GR_ATTR_IMPORT gr_pwr_squelch_cc_sptr gr_make_pwr_squelch_cc</definition>
        <argsstring>(double db, double alpha=0.0001, int ramp=0, bool gate=false)</argsstring>
        <name>gr_make_pwr_squelch_cc</name>
        <param>
          <type>double</type>
          <declname>db</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
          <defval>0.0001</defval>
        </param>
        <param>
          <type>int</type>
          <declname>ramp</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>gate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_pwr_squelch_cc.h" line="35"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_GR_PWR_SQUELCH_CC_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_GR_PWR_SQUELCH_CC_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__core__api_8h" kindref="compound">gr_core_api.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__squelch__base__cc_8h" kindref="compound">gr_squelch_base_cc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_single_pole_iir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="gr__pwr__squelch__cc_8h_1a6f9cdb2facf7dac5269edb70033e666c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__pwr__squelch__cc" kindref="compound" tooltip="gate or zero output when input power below threshold">gr_pwr_squelch_cc</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;gr_pwr_squelch_cc&gt;<sp/><ref refid="gr__pwr__squelch__cc_8h_1a6f9cdb2facf7dac5269edb70033e666c" kindref="member">gr_pwr_squelch_cc_sptr</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="gr__core__api_8h_1a8b8937b0c61edd85ab57ce8203543248" kindref="member">GR_CORE_API</ref><sp/><ref refid="gr__pwr__squelch__cc_8h_1a6f9cdb2facf7dac5269edb70033e666c" kindref="member">gr_pwr_squelch_cc_sptr</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="gr__pwr__squelch__cc_8h_1af916c8c575e98eeba817133cc852e25d" kindref="member">gr_make_pwr_squelch_cc</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha<sp/>=<sp/>0.0001,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classgr__squelch__base__cc_1a75e246fbe7392ab6ada53fc7154a29b1" kindref="member">ramp</ref>=0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgr__squelch__base__cc_1aac453abc028ae38e941375e90c426d6d" kindref="member">gate</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="classgr__pwr__squelch__cc" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="gr__core__api_8h_1a8b8937b0c61edd85ab57ce8203543248" kindref="member">GR_CORE_API</ref><sp/><ref refid="classgr__pwr__squelch__cc" kindref="compound" tooltip="gate or zero output when input power below threshold">gr_pwr_squelch_cc</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgr__squelch__base__cc" kindref="compound">gr_squelch_base_cc</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_threshold;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d_pwr;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>gr_single_pole_iir&lt;double,double,double&gt;<sp/>d_iir;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="gr__core__api_8h_1a8b8937b0c61edd85ab57ce8203543248" kindref="member">GR_CORE_API</ref><sp/><ref refid="gr__pwr__squelch__cc_8h_1a6f9cdb2facf7dac5269edb70033e666c" kindref="member">gr_pwr_squelch_cc_sptr</ref><sp/><ref refid="gr__pwr__squelch__cc_8h_1af916c8c575e98eeba817133cc852e25d" kindref="member">gr_make_pwr_squelch_cc</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ramp,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gate);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classgr__pwr__squelch__cc" kindref="compound" tooltip="gate or zero output when input power below threshold">gr_pwr_squelch_cc</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ramp,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gate);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__squelch__base__cc_1abfd6f465a2c52de7da1fe5e4293877dd" kindref="member">update_state</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>gr_complex<sp/>&amp;in);</highlight></codeline>
<codeline lineno="53" refid="classgr__pwr__squelch__cc_1a77a8947bcc06fb2051a9cf1d25193b5d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgr__pwr__squelch__cc_1a77a8947bcc06fb2051a9cf1d25193b5d" kindref="member">mute</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_pwr<sp/>&lt;<sp/>d_threshold;<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/><ref refid="classgr__squelch__base__cc_1aa057da566cf1cd38fb991f7bfa0e2a89" kindref="member">squelch_range</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classgr__pwr__squelch__cc_1a6098303364b0cd8967069c58d1287e56" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classgr__pwr__squelch__cc_1a6098303364b0cd8967069c58d1287e56" kindref="member">threshold</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10*log10(d_threshold);<sp/>}</highlight></codeline>
<codeline lineno="59" refid="classgr__pwr__squelch__cc_1a199a7d1bc0723d2019618b411feb7e1f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__pwr__squelch__cc_1a199a7d1bc0723d2019618b411feb7e1f" kindref="member">set_threshold</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>db)<sp/>{<sp/>d_threshold<sp/>=<sp/>std::pow(10.0,<sp/>db/10);<sp/>}</highlight></codeline>
<codeline lineno="60" refid="classgr__pwr__squelch__cc_1ab71484602f26be8baeba220aaff1c5cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__pwr__squelch__cc_1ab71484602f26be8baeba220aaff1c5cc" kindref="member">set_alpha</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha)<sp/>{<sp/>d_iir.set_taps(alpha);<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_GR_PWR_SQUELCH_CC_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_pwr_squelch_cc.h"/>
  </compounddef>
</doxygen>

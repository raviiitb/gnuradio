<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classgr__nco" kind="class" prot="public">
    <compoundname>gr_nco</compoundname>
    <includes refid="gr__nco_8h" local="no">gr_nco.h</includes>
    <templateparamlist>
      <param>
        <type>class o_type</type>
      </param>
      <param>
        <type>class i_type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classgr__nco_1a987170cc17a73fbee7174339931a10ec" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double gr_nco&lt; o_type, i_type &gt;::phase</definition>
        <argsstring></argsstring>
        <name>phase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="116" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__nco_1a2059238c2da93a471fce526bdd2dc6e2" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double gr_nco&lt; o_type, i_type &gt;::phase_inc</definition>
        <argsstring></argsstring>
        <name>phase_inc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="117" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr__nco_1a2559257b4b1ef02dc1b4a8da4f49e583" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gr_nco&lt; o_type, i_type &gt;::gr_nco</definition>
        <argsstring>()</argsstring>
        <name>gr_nco</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="42" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a9e9f508bff7e014c64a6dce17bffbfa9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual gr_nco&lt; o_type, i_type &gt;::~gr_nco</definition>
        <argsstring>()</argsstring>
        <name>~gr_nco</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="44" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a0f06623da940487d6c546997debb0af0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::set_phase</definition>
        <argsstring>(double angle)</argsstring>
        <name>set_phase</name>
        <param>
          <type>double</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="47" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1adebaf4df7e9d941bef8d15785dfff6cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::adjust_phase</definition>
        <argsstring>(double delta_phase)</argsstring>
        <name>adjust_phase</name>
        <param>
          <type>double</type>
          <declname>delta_phase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="51" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a0fb6a20fc445d8c5d204edea99d6c429" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::set_freq</definition>
        <argsstring>(double angle_rate)</argsstring>
        <name>set_freq</name>
        <param>
          <type>double</type>
          <declname>angle_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="57" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1aaaefdc0f44d2d0a75078ccecaa5cf0a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::adjust_freq</definition>
        <argsstring>(double delta_angle_rate)</argsstring>
        <name>adjust_freq</name>
        <param>
          <type>double</type>
          <declname>delta_angle_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="63" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a81fa5f973481363ccae81e815ec629a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::step</definition>
        <argsstring>()</argsstring>
        <name>step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="70" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="69" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a1e43537bf60084cdece096a286e24c36" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::step</definition>
        <argsstring>(int n)</argsstring>
        <name>step</name>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="83" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="82" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a5152bb2a0d45a3ca2db5e6156e39dabe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double gr_nco&lt; o_type, i_type &gt;::get_phase</definition>
        <argsstring>() const </argsstring>
        <name>get_phase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="96" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a8681ddce0197120e4f6a84ccca12839e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double gr_nco&lt; o_type, i_type &gt;::get_freq</definition>
        <argsstring>() const </argsstring>
        <name>get_freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="97" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="97" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a201edc7a5d1399c3886658ea4b570342" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::sincos</definition>
        <argsstring>(float *sinx, float *cosx) const </argsstring>
        <name>sincos</name>
        <param>
          <type>float *</type>
          <declname>sinx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>cosx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="100" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1ab991c608a8d90c9af9ae5ea608acfa6e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float gr_nco&lt; o_type, i_type &gt;::cos</definition>
        <argsstring>() const </argsstring>
        <name>cos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="103" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1ac3b1e9a0be5aecc1538487c41cf51b32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float gr_nco&lt; o_type, i_type &gt;::sin</definition>
        <argsstring>() const </argsstring>
        <name>sin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="104" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a3afb645f64eb06869fe58b3e14badfe2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::sin</definition>
        <argsstring>(float *output, int noutput_items, double ampl=1.0)</argsstring>
        <name>sin</name>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ampl</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="107" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="129" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1aafb7d1186603337e07998d9db3e204f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::cos</definition>
        <argsstring>(float *output, int noutput_items, double ampl=1.0)</argsstring>
        <name>cos</name>
        <param>
          <type>float *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ampl</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="108" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="139" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a9803e92c387c52cba4a1aca3d86aa1eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::sincos</definition>
        <argsstring>(gr_complex *output, int noutput_items, double ampl=1.0)</argsstring>
        <name>sincos</name>
        <param>
          <type>gr_complex *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ampl</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="109" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="189" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a10bbc185b6c9e4a65719a1add98191ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::sin</definition>
        <argsstring>(short *output, int noutput_items, double ampl=1.0)</argsstring>
        <name>sin</name>
        <param>
          <type>short *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ampl</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="110" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="149" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a2f8121120df7ef03f56d1467b251f3bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::cos</definition>
        <argsstring>(short *output, int noutput_items, double ampl=1.0)</argsstring>
        <name>cos</name>
        <param>
          <type>short *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ampl</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="111" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="159" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1a874aca305fcec928991648cd74735dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::sin</definition>
        <argsstring>(int *output, int noutput_items, double ampl=1.0)</argsstring>
        <name>sin</name>
        <param>
          <type>int *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ampl</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="112" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="169" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classgr__nco_1ad4310e211170d65c0347e38f1f1506f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void gr_nco&lt; o_type, i_type &gt;::cos</definition>
        <argsstring>(int *output, int noutput_items, double ampl=1.0)</argsstring>
        <name>cos</name>
        <param>
          <type>int *</type>
          <declname>output</declname>
        </param>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ampl</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="113" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="179" bodyend="185"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>base class template for Numerically Controlled Oscillator (NCO) </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" line="40" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_nco.h" bodystart="40" bodyend="118"/>
    <listofallmembers>
      <member refid="classgr__nco_1aaaefdc0f44d2d0a75078ccecaa5cf0a0" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>adjust_freq</name></member>
      <member refid="classgr__nco_1adebaf4df7e9d941bef8d15785dfff6cd" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>adjust_phase</name></member>
      <member refid="classgr__nco_1ab991c608a8d90c9af9ae5ea608acfa6e" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>cos</name></member>
      <member refid="classgr__nco_1aafb7d1186603337e07998d9db3e204f7" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>cos</name></member>
      <member refid="classgr__nco_1a2f8121120df7ef03f56d1467b251f3bc" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>cos</name></member>
      <member refid="classgr__nco_1ad4310e211170d65c0347e38f1f1506f6" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>cos</name></member>
      <member refid="classgr__nco_1a8681ddce0197120e4f6a84ccca12839e" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>get_freq</name></member>
      <member refid="classgr__nco_1a5152bb2a0d45a3ca2db5e6156e39dabe" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>get_phase</name></member>
      <member refid="classgr__nco_1a2559257b4b1ef02dc1b4a8da4f49e583" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>gr_nco</name></member>
      <member refid="classgr__nco_1a987170cc17a73fbee7174339931a10ec" prot="protected" virt="non-virtual"><scope>gr_nco</scope><name>phase</name></member>
      <member refid="classgr__nco_1a2059238c2da93a471fce526bdd2dc6e2" prot="protected" virt="non-virtual"><scope>gr_nco</scope><name>phase_inc</name></member>
      <member refid="classgr__nco_1a0fb6a20fc445d8c5d204edea99d6c429" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>set_freq</name></member>
      <member refid="classgr__nco_1a0f06623da940487d6c546997debb0af0" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>set_phase</name></member>
      <member refid="classgr__nco_1ac3b1e9a0be5aecc1538487c41cf51b32" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>sin</name></member>
      <member refid="classgr__nco_1a3afb645f64eb06869fe58b3e14badfe2" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>sin</name></member>
      <member refid="classgr__nco_1a10bbc185b6c9e4a65719a1add98191ae" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>sin</name></member>
      <member refid="classgr__nco_1a874aca305fcec928991648cd74735dbb" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>sin</name></member>
      <member refid="classgr__nco_1a201edc7a5d1399c3886658ea4b570342" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>sincos</name></member>
      <member refid="classgr__nco_1a9803e92c387c52cba4a1aca3d86aa1eb" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>sincos</name></member>
      <member refid="classgr__nco_1a81fa5f973481363ccae81e815ec629a3" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>step</name></member>
      <member refid="classgr__nco_1a1e43537bf60084cdece096a286e24c36" prot="public" virt="non-virtual"><scope>gr_nco</scope><name>step</name></member>
      <member refid="classgr__nco_1a9e9f508bff7e014c64a6dce17bffbfa9" prot="public" virt="virtual"><scope>gr_nco</scope><name>~gr_nco</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classgr__additive__scrambler__bb" kind="class" prot="public">
    <compoundname>gr_additive_scrambler_bb</compoundname>
    <includes refid="gr__additive__scrambler__bb_8h" local="no">gr_additive_scrambler_bb.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classgr__additive__scrambler__bb_1a23a5c0e891d8c5d34983de56391d20be" prot="private" static="no" mutable="no">
        <type><ref refid="classgri__lfsr" kindref="compound">gri_lfsr</ref></type>
        <definition>gri_lfsr gr_additive_scrambler_bb::d_lfsr</definition>
        <argsstring></argsstring>
        <name>d_lfsr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_additive_scrambler_bb.h" line="56" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_additive_scrambler_bb.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__additive__scrambler__bb_1af67eca2bd25a3d72f3c5cfd6e0c07ce8" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gr_additive_scrambler_bb::d_count</definition>
        <argsstring></argsstring>
        <name>d_count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_additive_scrambler_bb.h" line="57" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_additive_scrambler_bb.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classgr__additive__scrambler__bb_1abf094226f50b4dd43ac5cc4ea71cb108" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int gr_additive_scrambler_bb::d_bits</definition>
        <argsstring></argsstring>
        <name>d_bits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_additive_scrambler_bb.h" line="58" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_additive_scrambler_bb.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgr__additive__scrambler__bb_1a99cd8176e530a12e96ec21a985536d53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="gr__core__api_8h_1a8b8937b0c61edd85ab57ce8203543248" kindref="member">GR_CORE_API</ref> <ref refid="gr__additive__scrambler__bb_8h_1a26027c2d32cf1eb45b2d4aa685610eeb" kindref="member">gr_additive_scrambler_bb_sptr</ref></type>
        <definition>GR_CORE_API gr_additive_scrambler_bb_sptr gr_make_additive_scrambler_bb</definition>
        <argsstring>(int mask, int seed, int len, int count)</argsstring>
        <name>gr_make_additive_scrambler_bb</name>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_additive_scrambler_bb.h" line="54"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgr__additive__scrambler__bb_1a81634fce534b75c33a1ef8743f016e37" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>gr_additive_scrambler_bb::gr_additive_scrambler_bb</definition>
        <argsstring>(int mask, int seed, int len, int count)</argsstring>
        <name>gr_additive_scrambler_bb</name>
        <param>
          <type>int</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seed</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_additive_scrambler_bb.h" line="60"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr__additive__scrambler__bb_1a4335a5d92df235363293fd561d0b3e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int gr_additive_scrambler_bb::work</definition>
        <argsstring>(int noutput_items, gr_vector_const_void_star &amp;input_items, gr_vector_void_star &amp;output_items)</argsstring>
        <name>work</name>
        <param>
          <type>int</type>
          <declname>noutput_items</declname>
        </param>
        <param>
          <type>gr_vector_const_void_star &amp;</type>
          <declname>input_items</declname>
        </param>
        <param>
          <type>gr_vector_void_star &amp;</type>
          <declname>output_items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_additive_scrambler_bb.h" line="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Scramble an input stream using an LFSR. This block works on the LSB only of the input data stream, i.e., on an &quot;unpacked binary&quot; stream, and produces the same format on its output.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>Polynomial mask for LFSR </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seed</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial shift register contents </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Shift register length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bits after which shift register is reset, 0=never</para></parameterdescription>
</parameteritem>
</parameterlist>
The scrambler works by XORing the incoming bit stream by the output of the LFSR. Optionally, after &apos;count&apos; bits have been processed, the shift register is reset to the seed value. This allows processing fixed length vectors of samples. </para>    </detaileddescription>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_additive_scrambler_bb.h" line="53" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/general/gr_additive_scrambler_bb.h" bodystart="52" bodyend="66"/>
    <listofallmembers>
      <member refid="classgr__additive__scrambler__bb_1abf094226f50b4dd43ac5cc4ea71cb108" prot="private" virt="non-virtual"><scope>gr_additive_scrambler_bb</scope><name>d_bits</name></member>
      <member refid="classgr__additive__scrambler__bb_1af67eca2bd25a3d72f3c5cfd6e0c07ce8" prot="private" virt="non-virtual"><scope>gr_additive_scrambler_bb</scope><name>d_count</name></member>
      <member refid="classgr__additive__scrambler__bb_1a23a5c0e891d8c5d34983de56391d20be" prot="private" virt="non-virtual"><scope>gr_additive_scrambler_bb</scope><name>d_lfsr</name></member>
      <member refid="classgr__additive__scrambler__bb_1a81634fce534b75c33a1ef8743f016e37" prot="private" virt="non-virtual"><scope>gr_additive_scrambler_bb</scope><name>gr_additive_scrambler_bb</name></member>
      <member refid="classgr__additive__scrambler__bb_1a99cd8176e530a12e96ec21a985536d53" prot="private" virt="non-virtual"><scope>gr_additive_scrambler_bb</scope><name>gr_make_additive_scrambler_bb</name></member>
      <member refid="classgr__additive__scrambler__bb_1a4335a5d92df235363293fd561d0b3e65" prot="public" virt="non-virtual"><scope>gr_additive_scrambler_bb</scope><name>work</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="gr__basic__block_8h" kind="file">
    <compoundname>gr_basic_block.h</compoundname>
    <includes local="no">gr_core_api.h</includes>
    <includes refid="gr__runtime__types_8h" local="no">gr_runtime_types.h</includes>
    <includes refid="gr__sptr__magic_8h" local="no">gr_sptr_magic.h</includes>
    <includes local="no">boost/enable_shared_from_this.hpp</includes>
    <includes local="no">boost/function.hpp</includes>
    <includes refid="gr__msg__accepter_8h" local="no">gr_msg_accepter.h</includes>
    <includes local="no">string</includes>
    <includedby refid="gr__block_8h" local="no">/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_block.h</includedby>
    <includedby refid="gr__flowgraph_8h" local="no">/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h</includedby>
    <includedby refid="gr__hier__block2_8h" local="no">/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_hier_block2.h</includedby>
    <incdepgraph>
      <node id="4">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="7">
        <label>gr_complex.h</label>
        <link refid="gr__complex_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="0">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h</label>
        <link refid="gr_basic_block.h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>gr_types.h</label>
        <link refid="gr__types_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>string</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="11">
        <label>boost/function.hpp</label>
      </node>
      <node id="2">
        <label>gr_runtime_types.h</label>
        <link refid="gr__runtime__types_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>gr_core_api.h</label>
      </node>
      <node id="12">
        <label>gr_msg_accepter.h</label>
        <link refid="gr__msg__accepter_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="14">
        <label>gruel/pmt.h</label>
      </node>
      <node id="10">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="13">
        <label>gruel/msg_accepter.h</label>
      </node>
      <node id="9">
        <label>gr_sptr_magic.h</label>
        <link refid="gr__sptr__magic_8h"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>complex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="29">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_hier_block2.h</label>
        <link refid="gr__hier__block2_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h</label>
        <link refid="gr__flowgraph_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_scheduler.h</label>
        <link refid="gr__scheduler_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_sync_interpolator.h</label>
        <link refid="gr__sync__interpolator_8h"/>
      </node>
      <node id="24">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_sync_block.h</label>
        <link refid="gr__sync__block_8h"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_tpb_thread_body.h</label>
        <link refid="gr__tpb__thread__body_8h"/>
      </node>
      <node id="16">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h</label>
        <link refid="gr_basic_block.h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flat_flowgraph.h</label>
        <link refid="gr__flat__flowgraph_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_top_block.h</label>
        <link refid="gr__top__block_8h"/>
      </node>
      <node id="17">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_block.h</label>
        <link refid="gr__block_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_scheduler_sts.h</label>
        <link refid="gr__scheduler__sts_8h"/>
      </node>
      <node id="22">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_scheduler_tpb.h</label>
        <link refid="gr__scheduler__tpb_8h"/>
      </node>
      <node id="19">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_hier_block2_detail.h</label>
        <link refid="gr__hier__block2__detail_8h"/>
      </node>
      <node id="23">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_top_block_impl.h</label>
        <link refid="gr__top__block__impl_8h"/>
      </node>
      <node id="25">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_sync_decimator.h</label>
        <link refid="gr__sync__decimator_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classgr__basic__block" prot="public">gr_basic_block</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" prot="public" static="no">
        <type>std::vector&lt; <ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref> &gt;</type>
        <definition>typedef std::vector&lt;gr_basic_block_sptr&gt; gr_basic_block_vector_t</definition>
        <argsstring></argsstring>
        <name>gr_basic_block_vector_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h" line="159" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gr__basic__block_8h_1aae6b0ac6b0a67267a5bf7a6bd9a73259" prot="public" static="no">
        <type>std::vector&lt; <ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref> &gt;::iterator</type>
        <definition>typedef std::vector&lt;gr_basic_block_sptr&gt;::iterator gr_basic_block_viter_t</definition>
        <argsstring></argsstring>
        <name>gr_basic_block_viter_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h" line="160" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gr__basic__block_8h_1afe7684d11bda1c7330f6f32251f5a447" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(gr_basic_block_sptr lhs, gr_basic_block_sptr rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h" line="155" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="gr__basic__block_8h_1ae3ed22898fcc8bff34adb077179eaf1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GR_CORE_API long</type>
        <definition>GR_CORE_API long gr_basic_block_ncurrently_allocated</definition>
        <argsstring>()</argsstring>
        <name>gr_basic_block_ncurrently_allocated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h" line="162"/>
      </memberdef>
      <memberdef kind="function" id="gr__basic__block_8h_1acb2f610728a7f3cbd51a9a2eb60f059e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, gr_basic_block_sptr basic_block)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref></type>
          <declname>basic_block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h" line="165" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h" bodystart="164" bodyend="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006,2008,2009,2011<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_GR_BASIC_BLOCK_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_GR_BASIC_BLOCK_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_core_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__runtime__types_8h" kindref="compound">gr_runtime_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__sptr__magic_8h" kindref="compound">gr_sptr_magic.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/enable_shared_from_this.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/function.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__msg__accepter_8h" kindref="compound">gr_msg_accepter.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classgr__basic__block" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="classgr__basic__block" kindref="compound" tooltip="The abstract base class for all signal processing blocks.Basic blocks are the bare abstraction of an ...">gr_basic_block</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgr__msg__accepter" kindref="compound" tooltip="Accepts messages and inserts them into a message queue, then notifies subclass gr_basic_block there i...">gr_msg_accepter</ref>,<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>boost::enable_shared_from_this&lt;gr_basic_block&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::function&lt;void(pmt::pmt_t)&gt;<sp/>msg_handler_t;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>function<sp/>is<sp/>called<sp/>by<sp/>the<sp/>runtime<sp/>system<sp/>to<sp/>dispatch<sp/>messages.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>thread-safety<sp/>guarantees<sp/>mentioned<sp/>in<sp/>set_msg_handler<sp/>are<sp/>implemented</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>by<sp/>the<sp/>callers<sp/>of<sp/>this<sp/>method.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dispatch_msg(pmt::pmt_t<sp/>msg)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(d_msg_handler)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>there<sp/>a<sp/>handler?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_msg_handler(msg);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Yes,<sp/>invoke<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>msg_handler_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_msg_handler;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65" refid="classgr__basic__block_1adf5bf4523d6dd698aa770e3da8f2b30d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__flowgraph" kindref="compound" tooltip="Class representing a directed, acyclic graph of basic blocks.">gr_flowgraph</ref>;</highlight></codeline>
<codeline lineno="66" refid="classgr__basic__block_1a69b41e361328cea911d69e1ec0bc50ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__flat__flowgraph" kindref="compound" tooltip="Class specializing gr_flat_flowgraph that has all nodes as gr_blocks, with no hierarchy.">gr_flat_flowgraph</ref>;<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>will<sp/>be<sp/>redundant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classgr__basic__block_1affab9e232776d20a9b3772f545559611" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__tpb__thread__body" kindref="compound" tooltip="The body of each thread-per-block thread.">gr_tpb_thread_body</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classgr__basic__block_1a5c90b7c003ddd61f8df6bef2aceeab3da476d594a077e729bad0f2cfa2008c899" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classgr__basic__block_1a5c90b7c003ddd61f8df6bef2aceeab3d" kindref="member">vcolor</ref><sp/>{<sp/><ref refid="classgr__basic__block_1a5c90b7c003ddd61f8df6bef2aceeab3da476d594a077e729bad0f2cfa2008c899" kindref="member">WHITE</ref>,<sp/>GREY,<sp/>BLACK<sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classgr__basic__block_1afd352cc073ef28012d4d079a863f5401" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__basic__block_1afd352cc073ef28012d4d079a863f5401" kindref="member">d_name</ref>;</highlight></codeline>
<codeline lineno="72" refid="classgr__basic__block_1a2c8da0c28bbbfb0e759278c9b9459e96" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/><ref refid="classgr__basic__block_1a2c8da0c28bbbfb0e759278c9b9459e96" kindref="member">d_input_signature</ref>;</highlight></codeline>
<codeline lineno="73" refid="classgr__basic__block_1a76d64ed7a79566e3310306ae6f194d75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/><ref refid="classgr__basic__block_1a76d64ed7a79566e3310306ae6f194d75" kindref="member">d_output_signature</ref>;</highlight></codeline>
<codeline lineno="74" refid="classgr__basic__block_1a0d2999c04f47327f93dd7def5dc704f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__basic__block_1a0d2999c04f47327f93dd7def5dc704f8" kindref="member">d_unique_id</ref>;</highlight></codeline>
<codeline lineno="75" refid="classgr__basic__block_1a7fb7e692e3b98a82410b396ef263bb41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__basic__block_1a5c90b7c003ddd61f8df6bef2aceeab3d" kindref="member">vcolor</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__basic__block_1a7fb7e692e3b98a82410b396ef263bb41" kindref="member">d_color</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classgr__basic__block_1a84d1e93b57e52efb18a5aa90a3eaf2db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__basic__block_1a84d1e93b57e52efb18a5aa90a3eaf2db" kindref="member">gr_basic_block</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){}<sp/></highlight><highlight class="comment">//allows<sp/>pure<sp/>virtual<sp/>interface<sp/>sub-classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__basic__block" kindref="compound" tooltip="The abstract base class for all signal processing blocks.Basic blocks are the bare abstraction of an ...">gr_basic_block</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>input_signature,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>output_signature);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="classgr__basic__block_1a419d0fbba0ca02d822cbc299b979de54" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__basic__block_1a419d0fbba0ca02d822cbc299b979de54" kindref="member" tooltip="may only be called during constructor">set_input_signature</ref>(<ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>iosig)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_input_signature<sp/>=<sp/>iosig;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classgr__basic__block_1a949b6ad69ebfdf423835265db99cf63d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__basic__block_1a949b6ad69ebfdf423835265db99cf63d" kindref="member" tooltip="may only be called during constructor">set_output_signature</ref>(<ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>iosig)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_output_signature<sp/>=<sp/>iosig;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classgr__basic__block_1a0821ef947158670d53bf0739f3c8877b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__basic__block_1a0821ef947158670d53bf0739f3c8877b" kindref="member" tooltip="Allow the flowgraph to set for sorting and partitioning.">set_color</ref>(<ref refid="classgr__basic__block_1a5c90b7c003ddd61f8df6bef2aceeab3d" kindref="member">vcolor</ref><sp/>color)<sp/>{<sp/>d_color<sp/>=<sp/>color;<sp/>}</highlight></codeline>
<codeline lineno="98" refid="classgr__basic__block_1a1cedb1704b6c00977c681b378ede384c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classgr__basic__block_1a5c90b7c003ddd61f8df6bef2aceeab3d" kindref="member">vcolor</ref><sp/><ref refid="classgr__basic__block_1a1cedb1704b6c00977c681b378ede384c" kindref="member">color</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_color;<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classgr__basic__block" kindref="compound" tooltip="The abstract base class for all signal processing blocks.Basic blocks are the bare abstraction of an ...">gr_basic_block</ref>();</highlight></codeline>
<codeline lineno="102" refid="classgr__basic__block_1aa2a2947744d418c5470fbf4e623b58fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classgr__basic__block_1aa2a2947744d418c5470fbf4e623b58fe" kindref="member">unique_id</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_unique_id;<sp/>}</highlight></codeline>
<codeline lineno="103" refid="classgr__basic__block_1aa12a20d8b8eab341da935530d29299d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="classgr__basic__block_1aa12a20d8b8eab341da935530d29299d2" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_name;<sp/>}</highlight></codeline>
<codeline lineno="104" refid="classgr__basic__block_1a58f6d05e85931200f3771d3e50741281" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/><ref refid="classgr__basic__block_1a58f6d05e85931200f3771d3e50741281" kindref="member">input_signature</ref>()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_input_signature;<sp/>}</highlight></codeline>
<codeline lineno="105" refid="classgr__basic__block_1add68b96f012dfe352700b4fd1c3a184a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/><ref refid="classgr__basic__block_1add68b96f012dfe352700b4fd1c3a184a" kindref="member">output_signature</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_output_signature;<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>to_basic_block();<sp/></highlight><highlight class="comment">//<sp/>Needed<sp/>for<sp/>Python<sp/>type<sp/>coercion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classgr__basic__block_1a50a714df9c3ce8c03854a09ac84e589b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgr__basic__block_1a50a714df9c3ce8c03854a09ac84e589b" kindref="member" tooltip="Confirm that ninputs and noutputs is an acceptable combination.">check_topology</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ninputs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>noutputs)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classgr__basic__block_1a4e78d61b09a066f5719dbb9c18f3d441" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__basic__block_1a4e78d61b09a066f5719dbb9c18f3d441" kindref="member" tooltip="Set the callback that is fired when messages are available.">set_msg_handler</ref>(T<sp/>msg_handler){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>d_msg_handler<sp/>=<sp/>msg_handler_t(msg_handler);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="gr__basic__block_8h_1afe7684d11bda1c7330f6f32251f5a447" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="gr__basic__block_8h_1afe7684d11bda1c7330f6f32251f5a447" kindref="member">operator&lt;</ref>(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>lhs,<sp/><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>rhs)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lhs-&gt;unique_id()<sp/>&lt;<sp/>rhs-&gt;unique_id();</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;gr_basic_block_sptr&gt;<sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref>;</highlight></codeline>
<codeline lineno="160" refid="gr__basic__block_8h_1aae6b0ac6b0a67267a5bf7a6bd9a73259" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;gr_basic_block_sptr&gt;::iterator<sp/><ref refid="gr__basic__block_8h_1aae6b0ac6b0a67267a5bf7a6bd9a73259" kindref="member">gr_basic_block_viter_t</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">GR_CORE_API<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="gr__basic__block_8h_1ae3ed22898fcc8bff34adb077179eaf1c" kindref="member">gr_basic_block_ncurrently_allocated</ref>();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="gr__basic__block_8h_1acb2f610728a7f3cbd51a9a2eb60f059e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;<ref refid="gr__basic__block_8h_1acb2f610728a7f3cbd51a9a2eb60f059e" kindref="member">operator &lt;&lt; </ref>(std::ostream<sp/>&amp;os,<sp/><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>basic_block)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>basic_block-&gt;name()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>basic_block-&gt;unique_id()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_GR_BASIC_BLOCK_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_basic_block.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="gr__flowgraph_8h" kind="file">
    <compoundname>gr_flowgraph.h</compoundname>
    <includes local="no">gr_core_api.h</includes>
    <includes refid="gr__basic__block_8h" local="no">gr_basic_block.h</includes>
    <includes local="no">iostream</includes>
    <includedby refid="gr__flat__flowgraph_8h" local="no">/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flat_flowgraph.h</includedby>
    <incdepgraph>
      <node id="179">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="174">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h</label>
        <link refid="gr_flowgraph.h"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>gr_complex.h</label>
        <link refid="gr__complex_8h"/>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="176">
        <label>gr_basic_block.h</label>
        <link refid="gr__basic__block_8h"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>gr_types.h</label>
        <link refid="gr__types_8h"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
      </node>
      <node id="190">
        <label>string</label>
      </node>
      <node id="181">
        <label>stddef.h</label>
      </node>
      <node id="186">
        <label>boost/function.hpp</label>
      </node>
      <node id="177">
        <label>gr_runtime_types.h</label>
        <link refid="gr__runtime__types_8h"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>gr_core_api.h</label>
      </node>
      <node id="187">
        <label>gr_msg_accepter.h</label>
        <link refid="gr__msg__accepter_8h"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>vector</label>
      </node>
      <node id="189">
        <label>gruel/pmt.h</label>
      </node>
      <node id="185">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="191">
        <label>iostream</label>
      </node>
      <node id="188">
        <label>gruel/msg_accepter.h</label>
      </node>
      <node id="184">
        <label>gr_sptr_magic.h</label>
        <link refid="gr__sptr__magic_8h"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>complex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="192">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h</label>
        <link refid="gr_flowgraph.h"/>
        <childnode refid="193" relation="include">
        </childnode>
      </node>
      <node id="195">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_scheduler.h</label>
        <link refid="gr__scheduler_8h"/>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
      </node>
      <node id="193">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flat_flowgraph.h</label>
        <link refid="gr__flat__flowgraph_8h"/>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
      </node>
      <node id="196">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_scheduler_sts.h</label>
        <link refid="gr__scheduler__sts_8h"/>
      </node>
      <node id="197">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_scheduler_tpb.h</label>
        <link refid="gr__scheduler__tpb_8h"/>
      </node>
      <node id="194">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_hier_block2_detail.h</label>
        <link refid="gr__hier__block2__detail_8h"/>
      </node>
      <node id="198">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_top_block_impl.h</label>
        <link refid="gr__top__block__impl_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classgr__endpoint" prot="public">gr_endpoint</innerclass>
    <innerclass refid="classgr__edge" prot="public">gr_edge</innerclass>
    <innerclass refid="classgr__flowgraph" prot="public">gr_flowgraph</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gr__flowgraph_8h_1a6f26386672ac464784d9dcada5a1b5ed" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classgr__endpoint" kindref="compound">gr_endpoint</ref> &gt;</type>
        <definition>typedef std::vector&lt;gr_endpoint&gt; gr_endpoint_vector_t</definition>
        <argsstring></argsstring>
        <name>gr_endpoint_vector_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" line="56" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gr__flowgraph_8h_1acf26a1a1437235f841c4a3e3b02de1cf" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classgr__endpoint" kindref="compound">gr_endpoint</ref> &gt;::iterator</type>
        <definition>typedef std::vector&lt;gr_endpoint&gt;::iterator gr_endpoint_viter_t</definition>
        <argsstring></argsstring>
        <name>gr_endpoint_viter_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" line="57" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gr__flowgraph_8h_1ad5acafbb1e25f4751d2b6f89af02d416" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classgr__edge" kindref="compound">gr_edge</ref> &gt;</type>
        <definition>typedef std::vector&lt;gr_edge&gt; gr_edge_vector_t</definition>
        <argsstring></argsstring>
        <name>gr_edge_vector_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" line="79" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="gr__flowgraph_8h_1ad44b48ccbec559db79e223f9c794a831" prot="public" static="no">
        <type>std::vector&lt; <ref refid="classgr__edge" kindref="compound">gr_edge</ref> &gt;::iterator</type>
        <definition>typedef std::vector&lt;gr_edge&gt;::iterator gr_edge_viter_t</definition>
        <argsstring></argsstring>
        <name>gr_edge_viter_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" line="80" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gr__flowgraph_8h_1ac2f2e6abafe2036169b0b627c9326bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GR_CORE_API <ref refid="gr__runtime__types_8h_1affd0c9dd44d1c4c88509206f7bc713c6" kindref="member">gr_flowgraph_sptr</ref></type>
        <definition>GR_CORE_API gr_flowgraph_sptr gr_make_flowgraph</definition>
        <argsstring>()</argsstring>
        <name>gr_make_flowgraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" line="85"/>
      </memberdef>
      <memberdef kind="function" id="gr__flowgraph_8h_1a1ed89b7886059e6b5dc0e323f7cc6be4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const gr_endpoint endp)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classgr__endpoint" kindref="compound">gr_endpoint</ref></type>
          <declname>endp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" line="179" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" bodystart="178" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="gr__flowgraph_8h_1a38500da45b60ec5cf7495c787d9559c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const gr_edge edge)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classgr__edge" kindref="compound">gr_edge</ref></type>
          <declname>edge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" line="186" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h" bodystart="185" bodyend="189"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2006,2007<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_GR_FLOWGRAPH_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_GR_FLOWGRAPH_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_core_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__basic__block_8h" kindref="compound">gr_basic_block.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classgr__endpoint" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>d_basic_block;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d_port;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41" refid="classgr__endpoint_1af248ee135cf45918c78d8e5b1d1e214c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__endpoint_1af248ee135cf45918c78d8e5b1d1e214c" kindref="member">gr_endpoint</ref>()<sp/>:<sp/>d_basic_block(),<sp/>d_port(0)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="42" refid="classgr__endpoint_1aeac66cfca038dfee21eaa96d6d099746" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__endpoint_1aeac66cfca038dfee21eaa96d6d099746" kindref="member">gr_endpoint</ref>(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port)<sp/>{<sp/>d_basic_block<sp/>=<sp/>block;<sp/>d_port<sp/>=<sp/>port;<sp/>}</highlight></codeline>
<codeline lineno="43" refid="classgr__endpoint_1a4c93735b0fa242c803270dcbffbbe1c9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/><ref refid="classgr__endpoint_1a4c93735b0fa242c803270dcbffbbe1c9" kindref="member">block</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_basic_block;<sp/>}</highlight></codeline>
<codeline lineno="44" refid="classgr__endpoint_1a489b2dc68ca529be2fbcffa94dbaa42b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint_1a489b2dc68ca529be2fbcffa94dbaa42b" kindref="member">port</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_port;<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;other)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classgr__endpoint_1ad3cdff47bb17116f5979e0e4301ac67c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint_1ad3cdff47bb17116f5979e0e4301ac67c" kindref="member">gr_endpoint::operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="50"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(d_basic_block<sp/>==<sp/>other.d_basic_block<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_port<sp/>==<sp/>other.d_port);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Hold<sp/>vectors<sp/>of<sp/>gr_endpoint<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="gr__flowgraph_8h_1a6f26386672ac464784d9dcada5a1b5ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;gr_endpoint&gt;<sp/><ref refid="gr__flowgraph_8h_1a6f26386672ac464784d9dcada5a1b5ed" kindref="member">gr_endpoint_vector_t</ref>;</highlight></codeline>
<codeline lineno="57" refid="gr__flowgraph_8h_1acf26a1a1437235f841c4a3e3b02de1cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;gr_endpoint&gt;::iterator<sp/><ref refid="gr__flowgraph_8h_1acf26a1a1437235f841c4a3e3b02de1cf" kindref="member">gr_endpoint_viter_t</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classgr__edge" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="classgr__edge" kindref="compound" tooltip="Class representing a connection between to graph endpoints.">gr_edge</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66" refid="classgr__edge_1a41ee973bc27369dc8d07193ba13c3fb2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__edge_1a41ee973bc27369dc8d07193ba13c3fb2" kindref="member">gr_edge</ref>()<sp/>:<sp/>d_src(),<sp/>d_dst()<sp/>{<sp/>};</highlight></codeline>
<codeline lineno="67" refid="classgr__edge_1a7729fa9d896b7e0133573d18038a1a46" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classgr__edge_1a7729fa9d896b7e0133573d18038a1a46" kindref="member">gr_edge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;dst)<sp/>:<sp/>d_src(src),<sp/>d_dst(dst)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>~<ref refid="classgr__edge" kindref="compound" tooltip="Class representing a connection between to graph endpoints.">gr_edge</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="classgr__edge_1a9ee22c06242b3ec3b8a8e5696be43854" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;<ref refid="classgr__edge_1a9ee22c06242b3ec3b8a8e5696be43854" kindref="member">src</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_src;<sp/>}</highlight></codeline>
<codeline lineno="71" refid="classgr__edge_1a531c6445e6e881887209a0c4141cd67d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;<ref refid="classgr__edge_1a531c6445e6e881887209a0c4141cd67d" kindref="member">dst</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_dst;<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>d_src;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>d_dst;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Hold<sp/>vectors<sp/>of<sp/>gr_edge<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="gr__flowgraph_8h_1ad5acafbb1e25f4751d2b6f89af02d416" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;gr_edge&gt;<sp/><ref refid="gr__flowgraph_8h_1ad5acafbb1e25f4751d2b6f89af02d416" kindref="member">gr_edge_vector_t</ref>;</highlight></codeline>
<codeline lineno="80" refid="gr__flowgraph_8h_1ad44b48ccbec559db79e223f9c794a831" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;gr_edge&gt;::iterator<sp/><ref refid="gr__flowgraph_8h_1ad44b48ccbec559db79e223f9c794a831" kindref="member">gr_edge_viter_t</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>shared<sp/>pointer<sp/>to<sp/>a<sp/>heap<sp/>allocated<sp/>flowgraph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(types<sp/>defined<sp/>in<sp/>gr_runtime_types.h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">GR_CORE_API<sp/><ref refid="gr__runtime__types_8h_1affd0c9dd44d1c4c88509206f7bc713c6" kindref="member">gr_flowgraph_sptr</ref><sp/><ref refid="gr__flowgraph_8h_1ac2f2e6abafe2036169b0b627c9326bdb" kindref="member">gr_make_flowgraph</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classgr__flowgraph" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="classgr__flowgraph" kindref="compound" tooltip="Class representing a directed, acyclic graph of basic blocks.">gr_flowgraph</ref></highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>GR_CORE_API<sp/><ref refid="gr__runtime__types_8h_1affd0c9dd44d1c4c88509206f7bc713c6" kindref="member">gr_flowgraph_sptr</ref><sp/><ref refid="gr__flowgraph_8h_1ac2f2e6abafe2036169b0b627c9326bdb" kindref="member">gr_make_flowgraph</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Destruct<sp/>an<sp/>arbitrary<sp/>flowgraph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>~<ref refid="classgr__flowgraph" kindref="compound" tooltip="Class representing a directed, acyclic graph of basic blocks.">gr_flowgraph</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>two<sp/>endpoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>connect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;dst);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disconnect<sp/>two<sp/>endpoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disconnect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;dst);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Connect<sp/>an<sp/>output<sp/>port<sp/>to<sp/>an<sp/>input<sp/>port<sp/>(convenience)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>connect(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>src_block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_port,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>dst_block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_port);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Disconnect<sp/>an<sp/>input<sp/>port<sp/>from<sp/>an<sp/>output<sp/>port<sp/>(convenience)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disconnect(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>src_block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_port,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>dst_block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_port);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Validate<sp/>connectivity,<sp/>raise<sp/>exception<sp/>if<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>validate();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>existing<sp/>flowgraph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>vector<sp/>of<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="classgr__flowgraph_1a607f86008328257d033f488d977107d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="gr__flowgraph_8h_1ad5acafbb1e25f4751d2b6f89af02d416" kindref="member">gr_edge_vector_t</ref><sp/>&amp;<ref refid="classgr__flowgraph_1a607f86008328257d033f488d977107d9" kindref="member">edges</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>d_edges;<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>vector<sp/>of<sp/>connected<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>calc_used_blocks();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>toplogically<sp/>sorted<sp/>vector<sp/>of<sp/>blocks.<sp/><sp/>All<sp/>the<sp/>sources<sp/>come<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>topological_sort(<ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>&amp;blocks);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>vector<sp/>of<sp/>vectors<sp/>of<sp/>disjointly<sp/>connected<sp/>blocks,<sp/>topologically</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>sorted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>std::vector&lt;gr_basic_block_vector_t&gt;<sp/>partition();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="133" refid="classgr__flowgraph_1a606da901c4629ed160d50a7ea93509a6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/><ref refid="classgr__flowgraph_1a606da901c4629ed160d50a7ea93509a6" kindref="member">d_blocks</ref>;</highlight></codeline>
<codeline lineno="134" refid="classgr__flowgraph_1a24608051d1b70218b1fdb34140884e28" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="gr__flowgraph_8h_1ad5acafbb1e25f4751d2b6f89af02d416" kindref="member">gr_edge_vector_t</ref><sp/><ref refid="classgr__flowgraph_1a24608051d1b70218b1fdb34140884e28" kindref="member">d_edges</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="classgr__flowgraph" kindref="compound" tooltip="Class representing a directed, acyclic graph of basic blocks.">gr_flowgraph</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>std::vector&lt;int&gt;<sp/>calc_used_ports(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_inputs);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>calc_downstream_blocks(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="gr__flowgraph_8h_1ad5acafbb1e25f4751d2b6f89af02d416" kindref="member">gr_edge_vector_t</ref><sp/>calc_upstream_edges(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>has_block_p(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="classgr__edge" kindref="compound" tooltip="Class representing a connection between to graph endpoints.">gr_edge</ref><sp/>calc_upstream_edge(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_valid_port(<ref refid="gr__runtime__types_8h_1a17582361e91523de033c893f29cae653" kindref="member">gr_io_signature_sptr</ref><sp/>sig,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_dst_not_used(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;dst);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_type_match(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>&amp;dst);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="gr__flowgraph_8h_1ad5acafbb1e25f4751d2b6f89af02d416" kindref="member">gr_edge_vector_t</ref><sp/>calc_connections(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_inputs);<sp/></highlight><highlight class="comment">//<sp/>false=use<sp/>outputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>check_contiguity(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;<sp/>&amp;used_ports,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>check_inputs);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>calc_downstream_blocks(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>calc_reachable_blocks(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block,<sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>&amp;blocks);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reachable_dfs_visit(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block,<sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>&amp;blocks);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>calc_adjacent_blocks(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block,<sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>&amp;blocks);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>sort_sources_first(<ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>&amp;blocks);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>source_p(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>topological_dfs_visit(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block,<sp/><ref refid="gr__basic__block_8h_1a76d2f45845faaf2d72b0002ba045c0d6" kindref="member">gr_basic_block_vector_t</ref><sp/>&amp;output);</highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classgr__flowgraph_1afef8c6206921cdb502159b1cfc57f7fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__flowgraph_1a2a58b539977bb51ceea6af598499089d" kindref="member">gr_flowgraph::connect</ref>(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>src_block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_port,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>dst_block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_port)</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><ref refid="classgr__flowgraph_1a2a58b539977bb51ceea6af598499089d" kindref="member">connect</ref>(<ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref>(src_block,<sp/>src_port),</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref>(dst_block,<sp/>dst_port));</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="classgr__flowgraph_1aeec7ca27ceab439babb7addebb6921b5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__flowgraph_1abcc73eaef7cb9175536d6935941867c5" kindref="member">gr_flowgraph::disconnect</ref>(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>src_block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_port,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>dst_block,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_port)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="classgr__flowgraph_1abcc73eaef7cb9175536d6935941867c5" kindref="member">disconnect</ref>(<ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref>(src_block,<sp/>src_port),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref>(dst_block,<sp/>dst_port));</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;</highlight></codeline>
<codeline lineno="178" refid="gr__flowgraph_8h_1a1ed89b7886059e6b5dc0e323f7cc6be4" refkind="member"><highlight class="normal"><ref refid="gr__basic__block_8h_1acb2f610728a7f3cbd51a9a2eb60f059e" kindref="member">operator &lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__endpoint" kindref="compound" tooltip="Class representing a specific input or output graph endpoint.">gr_endpoint</ref><sp/>endp)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>endp.<ref refid="classgr__endpoint_1a4c93735b0fa242c803270dcbffbbe1c9" kindref="member">block</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endp.<ref refid="classgr__endpoint_1a489b2dc68ca529be2fbcffa94dbaa42b" kindref="member">port</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;</highlight></codeline>
<codeline lineno="185" refid="gr__flowgraph_8h_1a38500da45b60ec5cf7495c787d9559c9" refkind="member"><highlight class="normal"><ref refid="gr__basic__block_8h_1acb2f610728a7f3cbd51a9a2eb60f059e" kindref="member">operator &lt;&lt;</ref>(std::ostream<sp/>&amp;os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classgr__edge" kindref="compound" tooltip="Class representing a connection between to graph endpoints.">gr_edge</ref><sp/>edge)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>edge.<ref refid="classgr__edge_1a9ee22c06242b3ec3b8a8e5696be43854" kindref="member">src</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&gt;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>edge.<ref refid="classgr__edge_1a531c6445e6e881887209a0c4141cd67d" kindref="member">dst</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_GR_FLOWGRAPH_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_flowgraph.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="gr__top__block_8h" kind="file">
    <compoundname>gr_top_block.h</compoundname>
    <includes local="no">gr_core_api.h</includes>
    <includes refid="gr__hier__block2_8h" local="no">gr_hier_block2.h</includes>
    <incdepgraph>
      <node id="564">
        <label>gr_hier_block2.h</label>
        <link refid="gr__hier__block2_8h"/>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="565" relation="include">
        </childnode>
      </node>
      <node id="568">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="571">
        <label>gr_complex.h</label>
        <link refid="gr__complex_8h"/>
        <childnode refid="572" relation="include">
        </childnode>
      </node>
      <node id="565">
        <label>gr_basic_block.h</label>
        <link refid="gr__basic__block_8h"/>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="566" relation="include">
        </childnode>
        <childnode refid="573" relation="include">
        </childnode>
        <childnode refid="574" relation="include">
        </childnode>
        <childnode refid="575" relation="include">
        </childnode>
        <childnode refid="576" relation="include">
        </childnode>
        <childnode refid="579" relation="include">
        </childnode>
      </node>
      <node id="567">
        <label>gr_types.h</label>
        <link refid="gr__types_8h"/>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="568" relation="include">
        </childnode>
        <childnode refid="569" relation="include">
        </childnode>
        <childnode refid="570" relation="include">
        </childnode>
        <childnode refid="571" relation="include">
        </childnode>
      </node>
      <node id="579">
        <label>string</label>
      </node>
      <node id="562">
        <label>/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_top_block.h</label>
        <link refid="gr_top_block.h"/>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="564" relation="include">
        </childnode>
      </node>
      <node id="570">
        <label>stddef.h</label>
      </node>
      <node id="575">
        <label>boost/function.hpp</label>
      </node>
      <node id="566">
        <label>gr_runtime_types.h</label>
        <link refid="gr__runtime__types_8h"/>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="567" relation="include">
        </childnode>
      </node>
      <node id="563">
        <label>gr_core_api.h</label>
      </node>
      <node id="576">
        <label>gr_msg_accepter.h</label>
        <link refid="gr__msg__accepter_8h"/>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="577" relation="include">
        </childnode>
        <childnode refid="578" relation="include">
        </childnode>
      </node>
      <node id="569">
        <label>vector</label>
      </node>
      <node id="578">
        <label>gruel/pmt.h</label>
      </node>
      <node id="574">
        <label>boost/enable_shared_from_this.hpp</label>
      </node>
      <node id="577">
        <label>gruel/msg_accepter.h</label>
      </node>
      <node id="573">
        <label>gr_sptr_magic.h</label>
        <link refid="gr__sptr__magic_8h"/>
        <childnode refid="563" relation="include">
        </childnode>
        <childnode refid="568" relation="include">
        </childnode>
      </node>
      <node id="572">
        <label>complex</label>
      </node>
    </incdepgraph>
    <innerclass refid="classgr__top__block" prot="public">gr_top_block</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="gr__top__block_8h_1a692327d9e0d7d84ff82fbff3b52d0a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>GR_CORE_API <ref refid="gr__runtime__types_8h_1ad0556d746d6d5d0b1cb19e971e4d76f2" kindref="member">gr_top_block_sptr</ref></type>
        <definition>GR_CORE_API gr_top_block_sptr gr_make_top_block</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>gr_make_top_block</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_top_block.h" line="31"/>
      </memberdef>
      <memberdef kind="function" id="gr__top__block_8h_1ab327c5d11b89ec41b7cddd01ef74087e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="gr__runtime__types_8h_1ad0556d746d6d5d0b1cb19e971e4d76f2" kindref="member">gr_top_block_sptr</ref></type>
        <definition>gr_top_block_sptr cast_to_top_block_sptr</definition>
        <argsstring>(gr_basic_block_sptr block)</argsstring>
        <name>cast_to_top_block_sptr</name>
        <param>
          <type><ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref></type>
          <declname>block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_top_block.h" line="128" bodyfile="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_top_block.h" bodystart="128" bodyend="130"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c++<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2007,2008,2009<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>GNU<sp/>Radio</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>3,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>GNU<sp/>Radio<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>GNU<sp/>Radio;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>write<sp/>to</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Boston,<sp/>MA<sp/>02110-1301,<sp/>USA.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INCLUDED_GR_TOP_BLOCK_H</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>INCLUDED_GR_TOP_BLOCK_H</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;gr_core_api.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="gr__hier__block2_8h" kindref="compound">gr_hier_block2.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classgr__top__block__impl" kindref="compound" tooltip="Abstract implementation details of gr_top_blockThe actual implementation of gr_top_block. Separate class allows decoupling of changes from dependent classes.">gr_top_block_impl</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">GR_CORE_API<sp/><ref refid="gr__runtime__types_8h_1ad0556d746d6d5d0b1cb19e971e4d76f2" kindref="member">gr_top_block_sptr</ref><sp/><ref refid="gr__top__block_8h_1a692327d9e0d7d84ff82fbff3b52d0a88" kindref="member">gr_make_top_block</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classgr__top__block" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal">GR_CORE_API<sp/><ref refid="classgr__top__block" kindref="compound" tooltip="Top-level hierarchical block representing a flowgraph.">gr_top_block</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classgr__hier__block2" kindref="compound" tooltip="Hierarchical container class for gr_block&amp;#39;s and gr_hier_block2&amp;#39;s.">gr_hier_block2</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>GR_CORE_API<sp/><ref refid="gr__runtime__types_8h_1ad0556d746d6d5d0b1cb19e971e4d76f2" kindref="member">gr_top_block_sptr</ref><sp/><ref refid="gr__top__block_8h_1a692327d9e0d7d84ff82fbff3b52d0a88" kindref="member">gr_make_top_block</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="classgr__top__block__impl" kindref="compound" tooltip="Abstract implementation details of gr_top_blockThe actual implementation of gr_top_block. Separate class allows decoupling of changes from dependent classes.">gr_top_block_impl</ref><sp/>*d_impl;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="classgr__top__block" kindref="compound" tooltip="Top-level hierarchical block representing a flowgraph.">gr_top_block</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>~<ref refid="classgr__top__block" kindref="compound" tooltip="Top-level hierarchical block representing a flowgraph.">gr_top_block</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>run(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_noutput_items=100000);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>start(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_noutput_items=100000);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>stop();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>wait();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__hier__block2_1ac99f0dc1037ec2ca81721da8127c6d25" kindref="member">lock</ref>();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classgr__hier__block2_1a35d938ecc725c7992fb104cb2f321ebf" kindref="member">unlock</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dump();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_noutput_items();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_max_noutput_items(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nmax);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="gr__runtime__types_8h_1ad0556d746d6d5d0b1cb19e971e4d76f2" kindref="member">gr_top_block_sptr</ref><sp/>to_top_block();<sp/></highlight><highlight class="comment">//<sp/>Needed<sp/>for<sp/>Python<sp/>type<sp/>coercion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="gr__top__block_8h_1ab327c5d11b89ec41b7cddd01ef74087e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="gr__runtime__types_8h_1ad0556d746d6d5d0b1cb19e971e4d76f2" kindref="member">gr_top_block_sptr</ref><sp/><ref refid="gr__top__block_8h_1ab327c5d11b89ec41b7cddd01ef74087e" kindref="member">cast_to_top_block_sptr</ref>(<ref refid="gr__runtime__types_8h_1a23ef33c86a39e7aefe87abcb2c7bede5" kindref="member">gr_basic_block_sptr</ref><sp/>block)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boost::dynamic_pointer_cast&lt;<ref refid="classgr__top__block" kindref="compound" tooltip="Top-level hierarchical block representing a flowgraph.">gr_top_block</ref>,<sp/><ref refid="classgr__basic__block" kindref="compound" tooltip="The abstract base class for all signal processing blocks.Basic blocks are the bare abstraction of an ...">gr_basic_block</ref>&gt;(block);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>INCLUDED_GR_TOP_BLOCK_H<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/alexzh/gr_alex/gnuradio/gnuradio-core/src/lib/runtime/gr_top_block.h"/>
  </compounddef>
</doxygen>

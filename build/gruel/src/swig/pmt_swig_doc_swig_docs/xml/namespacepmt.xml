<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="namespacepmt" kind="namespace">
    <compoundname>pmt</compoundname>
    <innerclass refid="classpmt_1_1pmt__exception" prot="public">pmt::pmt_exception</innerclass>
    <innerclass refid="classpmt_1_1pmt__wrong__type" prot="public">pmt::pmt_wrong_type</innerclass>
    <innerclass refid="classpmt_1_1pmt__out__of__range" prot="public">pmt::pmt_out_of_range</innerclass>
    <innerclass refid="classpmt_1_1pmt__notimplemented" prot="public">pmt::pmt_notimplemented</innerclass>
    <innerclass refid="classpmt_1_1pmt__pool" prot="public">pmt::pmt_pool</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" prot="public" static="no">
        <type>boost::intrusive_ptr&lt; pmt_base &gt;</type>
        <definition>typedef boost::intrusive_ptr&lt;pmt_base&gt; pmt::pmt_t</definition>
        <argsstring></argsstring>
        <name>pmt_t</name>
        <briefdescription>
<para>typedef for shared pointer (transparent reference counting). See <ulink url="http://www.boost.org/libs/smart_ptr/smart_ptr.htm">http://www.boost.org/libs/smart_ptr/smart_ptr.htm</ulink> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="59" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacepmt_1ad41a6c124e405727b4b5ea54247005ac" prot="public" static="no" mutable="no">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API const pmt_t pmt::PMT_T</definition>
        <argsstring></argsstring>
        <name>PMT_T</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="96"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepmt_1a92bfd358b0758d5edf5a0fac84ab806f" prot="public" static="no" mutable="no">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API const pmt_t pmt::PMT_F</definition>
        <argsstring></argsstring>
        <name>PMT_F</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="97"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepmt_1abacba9cd6ea4261fee4bfb67e7133dad" prot="public" static="no" mutable="no">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API const pmt_t pmt::PMT_NIL</definition>
        <argsstring></argsstring>
        <name>PMT_NIL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="237"/>
      </memberdef>
      <memberdef kind="variable" id="namespacepmt_1acdc63dbe8e2a53dfa065b58eba3f8ceb" prot="public" static="no" mutable="no">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API const pmt_t pmt::PMT_EOF</definition>
        <argsstring></argsstring>
        <name>PMT_EOF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="738"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacepmt_1a7ca9400508c9dc2bce2ada6322a046ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::intrusive_ptr_add_ref</definition>
        <argsstring>(pmt_base *)</argsstring>
        <name>intrusive_ptr_add_ref</name>
        <param>
          <type>pmt_base *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="61"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a98e02ab2d43bf54faf689433997be418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::intrusive_ptr_release</definition>
        <argsstring>(pmt_base *)</argsstring>
        <name>intrusive_ptr_release</name>
        <param>
          <type>pmt_base *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="62"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a92a9af8c6173fa835ce798120454ca3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_bool</definition>
        <argsstring>(pmt_t obj)</argsstring>
        <name>pmt_is_bool</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Return true if obj is #t or #f, else return false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="100"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa0de7ef2290e89b5bd8124282e04e283" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_true</definition>
        <argsstring>(pmt_t obj)</argsstring>
        <name>pmt_is_true</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Return false if obj is #f, else return true. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="103"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a1a4b8301ff2affe08c56bba767d2639a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_false</definition>
        <argsstring>(pmt_t obj)</argsstring>
        <name>pmt_is_false</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Return true if obj is #f, else return true. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="106"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a220a2c274afdf655f66d105b48a4986b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_from_bool</definition>
        <argsstring>(bool val)</argsstring>
        <name>pmt_from_bool</name>
        <param>
          <type>bool</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Return #f is val is false, else return #t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="109"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aaec724bae01050d64d27fb80eb29a009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_to_bool</definition>
        <argsstring>(pmt_t val)</argsstring>
        <name>pmt_to_bool</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Return true if val is PMT_T, return false when val is PMT_F,. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a9ae2fcfaefb907989660f09d342c7fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_symbol</definition>
        <argsstring>(const pmt_t &amp;obj)</argsstring>
        <name>pmt_is_symbol</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Return true if obj is a symbol, else false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="122"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a9175b04fc88cb7be663ee7b7925dfda6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_string_to_symbol</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>pmt_string_to_symbol</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Return the symbol whose name is <computeroutput>s</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a57a5ae8877c9b3b24636a07e0a3596e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_intern</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>pmt_intern</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Alias for pmt_string_to_symbol. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a736cbad10638be8857ab42e8958163e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const std::string</type>
        <definition>GRUEL_API const std::string pmt::pmt_symbol_to_string</definition>
        <argsstring>(const pmt_t &amp;sym)</argsstring>
        <name>pmt_symbol_to_string</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>sym</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>is</computeroutput> a symbol, return the name of the symbol as a string. Otherwise, raise the wrong_type exception. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="135"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a616845e65ea77d594240618fc3efff2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_number</definition>
        <argsstring>(pmt_t obj)</argsstring>
        <name>pmt_is_number</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Return true if obj is any kind of number, else false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="144"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ac7fc02a500f2f9d8e07a52418897d9e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_integer</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_integer</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>x</computeroutput> is an integer number, else false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="153"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ac4ac7825fbcc1accdc6a9ada084f5f96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_from_long</definition>
        <argsstring>(long x)</argsstring>
        <name>pmt_from_long</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return the pmt value that represents the integer <computeroutput>x</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="156"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1af7cbc1b15358aa1a816cd86e09e2290f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> long</type>
        <definition>GRUEL_API long pmt::pmt_to_long</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_to_long</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Convert pmt to long if possible. </para>        </briefdescription>
        <detaileddescription>
<para>When <computeroutput>x</computeroutput> represents an exact integer that fits in a long, return that integer. Else raise an exception, either wrong_type when x is not an exact integer, or out_of_range when it doesn&apos;t fit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="165"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a720ebd40bdf0421cb3d6fa529d019fc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_uint64</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_uint64</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>x</computeroutput> is an uint64 number, else false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="174"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ad23c52d29b752f449c03213abb8ec263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_from_uint64</definition>
        <argsstring>(uint64_t x)</argsstring>
        <name>pmt_from_uint64</name>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return the pmt value that represents the uint64 <computeroutput>x</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="177"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1af173bcf7561b2cb6863e835b510ee68f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> uint64_t</type>
        <definition>GRUEL_API uint64_t pmt::pmt_to_uint64</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_to_uint64</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Convert pmt to uint64 if possible. </para>        </briefdescription>
        <detaileddescription>
<para>When <computeroutput>x</computeroutput> represents an exact integer that fits in a uint64, return that uint64. Else raise an exception, either wrong_type when x is not an exact uint64, or out_of_range when it doesn&apos;t fit. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="186"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ab9c57465a4b077ddc442f03dbe15134b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_real</definition>
        <argsstring>(pmt_t obj)</argsstring>
        <name>pmt_is_real</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="197"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa4f8469d075bcccc81553ccb55408265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_from_double</definition>
        <argsstring>(double x)</argsstring>
        <name>pmt_from_double</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return the pmt value that represents double <computeroutput>x</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="200"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a936b17e4b5b737fe2483007570b463ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> double</type>
        <definition>GRUEL_API double pmt::pmt_to_double</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_to_double</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Convert pmt to double if possible. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the number closest to <computeroutput>val</computeroutput> that is representable as a double. The argument <computeroutput>val</computeroutput> must be a real or integer, otherwise a wrong_type exception is raised. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="209"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a3347587caac513a1ed660accf25035bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_complex</definition>
        <argsstring>(pmt_t obj)</argsstring>
        <name>pmt_is_complex</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>return true if <computeroutput>obj</computeroutput> is a complex number, false otherwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="220"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a16f57dcca0c41d06d196d9773a594216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_rectangular</definition>
        <argsstring>(double re, double im)</argsstring>
        <name>pmt_make_rectangular</name>
        <param>
          <type>double</type>
          <declname>re</declname>
        </param>
        <param>
          <type>double</type>
          <declname>im</declname>
        </param>
        <briefdescription>
<para>Return a complex number constructed of the given real and imaginary parts. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="223"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a72e558a42f5f73705150ade114188abb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> std::complex&lt; double &gt;</type>
        <definition>GRUEL_API std::complex&lt;double&gt; pmt::pmt_to_complex</definition>
        <argsstring>(pmt_t z)</argsstring>
        <name>pmt_to_complex</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>z</computeroutput> is complex, real or integer, return the closest complex&lt;double&gt;. Otherwise, raise the wrong_type exception. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="229"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1af9b153d2aae9621011d31e03ca50c0e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_null</definition>
        <argsstring>(const pmt_t &amp;x)</argsstring>
        <name>pmt_is_null</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>x</computeroutput> is the empty list, otherwise return false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="240"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a980b699b577a91f635985610bbaec234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_pair</definition>
        <argsstring>(const pmt_t &amp;obj)</argsstring>
        <name>pmt_is_pair</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>obj</computeroutput> is a pair, else false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="243"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1af049aaa257cc52e35a2ef8ed6a75b45b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_cons</definition>
        <argsstring>(const pmt_t &amp;x, const pmt_t &amp;y)</argsstring>
        <name>pmt_cons</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Return a newly allocated pair whose car is <computeroutput>x</computeroutput> and whose cdr is <computeroutput>y</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="246"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a4655d415ba202f88f7b1477eb2037f46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_car</definition>
        <argsstring>(const pmt_t &amp;pair)</argsstring>
        <name>pmt_car</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
<para>If <computeroutput>pair</computeroutput> is a pair, return the car of the <computeroutput>pair</computeroutput>, otherwise raise wrong_type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="249"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a386125587526af1bd94f359bdb60e09a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_cdr</definition>
        <argsstring>(const pmt_t &amp;pair)</argsstring>
        <name>pmt_cdr</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
<para>If <computeroutput>pair</computeroutput> is a pair, return the cdr of the <computeroutput>pair</computeroutput>, otherwise raise wrong_type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="252"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a99d30c6140de466c0bc5fb9e940bc5c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_set_car</definition>
        <argsstring>(pmt_t pair, pmt_t value)</argsstring>
        <name>pmt_set_car</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>pair</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Stores <computeroutput>value</computeroutput> in the car field of <computeroutput>pair</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="255"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a282853f5cd5477fab1717c04a544239d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_set_cdr</definition>
        <argsstring>(pmt_t pair, pmt_t value)</argsstring>
        <name>pmt_set_cdr</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>pair</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Stores <computeroutput>value</computeroutput> in the cdr field of <computeroutput>pair</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="258"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a9932a77ec27070a1b829d0c3c8132349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_caar</definition>
        <argsstring>(pmt_t pair)</argsstring>
        <name>pmt_caar</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="260"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ac9930f20227638d32112736bb0273aea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_cadr</definition>
        <argsstring>(pmt_t pair)</argsstring>
        <name>pmt_cadr</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="261"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a5f5fb0d63b7779195f25ee4163bb5584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_cdar</definition>
        <argsstring>(pmt_t pair)</argsstring>
        <name>pmt_cdar</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="262"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ac4f84d561070146183dd041d5a9c6f77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_cddr</definition>
        <argsstring>(pmt_t pair)</argsstring>
        <name>pmt_cddr</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="263"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a703a2eb191cb64d3c2f388fe26740fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_caddr</definition>
        <argsstring>(pmt_t pair)</argsstring>
        <name>pmt_caddr</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="264"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a33d780808e8647dc40b1e31dbd003d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_cadddr</definition>
        <argsstring>(pmt_t pair)</argsstring>
        <name>pmt_cadddr</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>pair</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="265"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aac80c007d245571c00789dec4f095025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_tuple</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_tuple</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>x</computeroutput> is a tuple, othewise false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="278"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a3b7024e45111b1f37b1b4ec700bb5d3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_tuple</definition>
        <argsstring>()</argsstring>
        <name>pmt_make_tuple</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="280"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a92f06feb7c1b430ad032681af274bfbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_tuple</definition>
        <argsstring>(const pmt_t &amp;e0)</argsstring>
        <name>pmt_make_tuple</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="281"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a5eb7c59848b8e2543ce5858da9245236" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_tuple</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1)</argsstring>
        <name>pmt_make_tuple</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="282"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1abf4343239e397656d8df8930886ca9d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_tuple</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2)</argsstring>
        <name>pmt_make_tuple</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="283"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1af259e8d09c70b45ccfa0496ca0cad6be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_tuple</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3)</argsstring>
        <name>pmt_make_tuple</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="284"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1af9a7ccd4acc7fea3006f92cb440145e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_tuple</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4)</argsstring>
        <name>pmt_make_tuple</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="285"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aaf7a4ad0f5f47e8717f1c97282bf9082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_tuple</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4, const pmt_t &amp;e5)</argsstring>
        <name>pmt_make_tuple</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="286"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ab5073acda532c6151fb1845fbb65f015" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_tuple</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4, const pmt_t &amp;e5, const pmt_t &amp;e6)</argsstring>
        <name>pmt_make_tuple</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e5</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="287"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a7828eced5a8d490f291ebb4f1356d901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_tuple</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4, const pmt_t &amp;e5, const pmt_t &amp;e6, const pmt_t &amp;e7)</argsstring>
        <name>pmt_make_tuple</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e5</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e6</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="288"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ab902ed17f33c97c3ad4581b49bcdb3ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_tuple</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4, const pmt_t &amp;e5, const pmt_t &amp;e6, const pmt_t &amp;e7, const pmt_t &amp;e8)</argsstring>
        <name>pmt_make_tuple</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e5</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e6</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e7</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="289"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1abe4b0f448f6098e031a0ad35b73aebac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_tuple</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4, const pmt_t &amp;e5, const pmt_t &amp;e6, const pmt_t &amp;e7, const pmt_t &amp;e8, const pmt_t &amp;e9)</argsstring>
        <name>pmt_make_tuple</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e5</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e6</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e7</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e8</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e9</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="290"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa48b0b932498da5f7861a80d8b996d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_to_tuple</definition>
        <argsstring>(const pmt_t &amp;x)</argsstring>
        <name>pmt_to_tuple</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>x</computeroutput> is a vector or proper list, return a tuple containing the elements of x </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="295"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a6122da1af9ccf8fe83f44a694365f4e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_tuple_ref</definition>
        <argsstring>(const pmt_t &amp;tuple, size_t k)</argsstring>
        <name>pmt_tuple_ref</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>tuple</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the contents of position <computeroutput>k</computeroutput> of <computeroutput>tuple</computeroutput>. <computeroutput>k</computeroutput> must be a valid index of <computeroutput>tuple</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="301"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a7ea3ca32dd1c7465e0cc1de892ab438a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>x</computeroutput> is a vector, othewise false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="312"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a02649eb318d73294857a9baa5b9f159d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_vector</definition>
        <argsstring>(size_t k, pmt_t fill)</argsstring>
        <name>pmt_make_vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>fill</declname>
        </param>
        <briefdescription>
<para>Make a vector of length <computeroutput>k</computeroutput>, with initial values set to <computeroutput>fill</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="315"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a5bdfa6646be0adb56530c3ad17ed968d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_vector_ref</definition>
        <argsstring>(pmt_t vector, size_t k)</argsstring>
        <name>pmt_vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the contents of position <computeroutput>k</computeroutput> of <computeroutput>vector</computeroutput>. <computeroutput>k</computeroutput> must be a valid index of <computeroutput>vector</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="321"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aff40b940757218048e17b3a295360980" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_vector_set</definition>
        <argsstring>(pmt_t vector, size_t k, pmt_t obj)</argsstring>
        <name>pmt_vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Store <computeroutput>obj</computeroutput> in position <computeroutput>k</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="324"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a4789afe684c5bcb16a4140bdda7ab932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_vector_fill</definition>
        <argsstring>(pmt_t vector, pmt_t fill)</argsstring>
        <name>pmt_vector_fill</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>vector</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>fill</declname>
        </param>
        <briefdescription>
<para>Store <computeroutput>fill</computeroutput> in every position of <computeroutput>vector</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="327"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a2d624317749c54ebc164c125487b0b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_blob</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_blob</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>x</computeroutput> is a blob, othewise false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="338"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a1ad6236cd115201a388ffe3a2bf45ff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_blob</definition>
        <argsstring>(const void *buf, size_t len)</argsstring>
        <name>pmt_make_blob</name>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Make a blob given a pointer and length in bytes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>is the pointer to data to use to create blob </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>is the size of the data in bytes.</para></parameterdescription>
</parameteritem>
</parameterlist>
The data is copied into the blob. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="348"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a658f178fde294cf9d00bd42a30924b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const void *</type>
        <definition>GRUEL_API const void* pmt::pmt_blob_data</definition>
        <argsstring>(pmt_t blob)</argsstring>
        <name>pmt_blob_data</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>blob</declname>
        </param>
        <briefdescription>
<para>Return a pointer to the blob&apos;s data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="351"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ad8e58a3de2f0f06bb03a40984e059a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> size_t</type>
        <definition>GRUEL_API size_t pmt::pmt_blob_length</definition>
        <argsstring>(pmt_t blob)</argsstring>
        <name>pmt_blob_length</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>blob</declname>
        </param>
        <briefdescription>
<para>Return the blob&apos;s length in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="354"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1abe4c461b9c01bdc155a54c941dda1a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_uniform_vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_uniform_vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>true if <computeroutput>x</computeroutput> is any kind of uniform numeric vector </para>        </briefdescription>
        <detaileddescription>
<para><preformatted>
 ------------------------------------------------------------------------
		       Uniform Numeric Vectors</preformatted></para><para><preformatted> A uniform numeric vector is a vector whose elements are all of single
 numeric type.  pmt offers uniform numeric vectors for signed and
 unsigned 8-bit, 16-bit, 32-bit, and 64-bit integers, two sizes of
 floating point values, and complex floating-point numbers of these
 two sizes.  Indexing is zero based.</preformatted></para><para><preformatted> The names of the functions include these tags in their names:</preformatted></para><para><preformatted>    u8  unsigned 8-bit integers
    s8  signed 8-bit integers
   u16  unsigned 16-bit integers
   s16  signed 16-bit integers
   u32  unsigned 32-bit integers
   s32  signed 32-bit integers
   u64  unsigned 64-bit integers
   s64  signed 64-bit integers
   f32  the C++ type float
   f64  the C++ type double
   c32  the C++ type complex&lt;float&gt;
   c64  the C++ type complex&lt;double&gt;
 ------------------------------------------------------------------------
 </preformatted> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="386"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ae20b79d8e1d189978142946ef4e0d07e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_u8vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_u8vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="388"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a1550d3aca7b789b2ebd2375d620775a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_s8vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_s8vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="389"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a1357b6b396563ca1aee6095756611bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_u16vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_u16vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="390"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a081c6e0023f49f902293018371bea69e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_s16vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_s16vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="391"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a604a5e2e2a3a3b881a4e504cee592db4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_u32vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_u32vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="392"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a6ffb793f662b10fb9576b2c5576cf334" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_s32vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_s32vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="393"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ae4d87b20ba2a3a9d6db6437d183be986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_u64vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_u64vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="394"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a74f6bd5b31bee4086e60ed28951e9f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_s64vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_s64vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="395"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a8600c0cc1b2b486aed9fe171345dc1eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_f32vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_f32vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="396"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a005d0901b3b7d8d170d8e70428fa3685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_f64vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_f64vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="397"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a6b1740bc274ac4296b83318c313d5596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_c32vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_c32vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="398"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1adf7de0af37c4bd2cf627f3bac8b1d9cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_c64vector</definition>
        <argsstring>(pmt_t x)</argsstring>
        <name>pmt_is_c64vector</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="399"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a0ed4087e2d552220099bc47c8dcc7da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_u8vector</definition>
        <argsstring>(size_t k, uint8_t fill)</argsstring>
        <name>pmt_make_u8vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="401"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aecdc41ac8b003a5ddec87398eb3c9a25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_s8vector</definition>
        <argsstring>(size_t k, int8_t fill)</argsstring>
        <name>pmt_make_s8vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="402"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a92152768355ad9287037aafd317de5ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_u16vector</definition>
        <argsstring>(size_t k, uint16_t fill)</argsstring>
        <name>pmt_make_u16vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="403"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a0f9ef340402f04b86af6504c9eb4b3b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_s16vector</definition>
        <argsstring>(size_t k, int16_t fill)</argsstring>
        <name>pmt_make_s16vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="404"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a4f49370774dd39edb85216841bc3139c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_u32vector</definition>
        <argsstring>(size_t k, uint32_t fill)</argsstring>
        <name>pmt_make_u32vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="405"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ae7d3c62728a50c8a4f76db56aa54f5ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_s32vector</definition>
        <argsstring>(size_t k, int32_t fill)</argsstring>
        <name>pmt_make_s32vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="406"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa2fc5c3f476d8e0faad7ed045c76eefc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_u64vector</definition>
        <argsstring>(size_t k, uint64_t fill)</argsstring>
        <name>pmt_make_u64vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="407"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1adc9b4134cc41bd54db3f31e762fcc34f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_s64vector</definition>
        <argsstring>(size_t k, int64_t fill)</argsstring>
        <name>pmt_make_s64vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="408"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a9646c961e52e6e0b189a767b4f187a7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_f32vector</definition>
        <argsstring>(size_t k, float fill)</argsstring>
        <name>pmt_make_f32vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>float</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="409"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a54f194d45b7f04045bac2ccd463ff9ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_f64vector</definition>
        <argsstring>(size_t k, double fill)</argsstring>
        <name>pmt_make_f64vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="410"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa7f431c860783da77bf3f92cdc544ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_c32vector</definition>
        <argsstring>(size_t k, std::complex&lt; float &gt; fill)</argsstring>
        <name>pmt_make_c32vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>std::complex&lt; float &gt;</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="411"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a8b3b32efb609777e00d9ab12c7adbd5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_c64vector</definition>
        <argsstring>(size_t k, std::complex&lt; double &gt; fill)</argsstring>
        <name>pmt_make_c64vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>fill</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="412"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ac2b133de1f952021772213c72afb4c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_u8vector</definition>
        <argsstring>(size_t k, const uint8_t *data)</argsstring>
        <name>pmt_init_u8vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="414"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa633f99d0ec620f2c4e918a57049a55b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_s8vector</definition>
        <argsstring>(size_t k, const int8_t *data)</argsstring>
        <name>pmt_init_s8vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const int8_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="415"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a615785b165cc144c29c64fabffedcc23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_u16vector</definition>
        <argsstring>(size_t k, const uint16_t *data)</argsstring>
        <name>pmt_init_u16vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const uint16_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="416"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a069881b7c34a7830550794275b72a5f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_s16vector</definition>
        <argsstring>(size_t k, const int16_t *data)</argsstring>
        <name>pmt_init_s16vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const int16_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="417"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a44c675223e48031ec4a7e1845f0486a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_u32vector</definition>
        <argsstring>(size_t k, const uint32_t *data)</argsstring>
        <name>pmt_init_u32vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const uint32_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="418"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a12be2cf40d2392cff899a51b910a0a8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_s32vector</definition>
        <argsstring>(size_t k, const int32_t *data)</argsstring>
        <name>pmt_init_s32vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const int32_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="419"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a58d4d143aecf38d5300419cec329cd17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_u64vector</definition>
        <argsstring>(size_t k, const uint64_t *data)</argsstring>
        <name>pmt_init_u64vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const uint64_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="420"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a753559601a857fbf02b0eeffcaffc9a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_s64vector</definition>
        <argsstring>(size_t k, const int64_t *data)</argsstring>
        <name>pmt_init_s64vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const int64_t *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="421"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a0059adbddf90601378cb4ffc407d7719" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_f32vector</definition>
        <argsstring>(size_t k, const float *data)</argsstring>
        <name>pmt_init_f32vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="422"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a633a0cbfa644de7a8cb7217dce79ad75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_f64vector</definition>
        <argsstring>(size_t k, const double *data)</argsstring>
        <name>pmt_init_f64vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="423"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a2fff0237fbd4452a8baf98affe9415e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_c32vector</definition>
        <argsstring>(size_t k, const std::complex&lt; float &gt; *data)</argsstring>
        <name>pmt_init_c32vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const std::complex&lt; float &gt; *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="424"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ac36714d0991432b56d0ab9c897198de2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_init_c64vector</definition>
        <argsstring>(size_t k, const std::complex&lt; double &gt; *data)</argsstring>
        <name>pmt_init_c64vector</name>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const std::complex&lt; double &gt; *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="425"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a90bde54398733a0d7077d8345899f510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> uint8_t</type>
        <definition>GRUEL_API uint8_t pmt::pmt_u8vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_u8vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="427"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a7e59234e93bdf7c8a98616dd1965eb3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> int8_t</type>
        <definition>GRUEL_API int8_t pmt::pmt_s8vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_s8vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="428"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1af67006d8eb60694b80177b4ec0c77b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> uint16_t</type>
        <definition>GRUEL_API uint16_t pmt::pmt_u16vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_u16vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="429"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a7b58ae391e25f744c53ed740aa9424fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> int16_t</type>
        <definition>GRUEL_API int16_t pmt::pmt_s16vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_s16vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="430"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a5b97e3eb70fd4693a0e32fa8d46fbda2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> uint32_t</type>
        <definition>GRUEL_API uint32_t pmt::pmt_u32vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_u32vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="431"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a209cf240a9e613126e17174e7c97d3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> int32_t</type>
        <definition>GRUEL_API int32_t pmt::pmt_s32vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_s32vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="432"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a9415eb2c6d0ce74f6adf5efd31d20dd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> uint64_t</type>
        <definition>GRUEL_API uint64_t pmt::pmt_u64vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_u64vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="433"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a1bd403ef1712ca6a9634dc951226e100" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> int64_t</type>
        <definition>GRUEL_API int64_t pmt::pmt_s64vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_s64vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="434"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a14c29e839a8beab8ab539424f697f22b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> float</type>
        <definition>GRUEL_API float pmt::pmt_f32vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_f32vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="435"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a35ca3d96ba1142515beb65da2e46653d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> double</type>
        <definition>GRUEL_API double pmt::pmt_f64vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_f64vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="436"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a1f662b1e8765d02f68ab877732c7fbe7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> std::complex&lt; float &gt;</type>
        <definition>GRUEL_API std::complex&lt;float&gt; pmt::pmt_c32vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_c32vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="437"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1afc8bc9909aef8d18971eda7a92d72490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> std::complex&lt; double &gt;</type>
        <definition>GRUEL_API std::complex&lt;double&gt; pmt::pmt_c64vector_ref</definition>
        <argsstring>(pmt_t v, size_t k)</argsstring>
        <name>pmt_c64vector_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="438"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1abbd1af5de40510c34a36312b2c9baef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_u8vector_set</definition>
        <argsstring>(pmt_t v, size_t k, uint8_t x)</argsstring>
        <name>pmt_u8vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="440"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a9382300d3201ec44c9947b75e858b17c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_s8vector_set</definition>
        <argsstring>(pmt_t v, size_t k, int8_t x)</argsstring>
        <name>pmt_s8vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int8_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="441"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1adcbcfa28b73f37e567e9b58b7c997b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_u16vector_set</definition>
        <argsstring>(pmt_t v, size_t k, uint16_t x)</argsstring>
        <name>pmt_u16vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="442"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a11f9cbdd233b9e7373dea2a173031a35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_s16vector_set</definition>
        <argsstring>(pmt_t v, size_t k, int16_t x)</argsstring>
        <name>pmt_s16vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="443"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ab412c9772dfefae5254f93c25a898b79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_u32vector_set</definition>
        <argsstring>(pmt_t v, size_t k, uint32_t x)</argsstring>
        <name>pmt_u32vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="444"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a5b2807af0321674315b0c0315f17f375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_s32vector_set</definition>
        <argsstring>(pmt_t v, size_t k, int32_t x)</argsstring>
        <name>pmt_s32vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="445"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a8f817fd7dcb1190bd78c9263d3c82770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_u64vector_set</definition>
        <argsstring>(pmt_t v, size_t k, uint64_t x)</argsstring>
        <name>pmt_u64vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="446"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a33e81f7aa8e0e56115b00a99004993c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_s64vector_set</definition>
        <argsstring>(pmt_t v, size_t k, int64_t x)</argsstring>
        <name>pmt_s64vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="447"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a313a10c7596a4ffc61c16dab89111b13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_f32vector_set</definition>
        <argsstring>(pmt_t v, size_t k, float x)</argsstring>
        <name>pmt_f32vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="448"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ab14d232eff869e629a90a9f714508663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_f64vector_set</definition>
        <argsstring>(pmt_t v, size_t k, double x)</argsstring>
        <name>pmt_f64vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="449"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a82c27ca537aafe2a8f46398b0bf83354" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_c32vector_set</definition>
        <argsstring>(pmt_t v, size_t k, std::complex&lt; float &gt; x)</argsstring>
        <name>pmt_c32vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>std::complex&lt; float &gt;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="450"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a156c09900c7070c40d0997f30f65952b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_c64vector_set</definition>
        <argsstring>(pmt_t v, size_t k, std::complex&lt; double &gt; x)</argsstring>
        <name>pmt_c64vector_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="451"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a48cdc068247f508fb29620e88517d4fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const void *</type>
        <definition>GRUEL_API const void* pmt::pmt_uniform_vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_uniform_vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="455"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a7b8d0d77c5ac3de534056924aae60656" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const uint8_t *</type>
        <definition>GRUEL_API const uint8_t* pmt::pmt_u8vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_u8vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="457"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a7e99d569068808c1d46d85713815bf45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const int8_t *</type>
        <definition>GRUEL_API const int8_t* pmt::pmt_s8vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_s8vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="458"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a5731d3143bde1f3aa885d9237110424e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const uint16_t *</type>
        <definition>GRUEL_API const uint16_t* pmt::pmt_u16vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_u16vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="459"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a56212892b67898c812abd5061c470159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const int16_t *</type>
        <definition>GRUEL_API const int16_t* pmt::pmt_s16vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_s16vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="460"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a11031fcd081f8372d1af14459e5a80d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const uint32_t *</type>
        <definition>GRUEL_API const uint32_t* pmt::pmt_u32vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_u32vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="461"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa680f23eb75f39da531f68d1cce9e5e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const int32_t *</type>
        <definition>GRUEL_API const int32_t* pmt::pmt_s32vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_s32vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="462"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1acf5b1dc260e2a922cf5aa2f6a5364ce1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const uint64_t *</type>
        <definition>GRUEL_API const uint64_t* pmt::pmt_u64vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_u64vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="463"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ade19040c3564d682304d9a20a078c78b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const int64_t *</type>
        <definition>GRUEL_API const int64_t* pmt::pmt_s64vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_s64vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="464"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ae6f02485e5c6452faee3f8bba45725c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const float *</type>
        <definition>GRUEL_API const float* pmt::pmt_f32vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_f32vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="465"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a31240cf1ca827a8febd4a031b69a0612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const double *</type>
        <definition>GRUEL_API const double* pmt::pmt_f64vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_f64vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="466"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1abf0c63e50b0ca1eab95c4b13cd6edffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const std::complex&lt; float &gt; *</type>
        <definition>GRUEL_API const std::complex&lt;float&gt;* pmt::pmt_c32vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_c32vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="467"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a466bf2b78503036409edab5a256e3754" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> const std::complex&lt; double &gt; *</type>
        <definition>GRUEL_API const std::complex&lt;double&gt;* pmt::pmt_c64vector_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_c64vector_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="468"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1af8e8944bdad4f27c998332abd3da4150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void *</type>
        <definition>GRUEL_API void* pmt::pmt_uniform_vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_uniform_vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="472"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1af6cc10a04c4ceae4d2a50aba01f27b3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> uint8_t *</type>
        <definition>GRUEL_API uint8_t* pmt::pmt_u8vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_u8vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="474"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ac1dd142a455f1fa34990fa77d0444c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> int8_t *</type>
        <definition>GRUEL_API int8_t* pmt::pmt_s8vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_s8vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="475"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a9048cf5a0d19319c5971fc8347809a29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> uint16_t *</type>
        <definition>GRUEL_API uint16_t* pmt::pmt_u16vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_u16vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="476"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a3f2c3e15a883feabc6003e382a29eeb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> int16_t *</type>
        <definition>GRUEL_API int16_t* pmt::pmt_s16vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_s16vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="477"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1acdf2c4184d99dd08d39ad6b78930f9c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> uint32_t *</type>
        <definition>GRUEL_API uint32_t* pmt::pmt_u32vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_u32vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="478"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a63fddde91f33f06037c3963086a0de49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> int32_t *</type>
        <definition>GRUEL_API int32_t* pmt::pmt_s32vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_s32vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="479"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a6ab85af921a0e61445a17081bc2463fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> uint64_t *</type>
        <definition>GRUEL_API uint64_t* pmt::pmt_u64vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_u64vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="480"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a038fe0af497789d238df2bd2e3e1ea2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> int64_t *</type>
        <definition>GRUEL_API int64_t* pmt::pmt_s64vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_s64vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="481"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1afc7f8d6306a3ca55a642576076ea3c69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> float *</type>
        <definition>GRUEL_API float* pmt::pmt_f32vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_f32vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="482"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ae067d2787f8936f57e620aa76bc22cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> double *</type>
        <definition>GRUEL_API double* pmt::pmt_f64vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_f64vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="483"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a92cb1dc2066d997aae730d7aac5c4d0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> std::complex&lt; float &gt; *</type>
        <definition>GRUEL_API std::complex&lt;float&gt;* pmt::pmt_c32vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_c32vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="484"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a8c13f364b64715d9822a6a35b54956ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> std::complex&lt; double &gt; *</type>
        <definition>GRUEL_API std::complex&lt;double&gt;* pmt::pmt_c64vector_writable_elements</definition>
        <argsstring>(pmt_t v, size_t &amp;len)</argsstring>
        <name>pmt_c64vector_writable_elements</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>size_t &amp;</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="485"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a4c92d060166321056f00ec5cb4690f56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_dict</definition>
        <argsstring>(const pmt_t &amp;obj)</argsstring>
        <name>pmt_is_dict</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>obj</computeroutput> is a dictionary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="498"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a1b693d7111cf0ed21c62d546f9f0a4c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_dict</definition>
        <argsstring>()</argsstring>
        <name>pmt_make_dict</name>
        <briefdescription>
<para>Make an empty dictionary. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="501"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aebcc6302548a69c3d0653a8abdd42999" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_dict_add</definition>
        <argsstring>(const pmt_t &amp;dict, const pmt_t &amp;key, const pmt_t &amp;value)</argsstring>
        <name>pmt_dict_add</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Return a new dictionary with <computeroutput>key</computeroutput> associated with <computeroutput>value</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="504"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a82d0974c3d1367b5c78f84801be21807" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_dict_delete</definition>
        <argsstring>(const pmt_t &amp;dict, const pmt_t &amp;key)</argsstring>
        <name>pmt_dict_delete</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Return a new dictionary with <computeroutput>key</computeroutput> removed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="507"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a12454dc2ceb8c1a167569dfd931677ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_dict_has_key</definition>
        <argsstring>(const pmt_t &amp;dict, const pmt_t &amp;key)</argsstring>
        <name>pmt_dict_has_key</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>key</computeroutput> exists in <computeroutput>dict</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="510"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1addba630f2fea5c254e38661abfa8e728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_dict_ref</definition>
        <argsstring>(const pmt_t &amp;dict, const pmt_t &amp;key, const pmt_t &amp;not_found)</argsstring>
        <name>pmt_dict_ref</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>dict</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>not_found</declname>
        </param>
        <briefdescription>
<para>If <computeroutput>key</computeroutput> exists in <computeroutput>dict</computeroutput>, return associated value; otherwise return <computeroutput>not_found</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="513"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a087e46b0b1ae652b30f507c642e40665" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_dict_items</definition>
        <argsstring>(pmt_t dict)</argsstring>
        <name>pmt_dict_items</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>dict</declname>
        </param>
        <briefdescription>
<para>Return list of (key . value) pairs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="516"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a7a6fb3c0f11694c8a9d649d2b3110d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_dict_keys</definition>
        <argsstring>(pmt_t dict)</argsstring>
        <name>pmt_dict_keys</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>dict</declname>
        </param>
        <briefdescription>
<para>Return list of keys. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="519"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a7904943c96b954cc3b55423b98d69c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_dict_values</definition>
        <argsstring>(pmt_t dict)</argsstring>
        <name>pmt_dict_values</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>dict</declname>
        </param>
        <briefdescription>
<para>Return list of values. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="522"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a53e88a56f8e8f67d3fa532f90a87aa12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_any</definition>
        <argsstring>(pmt_t obj)</argsstring>
        <name>pmt_is_any</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>obj</computeroutput> is an any. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="534"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a4011422f166ce53a5ec1fab08022912b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_any</definition>
        <argsstring>(const boost::any &amp;any)</argsstring>
        <name>pmt_make_any</name>
        <param>
          <type>const boost::any &amp;</type>
          <declname>any</declname>
        </param>
        <briefdescription>
<para>make an any </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="537"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ae3b88f89b7a5714e9495694cb78142f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> boost::any</type>
        <definition>GRUEL_API boost::any pmt::pmt_any_ref</definition>
        <argsstring>(pmt_t obj)</argsstring>
        <name>pmt_any_ref</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Return underlying boost::any. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="540"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a7575287c13591a699c57fd73a6014a26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_any_set</definition>
        <argsstring>(pmt_t obj, const boost::any &amp;any)</argsstring>
        <name>pmt_any_set</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type>const boost::any &amp;</type>
          <declname>any</declname>
        </param>
        <briefdescription>
<para>Store <computeroutput>any</computeroutput> in <computeroutput>obj</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="543"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a830574292e33350ba8eda2c180fbe4c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_msg_accepter</definition>
        <argsstring>(const pmt_t &amp;obj)</argsstring>
        <name>pmt_is_msg_accepter</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Return true if <computeroutput>obj</computeroutput> is a msg_accepter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="552"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1acbbdd8d6d157f6e8ac245622c0a91b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_make_msg_accepter</definition>
        <argsstring>(boost::shared_ptr&lt; gruel::msg_accepter &gt; ma)</argsstring>
        <name>pmt_make_msg_accepter</name>
        <param>
          <type>boost::shared_ptr&lt; <ref refid="classgruel_1_1msg__accepter" kindref="compound">gruel::msg_accepter</ref> &gt;</type>
          <declname>ma</declname>
        </param>
        <briefdescription>
<para>make a msg_accepter </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="555"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ace122e1b2c1cc95cddf393761772b306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> boost::shared_ptr&lt; <ref refid="classgruel_1_1msg__accepter" kindref="compound">gruel::msg_accepter</ref> &gt;</type>
        <definition>GRUEL_API boost::shared_ptr&lt;gruel::msg_accepter&gt; pmt::pmt_msg_accepter_ref</definition>
        <argsstring>(const pmt_t &amp;obj)</argsstring>
        <name>pmt_msg_accepter_ref</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Return underlying msg_accepter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="558"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a333a5ba7eb3c3d896c2f642c093a0110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_eq</definition>
        <argsstring>(const pmt_t &amp;x, const pmt_t &amp;y)</argsstring>
        <name>pmt_eq</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Return true if x and y are the same object; otherwise return false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="567"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a5d51db697ef5ce7a27305e78e43be95e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_eqv</definition>
        <argsstring>(const pmt_t &amp;x, const pmt_t &amp;y)</argsstring>
        <name>pmt_eqv</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Return true if x and y should normally be regarded as the same object, else false. </para>        </briefdescription>
        <detaileddescription>
<para><preformatted>
 eqv returns true if:
   x and y are the same object.
   x and y are both #t or both #f.
   x and y are both symbols and their names are the same.
   x and y are both numbers, and are numerically equal.
   x and y are both the empty list (nil).
   x and y are pairs or vectors that denote same location in store.
 </preformatted> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="582"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a65215a60439e06781a250c16f6266f89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_equal</definition>
        <argsstring>(const pmt_t &amp;x, const pmt_t &amp;y)</argsstring>
        <name>pmt_equal</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pmt_equal recursively compares the contents of pairs and vectors, applying pmt_eqv on other objects such as numbers and symbols. pmt_equal may fail to terminate if its arguments are circular data structures. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="590"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a76684f2c30f1f0134f526dababa3aa89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> size_t</type>
        <definition>GRUEL_API size_t pmt::pmt_length</definition>
        <argsstring>(const pmt_t &amp;v)</argsstring>
        <name>pmt_length</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Return the number of elements in v. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="594"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a6b3881b0ad0e35682776e1882aab7797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_assq</definition>
        <argsstring>(pmt_t obj, pmt_t alist)</argsstring>
        <name>pmt_assq</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>alist</declname>
        </param>
        <briefdescription>
<para>Find the first pair in <computeroutput>alist</computeroutput> whose car field is <computeroutput>obj</computeroutput> and return that pair. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>alist</computeroutput> (for &quot;association list&quot;) must be a list of pairs. If no pair in <computeroutput>alist</computeroutput> has <computeroutput>obj</computeroutput> as its car then #f is returned. Uses pmt_eq to compare <computeroutput>obj</computeroutput> with car fields of the pairs in <computeroutput>alist</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="604"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a76cb5037e87ed1059e9cd368e0f070be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_assv</definition>
        <argsstring>(pmt_t obj, pmt_t alist)</argsstring>
        <name>pmt_assv</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>alist</declname>
        </param>
        <briefdescription>
<para>Find the first pair in <computeroutput>alist</computeroutput> whose car field is <computeroutput>obj</computeroutput> and return that pair. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>alist</computeroutput> (for &quot;association list&quot;) must be a list of pairs. If no pair in <computeroutput>alist</computeroutput> has <computeroutput>obj</computeroutput> as its car then #f is returned. Uses pmt_eqv to compare <computeroutput>obj</computeroutput> with car fields of the pairs in <computeroutput>alist</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="614"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a1b46e28dadff1dbefc33854e0174b8fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_assoc</definition>
        <argsstring>(pmt_t obj, pmt_t alist)</argsstring>
        <name>pmt_assoc</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>alist</declname>
        </param>
        <briefdescription>
<para>Find the first pair in <computeroutput>alist</computeroutput> whose car field is <computeroutput>obj</computeroutput> and return that pair. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>alist</computeroutput> (for &quot;association list&quot;) must be a list of pairs. If no pair in <computeroutput>alist</computeroutput> has <computeroutput>obj</computeroutput> as its car then #f is returned. Uses pmt_equal to compare <computeroutput>obj</computeroutput> with car fields of the pairs in <computeroutput>alist</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="624"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1adedfc1a4b0831f372eac7251ac1ee1cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_map</definition>
        <argsstring>(pmt_t proc(const pmt_t &amp;), pmt_t list)</argsstring>
        <name>pmt_map</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> </type>
          <declname>proc</declname>
          <array>const pmt_t &amp;</array>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Apply <computeroutput>proc</computeroutput> element-wise to the elements of list and returns a list of the results, in order. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>list</computeroutput> must be a list. The dynamic order in which <computeroutput>proc</computeroutput> is applied to the elements of <computeroutput>list</computeroutput> is unspecified. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="633"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ae03131ca39632be27b6485db29da2393" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_reverse</definition>
        <argsstring>(pmt_t list)</argsstring>
        <name>pmt_reverse</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>reverse <computeroutput>list</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>list</computeroutput> must be a proper list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="640"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a779830f02252a1ac917885bf8bd47fb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_reverse_x</definition>
        <argsstring>(pmt_t list)</argsstring>
        <name>pmt_reverse_x</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>destructively reverse <computeroutput>list</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para><computeroutput>list</computeroutput> must be a proper list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="647"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a8ed0d7c87edda8cb8879c990831fd293" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::pmt_acons</definition>
        <argsstring>(pmt_t x, pmt_t y, pmt_t a)</argsstring>
        <name>pmt_acons</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>(acons x y a) == (cons (cons x y) a) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="654" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" bodystart="653" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a56e3ea8cf68ee7e413e9ee6ad9d54420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_nth</definition>
        <argsstring>(size_t n, pmt_t list)</argsstring>
        <name>pmt_nth</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>locates <computeroutput>nth</computeroutput> element of <linebreak/>
 list where the car is the &apos;zeroth&apos; element. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="661"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a1afb7fba6d2a43a19f7e10c8ab0c75e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_nthcdr</definition>
        <argsstring>(size_t n, pmt_t list)</argsstring>
        <name>pmt_nthcdr</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>returns the tail of <computeroutput>list</computeroutput> that would be obtained by calling cdr <computeroutput>n</computeroutput> times in succession. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="667"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a5390ffee054496a5ad83600ea274ad24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_memq</definition>
        <argsstring>(pmt_t obj, pmt_t list)</argsstring>
        <name>pmt_memq</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Return the first sublist of <computeroutput>list</computeroutput> whose car is <computeroutput>obj</computeroutput>. If <computeroutput>obj</computeroutput> does not occur in <computeroutput>list</computeroutput>, then #f is returned. pmt_memq use pmt_eq to compare <computeroutput>obj</computeroutput> with the elements of <computeroutput>list</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="674"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a1473c4e093f0581315197188c723486d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_memv</definition>
        <argsstring>(pmt_t obj, pmt_t list)</argsstring>
        <name>pmt_memv</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Return the first sublist of <computeroutput>list</computeroutput> whose car is <computeroutput>obj</computeroutput>. If <computeroutput>obj</computeroutput> does not occur in <computeroutput>list</computeroutput>, then #f is returned. pmt_memv use pmt_eqv to compare <computeroutput>obj</computeroutput> with the elements of <computeroutput>list</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="681"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa1e2e87acf3be89fec3c3d3d4a7fe2ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_member</definition>
        <argsstring>(pmt_t obj, pmt_t list)</argsstring>
        <name>pmt_member</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
<para>Return the first sublist of <computeroutput>list</computeroutput> whose car is <computeroutput>obj</computeroutput>. If <computeroutput>obj</computeroutput> does not occur in <computeroutput>list</computeroutput>, then #f is returned. pmt_member use pmt_equal to compare <computeroutput>obj</computeroutput> with the elements of <computeroutput>list</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="688"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a86419a2daec50e5597cb7ce6c28db6f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_subsetp</definition>
        <argsstring>(pmt_t list1, pmt_t list2)</argsstring>
        <name>pmt_subsetp</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>list1</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>list2</declname>
        </param>
        <briefdescription>
<para>Return true if every element of <computeroutput>list1</computeroutput> appears in <computeroutput>list2</computeroutput>, and false otherwise. Comparisons are done with pmt_eqv. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="694"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a676fbe22b8cfd18fb62305023eb153a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_list1</definition>
        <argsstring>(const pmt_t &amp;x1)</argsstring>
        <name>pmt_list1</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x1</declname>
        </param>
        <briefdescription>
<para>Return a list of length 1 containing <computeroutput>x1</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="699"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1adf2db75f11a2af407c8f22c8e141e668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_list2</definition>
        <argsstring>(const pmt_t &amp;x1, const pmt_t &amp;x2)</argsstring>
        <name>pmt_list2</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x2</declname>
        </param>
        <briefdescription>
<para>Return a list of length 2 containing <computeroutput>x1</computeroutput>, <computeroutput>x2</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="704"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a6ca2161f588b1fd1d453d8f1589c1d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_list3</definition>
        <argsstring>(const pmt_t &amp;x1, const pmt_t &amp;x2, const pmt_t &amp;x3)</argsstring>
        <name>pmt_list3</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x3</declname>
        </param>
        <briefdescription>
<para>Return a list of length 3 containing <computeroutput>x1</computeroutput>, <computeroutput>x2</computeroutput>, <computeroutput>x3</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="709"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a7ab7f2be52ec8aa72f6391d598700f7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_list4</definition>
        <argsstring>(const pmt_t &amp;x1, const pmt_t &amp;x2, const pmt_t &amp;x3, const pmt_t &amp;x4)</argsstring>
        <name>pmt_list4</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x4</declname>
        </param>
        <briefdescription>
<para>Return a list of length 4 containing <computeroutput>x1</computeroutput>, <computeroutput>x2</computeroutput>, <computeroutput>x3</computeroutput>, <computeroutput>x4</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="714"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ab416c50be05e8bff098a4e6486a31a9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_list5</definition>
        <argsstring>(const pmt_t &amp;x1, const pmt_t &amp;x2, const pmt_t &amp;x3, const pmt_t &amp;x4, const pmt_t &amp;x5)</argsstring>
        <name>pmt_list5</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x5</declname>
        </param>
        <briefdescription>
<para>Return a list of length 5 containing <computeroutput>x1</computeroutput>, <computeroutput>x2</computeroutput>, <computeroutput>x3</computeroutput>, <computeroutput>x4</computeroutput>, <computeroutput>x5</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="719"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a5a6ce26b214adcdd4358f2da937a4cd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_list6</definition>
        <argsstring>(const pmt_t &amp;x1, const pmt_t &amp;x2, const pmt_t &amp;x3, const pmt_t &amp;x4, const pmt_t &amp;x5, const pmt_t &amp;x6)</argsstring>
        <name>pmt_list6</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x5</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>x6</declname>
        </param>
        <briefdescription>
<para>Return a list of length 6 containing <computeroutput>x1</computeroutput>, <computeroutput>x2</computeroutput>, <computeroutput>x3</computeroutput>, <computeroutput>x4</computeroutput>, <computeroutput>x5</computeroutput>, <computeroutput>x6</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="725"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ac5510b07208bc3d3705aac0cacab5d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_list_add</definition>
        <argsstring>(pmt_t list, const pmt_t &amp;item)</argsstring>
        <name>pmt_list_add</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>list</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>item</declname>
        </param>
        <briefdescription>
<para>Return <computeroutput>list</computeroutput> with <computeroutput>item</computeroutput> added to it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="730"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a762adbb598bbf7881d4f304b9b701870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_is_eof_object</definition>
        <argsstring>(pmt_t obj)</argsstring>
        <name>pmt_is_eof_object</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>return true if obj is the EOF object, otherwise return false. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="741"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a74d783fbff16a7120b4b3aa5d4496b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_read</definition>
        <argsstring>(std::istream &amp;port)</argsstring>
        <name>pmt_read</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>read converts external representations of pmt objects into the objects themselves. Read returns the next object parsable from the given input port, updating port to point to the first character past the end of the external representation of the object.</para><para>If an end of file is encountered in the input before any characters are found that can begin an object, then an end of file object is returned. The port remains open, and further attempts to read will also return an end of file object. If an end of file is encountered after the beginning of an object&apos;s external representation, but the external representation is incomplete and therefore not parsable, an error is signaled. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="758"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1afc9b38978f8c91be90e17580e70f4f40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_write</definition>
        <argsstring>(pmt_t obj, std::ostream &amp;port)</argsstring>
        <name>pmt_write</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type>std::ostream &amp;</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a written representation of <computeroutput>obj</computeroutput> to the given <computeroutput>port</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="763"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa0313943107adc90729d8d72396daaf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> std::string</type>
        <definition>GRUEL_API std::string pmt::pmt_write_string</definition>
        <argsstring>(pmt_t obj)</argsstring>
        <name>pmt_write_string</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a string representation of <computeroutput>obj</computeroutput>. This is the same output as would be generated by pmt_write. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="769"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a00bbbca4612cf6112cac5d506199f57e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> std::ostream &amp;</type>
        <definition>GRUEL_API std::ostream&amp; pmt::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, pmt_t obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="772"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aef241cfd8cabf5a7e363d7041ccbe1bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_print</definition>
        <argsstring>(pmt_t v)</argsstring>
        <name>pmt_print</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Write pmt string representation to stdout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="777"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1abd8e2c3ab8ea55b273b9d042814a075d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> bool</type>
        <definition>GRUEL_API bool pmt::pmt_serialize</definition>
        <argsstring>(pmt_t obj, std::streambuf &amp;sink)</argsstring>
        <name>pmt_serialize</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <param>
          <type>std::streambuf &amp;</type>
          <declname>sink</declname>
        </param>
        <briefdescription>
<para>Write portable byte-serial representation of <computeroutput>obj</computeroutput> to <computeroutput>sink</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="788"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a60fd58fe554cbeef5440b3ffb2814d8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_deserialize</definition>
        <argsstring>(std::streambuf &amp;source)</argsstring>
        <name>pmt_deserialize</name>
        <param>
          <type>std::streambuf &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Create obj from portable byte-serial representation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="793"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ad483e5c06e7a31b5818f0baabb167854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> void</type>
        <definition>GRUEL_API void pmt::pmt_dump_sizeof</definition>
        <argsstring>()</argsstring>
        <name>pmt_dump_sizeof</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="796"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a9ec30079614ead54081b29c3473181be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> std::string</type>
        <definition>GRUEL_API std::string pmt::pmt_serialize_str</definition>
        <argsstring>(pmt_t obj)</argsstring>
        <name>pmt_serialize_str</name>
        <param>
          <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Provide a simple string generating interface to pmt&apos;s serialize function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="801"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a21ef652ea9953cc509d0f112a10a1cf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="api_8h_1af4aaed4185febb5244160f8484a6bc16" kindref="member">GRUEL_API</ref> <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>GRUEL_API pmt_t pmt::pmt_deserialize_str</definition>
        <argsstring>(std::string str)</argsstring>
        <name>pmt_deserialize_str</name>
        <param>
          <type>std::string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Provide a simple string generating interface to pmt&apos;s deserialize function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="806"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a90faad6086ac00280e0cfd8bb541bd64" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>mp</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Make pmt symbol. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="34" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa2dfbbf50e23200827e9596bd3dbf3e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const char *s)</argsstring>
        <name>mp</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Make pmt symbol. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="41" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a2b70fa1277feb796c4d18bec8c5c29ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(long x)</argsstring>
        <name>mp</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Make pmt long. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="47" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a47e52cfd9e251fd413a29cf336bdb3f5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(int x)</argsstring>
        <name>mp</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Make pmt long. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="53" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a7e6637f6cf126ed6fc4642d176277ef5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(double x)</argsstring>
        <name>mp</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Make pmt double. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="59" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a9ee9d8f890d409fc9be4258d5cf5f192" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(std::complex&lt; double &gt; z)</argsstring>
        <name>mp</name>
        <param>
          <type>std::complex&lt; double &gt;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Make pmt complex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="66" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a35d748c13a5dd4791f438d4faef14696" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(std::complex&lt; float &gt; z)</argsstring>
        <name>mp</name>
        <param>
          <type>std::complex&lt; float &gt;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Make pmt complex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="73" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a017511b5df5fad9de0c57dbc6e40ba45" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(boost::shared_ptr&lt; gruel::msg_accepter &gt; ma)</argsstring>
        <name>mp</name>
        <param>
          <type>boost::shared_ptr&lt; <ref refid="classgruel_1_1msg__accepter" kindref="compound">gruel::msg_accepter</ref> &gt;</type>
          <declname>ma</declname>
        </param>
        <briefdescription>
<para>Make pmt msg_accepter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="80" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a666fae66f3c79baf04cba8cc751bb519" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const void *data, size_t len_in_bytes)</argsstring>
        <name>mp</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len_in_bytes</declname>
        </param>
        <briefdescription>
<para>Make pmt Binary Large Object (BLOB) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="87" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ab3b99af6348a131fd3b45964a2d3b6da" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const pmt_t &amp;e0)</argsstring>
        <name>mp</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <briefdescription>
<para>Make tuple. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="94" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a9c0c808a7048ad5a985e7320f4d33477" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1)</argsstring>
        <name>mp</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <briefdescription>
<para>Make tuple. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="101" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1abd7520ae0376e5170574641720bec505" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2)</argsstring>
        <name>mp</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
<para>Make tuple. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="108" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1afdee46085171ef765393e8ee430fbff6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3)</argsstring>
        <name>mp</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <briefdescription>
<para>Make tuple. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="115" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa221c1e506893916fd63dc3277c97e8c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4)</argsstring>
        <name>mp</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <briefdescription>
<para>Make tuple. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="122" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1aa1997cda1998278fd252163b0767596e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4, const pmt_t &amp;e5)</argsstring>
        <name>mp</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e5</declname>
        </param>
        <briefdescription>
<para>Make tuple. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="129" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1abc97c408a75ec28807caefb97f2a9391" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4, const pmt_t &amp;e5, const pmt_t &amp;e6)</argsstring>
        <name>mp</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e5</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e6</declname>
        </param>
        <briefdescription>
<para>Make tuple. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="136" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="135" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a5202ec82d6b890c70207067b80f7b348" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4, const pmt_t &amp;e5, const pmt_t &amp;e6, const pmt_t &amp;e7)</argsstring>
        <name>mp</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e5</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e6</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e7</declname>
        </param>
        <briefdescription>
<para>Make tuple. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="143" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1ae31ec5a716e1951b5ce3fcdba786dcea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4, const pmt_t &amp;e5, const pmt_t &amp;e6, const pmt_t &amp;e7, const pmt_t &amp;e8)</argsstring>
        <name>mp</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e5</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e6</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e7</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e8</declname>
        </param>
        <briefdescription>
<para>Make tuple. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="150" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespacepmt_1a2bad807c4a8c8d42bbf96a035f89e51e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref></type>
        <definition>static pmt_t pmt::mp</definition>
        <argsstring>(const pmt_t &amp;e0, const pmt_t &amp;e1, const pmt_t &amp;e2, const pmt_t &amp;e3, const pmt_t &amp;e4, const pmt_t &amp;e5, const pmt_t &amp;e6, const pmt_t &amp;e7, const pmt_t &amp;e8, const pmt_t &amp;e9)</argsstring>
        <name>mp</name>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e3</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e4</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e5</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e6</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e7</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e8</declname>
        </param>
        <param>
          <type>const <ref refid="namespacepmt_1ab4b70d9293452eb74dd07c670e6811fa" kindref="member">pmt_t</ref> &amp;</type>
          <declname>e9</declname>
        </param>
        <briefdescription>
<para>Make tuple. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" line="157" bodyfile="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt_sugar.h" bodystart="156" bodyend="159"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This file defines a polymorphic type and the operations on it.</para><para>It draws heavily on the idea of scheme and lisp data types. The interface parallels that in Guile 1.8, with the notable exception that these objects are transparently reference counted.</para><para>This file is included by <ref refid="pmt_8h" kindref="compound">pmt.h</ref> and contains pseudo-constructor shorthand for making pmt objects </para>    </detaileddescription>
    <location file="/home/alexzh/gr_alex/gnuradio/gruel/src/include/gruel/pmt.h" line="48"/>
  </compounddef>
</doxygen>
